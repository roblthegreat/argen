<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2019r1.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Project" ID="0">
 <ProjectSavedInVers>2019.011</ProjectSavedInVers>
 <MajorVersion>1</MajorVersion>
 <MinorVersion>0</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>0</NonRelease>
 <Region></Region>
 <ShortVersion></ShortVersion>
 <LongVersion></LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>1</AutoIncVersion>
 <DefaultViewID>0</DefaultViewID>
 <ProjectType>0</ProjectType>
 <DefaultLanguage>0</DefaultLanguage>
 <CurrentLanguage>0</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>18688</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonMachOName>ActiveRecord</BuildCarbonMachOName>
 <BundleIdentifier>com.strawberrysw.activerecord</BundleIdentifier>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>ActiveRecord.exe</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName>Tim Parnell</BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <BuildWinFileDescription></BuildWinFileDescription>
 <UseGDIPlus>1</UseGDIPlus>
 <HiDPI>1</HiDPI>
 <DarkMode>1</DarkMode>
 <BuildLinuxX86Name>ActiveRecord</BuildLinuxX86Name>
 <DebuggerCommandLine></DebuggerCommandLine>
 <LinuxArchitecture>1</LinuxArchitecture>
 <MacArchitecture>1</MacArchitecture>
 <WindowsArchitecture>1</WindowsArchitecture>
 <OptimizationLevel>0</OptimizationLevel>
 <CopyWindowsRedist>0</CopyWindowsRedist>
 <WindowsVersions>{35138b9a-5d96-4fbd-8e2d-a2440225f93a}|{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}|{1f676c76-80e1-4239-95bb-83d0f6d0da78}|{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}</WindowsVersions>
 <WindowsRunAs>0</WindowsRunAs>
</block>
<block type="Module" ID="1972432888">
 <ObjName>TP_ActiveRecord</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Assert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>522688511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Assert(bCondition as boolean, sMessage as string = "")</SourceLine>
   <SourceLine>// System to only raise exceptions during debug</SourceLine>
   <SourceLine>#if DebugBuild then</SourceLine>
   <SourceLine>if not bCondition then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.AssertionFailedException(sMessage)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>bCondition as boolean, sMessage as string = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>149897215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>//Use BeginTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(GetTypeInfo(TP_ActiveRecord.Base))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ColumnName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1149880319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ColumnName(rs as RecordSet) As String</SourceLine>
   <SourceLine>dim iIndex as integer = -1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as Integer = 0 to rs.FieldCount - 1</SourceLine>
   <SourceLine>select case rs.IdxField(i+1).Name</SourceLine>
   <SourceLine>case "ColumnName"</SourceLine>
   <SourceLine>iIndex = i + 1</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if iIndex &gt; -1 then</SourceLine>
   <SourceLine>Return rs.IdxField(iIndex).StringValue</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "unknown"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1881145343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>//Use CommitTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(GetTypeInfo(TP_ActiveRecord.Base))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Connect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>316207103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Connect(toDB as Database)</SourceLine>
   <SourceLine>// Shortcut method will automatically connect to the base classes</SourceLine>
   <SourceLine>// However, you can't use multiple namespaces with this shortcut.</SourceLine>
   <SourceLine>Connect(GetTypeInfo(TP_ActiveRecord.Base), toDB)</SourceLine>
   <SourceLine>Connect(GetTypeInfo(TP_ActiveRecord.View), toDB)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Connect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>736212991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Connect(ty as Introspection.TypeInfo, toDB as Database)</SourceLine>
   <SourceLine>if ty=nil or toDB=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = CreateDatabaseAdapter(toDB)</SourceLine>
   <SourceLine>GetContext.ConnectionAdapter_Set(ty, adp)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, toDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CreateDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>836622335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CreateDatabaseAdapter(db as Database) As TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>if db isa SQLiteDatabase then</SourceLine>
   <SourceLine>return new SQLiteDatabaseAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>if db isa CubeSQLServer then</SourceLine>
   <SourceLine>return new cubeSQLDatabaseAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>if db isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>return new MSSQLServerAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS</SourceLine>
   <SourceLine>if db isa SQLDatabaseMBS then</SourceLine>
   <SourceLine>return new MSSQLServerAdapterMBS(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>if db isa MySQLCommunityServer then</SourceLine>
   <SourceLine>return new MySQLCommunityServerAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>if db isa ODBCDatabase then</SourceLine>
   <SourceLine>return new ODBCServerAdapter(db)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>return new PostgreSQLDatabaseAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>if db isa VSQLiteDatabase then</SourceLine>
   <SourceLine>return new VSQLiteDatabaseAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ex as new UnsupportedOperationException</SourceLine>
   <SourceLine>ex.Message = "Unsupported database type: " + Introspection.GetType(db).FullName</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as Database</ItemParams>
  <ItemResult>TP_ActiveRecord.DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>Disconnect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>194148351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Disconnect()</SourceLine>
   <SourceLine>'Disconnect the base active record class from the database</SourceLine>
   <SourceLine>Disconnect( GetTypeInfo(TP_ActiveRecord.Base) )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Disconnect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1257445375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Disconnect(ty as Introspection.TypeInfo)</SourceLine>
   <SourceLine>'Disconnect a specific active record class from the database</SourceLine>
   <SourceLine>if ty=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>ctx.ConnectionAdapter_Remove(ty)</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2011.04</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>if ctx.ConnectionAdapter_Count=0 then</SourceLine>
   <SourceLine>'kill the context</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(csCtx)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>m_dictContext.Remove(Session.Identifier)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Field</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>717867007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Field(sFieldName as string) As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>return new FieldOpt(sFieldName)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as string</ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>FieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>555405311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FieldType(rs as RecordSet) As Integer</SourceLine>
   <SourceLine>dim iIndex as integer = -1</SourceLine>
   <SourceLine>for i as Integer = 0 to rs.FieldCount - 1</SourceLine>
   <SourceLine>select case rs.IdxField(i+1).Name</SourceLine>
   <SourceLine>case "FieldType"</SourceLine>
   <SourceLine>iIndex = i + 1</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if iIndex &gt; -1 then</SourceLine>
   <SourceLine>Return rs.IdxField(iIndex).IntegerValue</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Field_IsPrimary</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>559550463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Field_IsPrimary(rs as RecordSet) As Boolean</SourceLine>
   <SourceLine>for i as Integer = 0 to rs.FieldCount - 1</SourceLine>
   <SourceLine>select case rs.IdxField(i+1).Name</SourceLine>
   <SourceLine>case "IsPrimary"</SourceLine>
   <SourceLine>Return rs.IdxField(i+1).BooleanValue</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>FindFieldProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1505198079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FindFieldProperty(tyClass as Introspection.TypeInfo, sField as string) As Introspection.PropertyInfo</SourceLine>
   <SourceLine>dim iPrefixType as integer = 0 //Override to do prefixes and suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static arsAllowPrefix() as string //= Array(^2) //Override for your own prefixes</SourceLine>
   <SourceLine>static arsAllowSuffix() as string //= Array(^3) //Override for your own suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Match the field to a property of the class.</SourceLine>
   <SourceLine>select case iPrefixType</SourceLine>
   <SourceLine>case 0</SourceLine>
   <SourceLine>// No prefix / suffix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each pi as Introspection.PropertyInfo in tyClass.GetProperties</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pi.Name = sField then</SourceLine>
   <SourceLine>return pi 'accept exact match</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 1</SourceLine>
   <SourceLine>// Prefix</SourceLine>
   <SourceLine>for each pi as Introspection.PropertyInfo in tyClass.GetProperties</SourceLine>
   <SourceLine>if pi.Name.Right(sField.Len) = sField then</SourceLine>
   <SourceLine>'check for a prefix match</SourceLine>
   <SourceLine>dim sPrefix as string = pi.Name.Mid(1, pi.Name.Len - sField.Len)</SourceLine>
   <SourceLine>if arsAllowPrefix.IndexOf(sPrefix) &gt;-1 then</SourceLine>
   <SourceLine>return pi</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>// Suffix</SourceLine>
   <SourceLine>for each pi as Introspection.PropertyInfo in tyClass.GetProperties</SourceLine>
   <SourceLine>if pi.name.left(sField.Len) = sField then</SourceLine>
   <SourceLine>'Check for suffix match</SourceLine>
   <SourceLine>dim sSuffix as string = pi.Name.Right(pi.Name.Len - sField.Len)</SourceLine>
   <SourceLine>if arsAllowSuffix.IndexOf(sSuffix) &gt; -1 then</SourceLine>
   <SourceLine>return pi</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo, sField as string</ItemParams>
  <ItemResult>Introspection.PropertyInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>FindMatchingTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>187074559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FindMatchingTable(adp as TP_ActiveRecord.DatabaseAdapter, sClassName as string) As string</SourceLine>
   <SourceLine>dim sTable as string = sClassName</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sTable = "tbl" + sClassName</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'if the class is clsSomething, look for Something and tblSomething</SourceLine>
   <SourceLine>'but not if the letter after cls is lowercase</SourceLine>
   <SourceLine>dim sFourth as string = Mid(sClassName,4,1)</SourceLine>
   <SourceLine>if Left( sClassName, 3 ) = "cls" and _</SourceLine>
   <SourceLine>StrComp( sFourth, "A", 0 ) &gt;= 0 and _</SourceLine>
   <SourceLine>StrComp( sFourth, "Z", 0 ) &lt;=0 then</SourceLine>
   <SourceLine>sTable = sClassName.Mid(4)</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sTable = "tbl" + sTable</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>adp as TP_ActiveRecord.DatabaseAdapter, sClassName as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GetContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2115770367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetContext() As TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine>if m_ctxDefault is nil then</SourceLine>
   <SourceLine>m_ctxDefault = new TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if RBVersion &gt;= 2011.04</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>if not Session.Available then</SourceLine>
   <SourceLine>return m_ctxDefault</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(csCtx)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictContext=nil then</SourceLine>
   <SourceLine>m_dictContext = new Dictionary</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not m_dictContext.HasKey(Session.Identifier) then</SourceLine>
   <SourceLine>m_dictContext.Value(Session.Identifier) = new TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m_dictContext.Value(Session.Identifier)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_ctxDefault</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.P.Context</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1080309759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>//GetDatabaseAdapter</SourceLine>
   <SourceLine>//Useful if you want to get do transactions outside of the Base Class.</SourceLine>
   <SourceLine>//Example:  You know you have some lengthy operations to do.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(GetTypeInfo(TP_ActiveRecord.Base))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return adp</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableDefs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2067343359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableDefs() As TP_ActiveRecord.TableDef()</SourceLine>
   <SourceLine>dim aroTableDef() as TP_ActiveRecord.TableDef</SourceLine>
   <SourceLine>for each oTableInfo as TP_ActiveRecord.P.TableInfo in GetContext.TableInfo_List</SourceLine>
   <SourceLine>dim aro() as TP_ActiveRecord.FieldDef</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim o as new TP_ActiveRecord.FieldDef( oFieldInfo.sFieldName, oFieldInfo.enFieldType, oFieldInfo.bPrimaryKey, oFieldInfo.bForeignKey)</SourceLine>
   <SourceLine>aro.Append(o)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableDef as new TP_ActiveRecord.TableDef(oTableInfo.sTableName, oTableInfo.sPrimaryKey, aro)</SourceLine>
   <SourceLine>aroTableDef.Append(oTableDef)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return aroTableDef</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.TableDef()</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>96854015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableInfo(ty as Introspection.TypeInfo) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetContext.TableInfo_Get(ty)</SourceLine>
   <SourceLine>if oTableInfo&lt;&gt;nil then</SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'try to map the class to a table by name</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp&lt;&gt;nil then</SourceLine>
   <SourceLine>dim sTable as string</SourceLine>
   <SourceLine>sTable = FindMatchingTable( adp, ty.Name )</SourceLine>
   <SourceLine>if sTable&lt;&gt;"" then</SourceLine>
   <SourceLine>Table adp.Db, sTable, ty</SourceLine>
   <SourceLine>return GetContext.TableInfo_Get(ty)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'table not registered and not found by name</SourceLine>
   <SourceLine>dim ex as RuntimeException</SourceLine>
   <SourceLine>ex.Message = "Class does not have a table registered for it: " + ty.FullName</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTypeConstructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1758466047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTypeConstructor(oTableInfo as TP_ActiveRecord.P.TableInfo) As Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each o as Introspection.ConstructorInfo in oTableInfo.tyClass.GetConstructors</SourceLine>
   <SourceLine>dim aroParam() as Introspection.ParameterInfo = o.GetParameters</SourceLine>
   <SourceLine>if aroParam.Ubound = 0 then</SourceLine>
   <SourceLine>if aroParam(0).ParameterType.FullName = "RecordSet" then</SourceLine>
   <SourceLine>oConstructor = o</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oConstructor</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult>Introspection.ConstructorInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapFieldInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>131198975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapFieldInfo(tyClass as Introspection.TypeInfo, rs as RecordSet, aroFieldOpt() as FieldOpt) As TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>' static arsAllowPrefix() as string = Array("m_", "m_id","i","s","dtm","dt","b","d","v","pict")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sField as string = ColumnName(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'extract the field option if one was passed in for this field</SourceLine>
   <SourceLine>dim oFieldOpt as FieldOpt</SourceLine>
   <SourceLine>for each o as FieldOpt in aroFieldOpt</SourceLine>
   <SourceLine>if o.FieldName=sField then</SourceLine>
   <SourceLine>oFieldOpt = o</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oFieldOpt&lt;&gt;nil and oFieldOpt.IsIgnored then</SourceLine>
   <SourceLine>return nil 'ignore this field</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Find the database field type</SourceLine>
   <SourceLine>dim enFieldType as DBType</SourceLine>
   <SourceLine>dim iFieldType as integer = FieldType(rs)</SourceLine>
   <SourceLine>select case iFieldType</SourceLine>
   <SourceLine>case 1 // MSSQL bit</SourceLine>
   <SourceLine>enFieldType = DBType.DBoolean</SourceLine>
   <SourceLine>case 2 'smallint</SourceLine>
   <SourceLine>enFieldType = DBType.DSmallInt</SourceLine>
   <SourceLine>case 3 'integer</SourceLine>
   <SourceLine>enFieldType = DBType.DInteger</SourceLine>
   <SourceLine>case 4 'Serial</SourceLine>
   <SourceLine>enFieldType = DBType.DText</SourceLine>
   <SourceLine>case 5 'text or varchar</SourceLine>
   <SourceLine>enFieldType = DBType.DText</SourceLine>
   <SourceLine>case 6 'float</SourceLine>
   <SourceLine>enFieldType = DBType.DFloat</SourceLine>
   <SourceLine>case 7 'double</SourceLine>
   <SourceLine>enFieldType = DBType.DDouble</SourceLine>
   <SourceLine>case 8 'date</SourceLine>
   <SourceLine>enFieldType = DBType.DDate</SourceLine>
   <SourceLine>case 9 'time</SourceLine>
   <SourceLine>enFieldType = DBType.DTime</SourceLine>
   <SourceLine>case 10 'timestamp</SourceLine>
   <SourceLine>enFieldType = DBType.DTimestamp</SourceLine>
   <SourceLine>case 11 'currency</SourceLine>
   <SourceLine>enFieldType = DBType.DCurrency</SourceLine>
   <SourceLine>case 12 'boolean</SourceLine>
   <SourceLine>enFieldType = DBType.DBoolean</SourceLine>
   <SourceLine>case 13 'Decimal</SourceLine>
   <SourceLine>enFieldType = DBType.DDecimal</SourceLine>
   <SourceLine>case 14 'binary</SourceLine>
   <SourceLine>enFieldType = DBType.DBlob</SourceLine>
   <SourceLine>case 15 'blob</SourceLine>
   <SourceLine>enFieldType = DBType.DBlob</SourceLine>
   <SourceLine>case 16 'varbinary</SourceLine>
   <SourceLine>enFieldType = DBType.DBlob</SourceLine>
   <SourceLine>case 18 'String</SourceLine>
   <SourceLine>enFieldType = DBType.DText</SourceLine>
   <SourceLine>case 19 'int64</SourceLine>
   <SourceLine>enFieldType = DBType.DInt64</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Match the field to a property of the class.</SourceLine>
   <SourceLine>' Properties are named with a prefix:  &lt;prefix&gt;FieldName = FieldName</SourceLine>
   <SourceLine>dim piFound as Introspection.PropertyInfo</SourceLine>
   <SourceLine>piFound = FindFieldProperty(tyClass, sField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if piFound=nil then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "No property for field " +tyclass.FullName + "." + sField )</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oFieldInfo as new TP_ActiveRecord.P.FieldInfo(sField, piFound, tyClass)</SourceLine>
   <SourceLine>oFieldInfo.enFieldType = enFieldType</SourceLine>
   <SourceLine>if Field_IsPrimary(rs) then</SourceLine>
   <SourceLine>oFieldInfo.bPrimaryKey = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Foreign Key Support</SourceLine>
   <SourceLine>dim oFieldProp as Introspection.PropertyInfo = FindFieldProperty(tyClass, sField)</SourceLine>
   <SourceLine>if oFieldProp &lt;&gt; nil then</SourceLine>
   <SourceLine>dim aroAttributes() as Introspection.AttributeInfo = oFieldProp.GetAttributes</SourceLine>
   <SourceLine>for each oAttrib as Introspection.AttributeInfo in aroAttributes</SourceLine>
   <SourceLine>if oAttrib.Name = "ForeignKey" then</SourceLine>
   <SourceLine>oFieldInfo.bForeignKey = (oAttrib.Value = "True")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next oAttrib</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oFieldInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo, rs as RecordSet, aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult>TP_ActiveRecord.P.FieldInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>297150463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapTableInfo(db as Database, sTable as string, tyClass as Introspection.TypeInfo, aroFieldOpt() as FieldOpt, IsView as boolean = false) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'Map fields in the database to properties on the class and</SourceLine>
   <SourceLine>'return a list of &lt;field&gt; : &lt;propertyInfo&gt; pairs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as new TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo.tyClass = tyClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase then</SourceLine>
   <SourceLine>'Database.FieldSchema does not work with PostgreSQL Views.</SourceLine>
   <SourceLine>'It does not return field info.</SourceLine>
   <SourceLine>'So we cast db to PostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase and IsView = true then</SourceLine>
   <SourceLine>dim dbPostGresSQL as PostgreSQLDatabase = PostgreSQLDatabase(db)</SourceLine>
   <SourceLine>rs = dbPostGresSQL.FieldSchema(sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>rs = Db.FieldSchema(sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TP_ActiveRecord.kConfigUseMSSQLServerMBS then</SourceLine>
   <SourceLine>' mbs does not support or implement FIELDSCHEMA</SourceLine>
   <SourceLine>if db isa SQLDatabaseMBS then</SourceLine>
   <SourceLine>dim mbs_db as SQLDatabaseMBS = SQLDatabaseMBS(db)</SourceLine>
   <SourceLine>' since mbs can support many different dbs through this ssame set up </SourceLine>
   <SourceLine>' we need to see which we have to know how to get the right filed schema query</SourceLine>
   <SourceLine>if mbs_db.ServerVersionString.Left(20) = "Microsoft SQL Server" then</SourceLine>
   <SourceLine>dim stmt as SQLPreparedStatementMBS = mbs_db.Prepare(TP_ActiveRecord.MSSQLServerAdapterMBS.kFieldSchema)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = stmt.SQLSelect(sTable, sTable, sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// No workaround needed</SourceLine>
   <SourceLine>rs = Db.FieldSchema(sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(rs.EOF=false, "Table not found: " + sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>dim oFieldInfo as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>oFieldInfo = MapFieldInfo(tyClass, rs, aroFieldOpt)</SourceLine>
   <SourceLine>if oFieldInfo&lt;&gt;nil then</SourceLine>
   <SourceLine>if oFieldInfo.bPrimaryKey then</SourceLine>
   <SourceLine>oTableInfo.sPrimaryKey = oFieldInfo.sFieldName</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.aroField.Append(oFieldInfo)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsView = false then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(oTableInfo.sPrimaryKey&lt;&gt;"", "The table needs to have a primary key")</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo.sTableName = sTable</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as Database, sTable as string, tyClass as Introspection.TypeInfo, aroFieldOpt() as FieldOpt, IsView as boolean = false</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1648932863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapTableInfo(tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'Map fields in the database to properties on the class and</SourceLine>
   <SourceLine>'return a list of &lt;field&gt; : &lt;propertyInfo&gt; pairs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>' dim pi as Introspection.Propertyinfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = new TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo.sTableName = oTableDef.sTableName</SourceLine>
   <SourceLine>oTableInfo.sPrimaryKey = oTableDef.sPrimaryKey</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey = FindFieldProperty(tyClass, oTableInfo.sPrimaryKey)</SourceLine>
   <SourceLine>if oTableInfo.piPrimaryKey=nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.tyClass = tyClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldDef as TP_ActiveRecord.FieldDef in oTableDef.aroField</SourceLine>
   <SourceLine>dim oFieldInfo as new TP_ActiveRecord.P.FieldInfo(oFieldDef.sFieldName, FindFieldProperty(tyClass, oFieldDef.sFieldName), tyClass)</SourceLine>
   <SourceLine>oFieldInfo.bPrimaryKey = oFieldDef.IsPrimaryKey</SourceLine>
   <SourceLine>oFieldInfo.bForeignKey = oFieldDef.IsForeignKey</SourceLine>
   <SourceLine>oFieldInfo.enFieldType = oFieldDef.enFieldType</SourceLine>
   <SourceLine>if oFieldInfo.piFieldProperty=nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.aroField.Append(oFieldInfo)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>Query</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>290592767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Query(ty as Introspection.TypeInfo, sCriteria as string = "", sOrder as string = "") As Variant()</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not ty.IsSubclassOf( GetTypeInfo( Base ) ) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Message = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aro() as Variant</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo( ty )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>oConstructor = GetTypeConstructor(oTableInfo)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = adp.SelectList(oTableInfo.sTableName, sCriteria, sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>dim arv() as Variant</SourceLine>
   <SourceLine>arv.Append(rs)</SourceLine>
   <SourceLine>dim oBase as Base = oConstructor.Invoke(arv)</SourceLine>
   <SourceLine>aro.Append( oBase )</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, sCriteria as string = "", sOrder as string = ""</ItemParams>
  <ItemResult>Variant()</ItemResult>
 </Method>
 <Method>
  <ItemName>QueryRecordset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1548806143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function QueryRecordset(ty as Introspection.TypeInfo, sql as String) As RecordSet</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not ty.IsSubclassOf( GetTypeInfo( Base ) ) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Message = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return adp.SQLSelect(sql)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, sql as String</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1981564927</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>// Use RollbackTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(GetTypeInfo(TP_ActiveRecord.Base))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLExecuteRaiseOnError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1699016703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SQLExecuteRaiseOnError(extends db as Database, sql as String)</SourceLine>
   <SourceLine>db.SQLExecute( sql )</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim err as new TP_ActiveRecord.DatabaseException( db.ErrorMessage, sql )</SourceLine>
   <SourceLine>err.ErrorCode = db.ErrorCode</SourceLine>
   <SourceLine>raise err</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as Database, sql as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLExecuteRaiseOnError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1425260543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SQLExecuteRaiseOnError(extends stmt as PreparedSQLStatement, db as Database)</SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException( db.ErrorMessage, "" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends stmt as PreparedSQLStatement, db as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLSelectRaiseOnError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1549099007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLSelectRaiseOnError(extends db as Database, sql as String) As RecordSet</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelect( sql )</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim err as new TP_ActiveRecord.DatabaseException( db.ErrorMessage, sql )</SourceLine>
   <SourceLine>err.ErrorCode = db.ErrorCode</SourceLine>
   <SourceLine>raise err</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as Database, sql as String</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SQLSelectRaiseOnError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>699637759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLSelectRaiseOnError(extends stmt as PreparedSQLStatement, db as Database) As RecordSet</SourceLine>
   <SourceLine>dim rs as RecordSet = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException( db.ErrorMessage, "" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends stmt as PreparedSQLStatement, db as Database</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>StringValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>297115647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StringValue(extends enDbType as TP_ActiveRecord.DbType) As string</SourceLine>
   <SourceLine>select case enDBType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>return "DInteger"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>return "DSmallInt"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>return "DDouble"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>return "DDate"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>return "DTime"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>return "DTimestamp"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>return "DBoolean"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>return "DBlob"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>return "DText"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>return "DInt64"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>return "DFloat"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBtype.DCurrency</SourceLine>
   <SourceLine>return "DCurrency"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DBType.DDecimal</SourceLine>
   <SourceLine>Return "DDecimal"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>// Unimplemented</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends enDbType as TP_ActiveRecord.DbType</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>Table</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>881367039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Table(db as Database, sTable as string, tyClass as Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo( db, sTable, tyClass, aroFieldOpt )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as Database, sTable as string, tyClass as Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Table</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2098714623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Table(tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo(tyClass, oTableDef)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>VerifyClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1019101183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub VerifyClass(tyClass as Introspection.TypeInfo)</SourceLine>
   <SourceLine>// Verify that all the fields marked as DatabaseField</SourceLine>
   <SourceLine>// are on the table, assert an exception if not.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Collect all of the known table fields into an array</SourceLine>
   <SourceLine>dim arsDBFields() as String</SourceLine>
   <SourceLine>dim oInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo(tyClass)</SourceLine>
   <SourceLine>for i as Integer = 0 to oInfo.aroField.Ubound</SourceLine>
   <SourceLine>arsDBFields.Append(oInfo.aroField(i).sFieldName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Iterate the properties</SourceLine>
   <SourceLine>dim aroProperties() as Introspection.PropertyInfo = tyClass.GetProperties</SourceLine>
   <SourceLine>for each oProp as Introspection.PropertyInfo in aroProperties</SourceLine>
   <SourceLine>// Get the property attribtues</SourceLine>
   <SourceLine>dim aroAttributes() as Introspection.AttributeInfo = oProp.GetAttributes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Look for the DatabaseField flag</SourceLine>
   <SourceLine>dim bFlaggedAsDBField as Boolean</SourceLine>
   <SourceLine>for each oAttrib as Introspection.AttributeInfo in aroAttributes</SourceLine>
   <SourceLine>if oAttrib.Name = "DatabaseField" then</SourceLine>
   <SourceLine>bFlaggedAsDBField = (oAttrib.Value = "True")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next oAttrib</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If flag was not found, do not process this property</SourceLine>
   <SourceLine>if bFlaggedAsDBField = false then continue for oProp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Iterate the tables to see if they're within this property name</SourceLine>
   <SourceLine>// i.e. the lazy way to check ignoring prefix or suffix settings</SourceLine>
   <SourceLine>dim bPropIsField as Boolean</SourceLine>
   <SourceLine>for each sField as String in arsDBFields</SourceLine>
   <SourceLine>if VerifyClassProperty(oProp.Name, sField) = true then</SourceLine>
   <SourceLine>// Field was found</SourceLine>
   <SourceLine>bPropIsField = true</SourceLine>
   <SourceLine>exit for sField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(bPropIsField, "Database column for property " + _</SourceLine>
   <SourceLine>tyClass.FullName + "." + oProp.Name + " could not be Found.")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next oProp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>VerifyClassProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2050185215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function VerifyClassProperty(sProp as String, sField as String) As Boolean</SourceLine>
   <SourceLine>dim iPrefixType as integer = 0 //Override to do prefixes and suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static arsAllowPrefix() as string //= Array(^2) //Override for your own prefixes</SourceLine>
   <SourceLine>static arsAllowSuffix() as string //= Array(^3) //Override for your own suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Match the field to a property of the class.</SourceLine>
   <SourceLine>select case iPrefixType</SourceLine>
   <SourceLine>case 0</SourceLine>
   <SourceLine>// No prefix / suffix</SourceLine>
   <SourceLine>return (sProp = sField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 1</SourceLine>
   <SourceLine>// Prefix</SourceLine>
   <SourceLine>for each sPrefix as String in arsAllowPrefix</SourceLine>
   <SourceLine>if sProp = sPrefix + sField then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sPrefix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>// Suffix</SourceLine>
   <SourceLine>for each sSuffix as String in arsAllowSuffix</SourceLine>
   <SourceLine>if sProp = sField + sSuffix then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sSuffix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sProp as String, sField as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>View</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1887258623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub View(db as Database, sTable as string, tyClass as Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo( db, sTable, tyClass, aroFieldOpt, true )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as Database, sTable as string, tyClass as Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>View</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>517902335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub View(tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo(tyClass, oTableDef)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>License</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>457777151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>License</NoteLine>
   <NoteLine> Copyright 2011 - 2020, BKeeney Software, Inc.</NoteLine>
   <NoteLine> Copyright 2020, Tim Parnell</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine> MIT License</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine> Permission is hereby granted, free of charge, to any person obtaining a copy</NoteLine>
   <NoteLine> of this software and associated documentation files (the "Software"), to deal</NoteLine>
   <NoteLine> in the Software without restriction, including without limitation the rights</NoteLine>
   <NoteLine> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</NoteLine>
   <NoteLine> copies of the Software, and to permit persons to whom the Software is</NoteLine>
   <NoteLine> furnished to do so, subject to the following conditions:</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine> The above copyright notice and this permission notice shall be included in</NoteLine>
   <NoteLine> all copies or substantial portions of the Software.</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine> THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</NoteLine>
   <NoteLine> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</NoteLine>
   <NoteLine> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</NoteLine>
   <NoteLine> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</NoteLine>
   <NoteLine> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</NoteLine>
   <NoteLine> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</NoteLine>
   <NoteLine> THE SOFTWARE.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Version History</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>216784895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Version History</NoteLine>
   <NoteLine>[2021.01] - April 2, 2021</NoteLine>
   <NoteLine> Fixed:</NoteLine>
   <NoteLine>   - API 2.0 Postgres adapter array issue</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2020.05] - December 9, 2020</NoteLine>
   <NoteLine> Changed:</NoteLine>
   <NoteLine>   - API 2.1 naming (removes 2020r1 support)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2020.04] - October 8, 2020</NoteLine>
   <NoteLine> Fixed:</NoteLine>
   <NoteLine>   - Date-only changes are now recognized</NoteLine>
   <NoteLine>   - IsRecordModified no longer has redundant cases</NoteLine>
   <NoteLine>   - GUID now returns the string version of the ID when not a string</NoteLine>
   <NoteLine>   - API 2.0 library foreign key identification</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2020.03] - August 10, 2020</NoteLine>
   <NoteLine> Fixed:</NoteLine>
   <NoteLine>   - API 2.0 BindValues function</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2020.02] - August 4, 2020</NoteLine>
   <NoteLine> New:</NoteLine>
   <NoteLine>  - MBS SQL DatabaseAdapter for Microsoft SQL Server</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Fixed:</NoteLine>
   <NoteLine>  - MySQL null saving</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changed:</NoteLine>
   <NoteLine>  - Adds support for multiple MSSQL FieldSchema types</NoteLine>
   <NoteLine>  - Desktop now uses connection pooling for threading support</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2020.01] - June 2020</NoteLine>
   <NoteLine> New:</NoteLine>
   <NoteLine>  - API 2.0 support</NoteLine>
   <NoteLine>  - Multiple database connections in one project</NoteLine>
   <NoteLine>  - Database field flagging with support from Propery Attributes</NoteLine>
   <NoteLine>    ↳ Set a property attribute named IsDatabaseField = True on database field properties</NoteLine>
   <NoteLine>  - Foreign key flagging with support from Property Attributes</NoteLine>
   <NoteLine>    ↳ Set a property attribute named IsForeignKey = True on foreign key field properties</NoteLine>
   <NoteLine>  - Saving a nil foreign key will INSERT / UPDATE a NULL for the record</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine> Changed:</NoteLine>
   <NoteLine>  - Rebranded library name</NoteLine>
   <NoteLine>  - Fixed all warnings in the TP_ActiveRecord module</NoteLine>
   <NoteLine>  - Consolidated multiple modules in to TP_ActiveRecord</NoteLine>
   <NoteLine>&#32;</NoteLine>
   <NoteLine> Removed:</NoteLine>
   <NoteLine>  - REALSQLDatabase</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2017.01] - November 2017</NoteLine>
   <NoteLine> New:</NoteLine>
   <NoteLine>  - GUID support</NoteLine>
   <NoteLine>  - Support for PostgreSQL Views</NoteLine>
   <NoteLine>  - Rollback Method to MSSQLServerAdapter</NoteLine>
   <NoteLine>  - Dictionary for ARGen Audit trail</NoteLine>
   <NoteLine>  - Support for currencty DB type</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine> Fixed:</NoteLine>
   <NoteLine>  - Decimal type no longer missing from MySQL</NoteLine>
   <NoteLine>  - Corrected compiler constants for missing DB plugins</NoteLine>
   <NoteLine>  - PostgreSQL no longer returns the wrong ID on insert</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2015.01] - Fall 2015</NoteLine>
   <NoteLine> New Features:</NoteLine>
   <NoteLine>  - Added ODBC Database to the project</NoteLine>
   <NoteLine>  - Added SQLite Valentina to the project.  Thanks to Ruslan for providing it.</NoteLine>
   <NoteLine>  - Added the View Class.  As the name suggests it allows access to Database Views.</NoteLine>
   <NoteLine>  - Added transaction example to project.</NoteLine>
   <NoteLine>  - Added View (personList) to the example</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine> Changes:</NoteLine>
   <NoteLine>  - Removed some old (and ineffective) Transactional processing code.</NoteLine>
   <NoteLine>  - Cleaned up the demo project to fit more modern BKeeney Standards</NoteLine>
   <NoteLine>  - Fixed a null date issue</NoteLine>
   <NoteLine>  - Optimized desktop version to speed inserts and updates</NoteLine>
   <NoteLine>  - Optimized Field definition to speed up inserts and updates</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine> Totally Unsupported and untested</NoteLine>
   <NoteLine>  - Oracle</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine> Broken in Current Xojo Implementations</NoteLine>
   <NoteLine>  - MS SQL Server - Prepared statements are FUBAR'ed.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2014.01] - May 2014</NoteLine>
   <NoteLine> - Added TP_ActiveRecord to hold configuration constants.</NoteLine>
   <NoteLine> - It's no longer necessary to delete code for database plugins that aren't installed.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2013.01] - Nov 2013</NoteLine>
   <NoteLine> - Added Oracle (totally unsupported and if it doesn't work please don't ask!)</NoteLine>
   <NoteLine> - Added CubeSQL Support</NoteLine>
   <NoteLine> - Added more descriptions when errors occur when plugins are missing</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>###</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>[2013.01] - May 2013</NoteLine>
   <NoteLine> - Removed dependencies to Monkeybread</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>csCtx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1760649215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>csCtx As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>csCtx As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>if m_csCtx=nil then</SourceLine>
   <SourceLine>'Mutexes work on Mac and Linux but not Windows.</SourceLine>
   <SourceLine>'CriticalSections work on Windows but not Mac.</SourceLine>
   <SourceLine>'(Verified as of 2011 R4.1)</SourceLine>
   <SourceLine>#if TargetWin32</SourceLine>
   <SourceLine>m_csCtx = new CriticalSection</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>m_csCtx = new Mutex("")</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m_csCtx</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>m_csCtx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>395902975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_csCtx As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_csCtx As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_ctxDefault</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>184772607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_ctxDefault As TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_ctxDefault As TP_ActiveRecord.P.Context</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>490223615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictContext As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictContext As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kConfigUseCubeDatabase</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>137064447</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseMSSQLServer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>358170623</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseMSSQLServerMBS</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1478629375</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseMySQLCommunityServer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>270059519</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseODBC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1341026303</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUsePostgreSQLDatabase</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>434868223</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseSQLiteDatabase</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1020952575</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>True</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kConfigUseVSQLiteDatabase</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>398137343</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>False</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kDoubleNullSentinal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1368385535</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1.7E+308</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2127497215</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>2021.01</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>DBType</ItemName>
  <ItemFlags>1</ItemFlags>
  <ItemType>Integer</ItemType>
  <ItemName>DBType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1380765695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DInteger</SourceLine>
   <SourceLine>DSmallInt</SourceLine>
   <SourceLine>DDouble</SourceLine>
   <SourceLine>DDate</SourceLine>
   <SourceLine>DTime</SourceLine>
   <SourceLine>DTimestamp</SourceLine>
   <SourceLine>DBoolean</SourceLine>
   <SourceLine>DBlob</SourceLine>
   <SourceLine>DText</SourceLine>
   <SourceLine>DInt64</SourceLine>
   <SourceLine>DFloat</SourceLine>
   <SourceLine>DCurrency</SourceLine>
   <SourceLine>DNotUsed</SourceLine>
   <SourceLine>DDecimal</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
<block type="Module" ID="924382242">
 <ObjName>DatabaseConnection</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Property>
  <ItemName>DB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>719468543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DB As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DB As Database</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>iThreadIdentifier</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2081232895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iThreadIdentifier As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iThreadIdentifier As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>oThreadWeakRef</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1006866431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>oThreadWeakRef As WeakRef</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>oThreadWeakRef As WeakRef</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sSessionIdentifier</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>756770815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sSessionIdentifier As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sSessionIdentifier As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iThreadIdentifier</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DB</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Database</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sSessionIdentifier</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1174571055">
 <ObjName>AssertionFailedException</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ActiveRecordException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1283433680">
 <ObjName>DataFile</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ConnectionCleanup</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>136839167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ConnectionCleanup()</SourceLine>
   <SourceLine>// Clean up closed connections</SourceLine>
   <SourceLine>if maroConnectionPool.Ubound &lt; 0 then return</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Collect active session identifiers</SourceLine>
   <SourceLine>dim arsActiveSessions() as String</SourceLine>
   <SourceLine>#if TargetWeb then</SourceLine>
   <SourceLine>dim iSessionMax as Integer = App.SessionCount - 1</SourceLine>
   <SourceLine>for i as Integer = 0 to iSessionMax</SourceLine>
   <SourceLine>dim oThis as WebSession = App.SessionAtIndex(i)</SourceLine>
   <SourceLine>if oThis &lt;&gt; nil then</SourceLine>
   <SourceLine>arsActiveSessions.Append(oThis.Identifier)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused arsActiveSessions</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as Integer = maroConnectionPool.Ubound downto 0</SourceLine>
   <SourceLine>dim oThis as TP_ActiveRecord.DatabaseConnection = maroConnectionPool(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Thread identified connection, now closed</SourceLine>
   <SourceLine>if (oThis.iThreadIdentifier &gt; 0 and oThis.oThreadWeakRef = nil) then</SourceLine>
   <SourceLine>oThis.DB.Close</SourceLine>
   <SourceLine>oThis.DB = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Remove the last reference</SourceLine>
   <SourceLine>maroConnectionPool.Remove(i)</SourceLine>
   <SourceLine>continue for i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Thread identified by session</SourceLine>
   <SourceLine>#if TargetWeb then</SourceLine>
   <SourceLine>if oThis.sSessionIdentifier &lt;&gt; "" then</SourceLine>
   <SourceLine>// Check to see if the session has closed</SourceLine>
   <SourceLine>if oThis.sSessionIdentifier &lt;&gt; "App" and _</SourceLine>
   <SourceLine>arsActiveSessions.IndexOf(oThis.sSessionIdentifier) &lt; 0 then</SourceLine>
   <SourceLine>oThis.DB.Close</SourceLine>
   <SourceLine>oThis.DB = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Remove the last reference</SourceLine>
   <SourceLine>maroConnectionPool.Remove(i)</SourceLine>
   <SourceLine>continue for i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1817751551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DB() As Database</SourceLine>
   <SourceLine>// Connection cleanup</SourceLine>
   <SourceLine>ConnectionCleanup</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Begin the Sorting Hat</SourceLine>
   <SourceLine>#if TargetDesktop or (TargetConsole and not TargetWeb) then</SourceLine>
   <SourceLine>return GetDesktopConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TargetWeb then</SourceLine>
   <SourceLine>return GetWebConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetConnectionByCurrentThread</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1511753727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetConnectionByCurrentThread() As Database</SourceLine>
   <SourceLine>// Find or create a connection identified by the current thread identifier</SourceLine>
   <SourceLine>dim oCurrent as Thread = App.CurrentThread</SourceLine>
   <SourceLine>dim iThreadID as Integer = oCurrent.ThreadID</SourceLine>
   <SourceLine>dim oConnection as TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as Integer = 0 to maroConnectionPool.Ubound</SourceLine>
   <SourceLine>dim oThisConnection as TP_ActiveRecord.DatabaseConnection = maroConnectionPool(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Found the connection</SourceLine>
   <SourceLine>if oThisConnection.iThreadIdentifier = iThreadID then</SourceLine>
   <SourceLine>oConnection = oThisConnection</SourceLine>
   <SourceLine>exit for i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the connection if necessary</SourceLine>
   <SourceLine>if oConnection = nil then</SourceLine>
   <SourceLine>dim oDatabase as Database = OpenDB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oDatabase = nil then</SourceLine>
   <SourceLine>// The database failed to connect, you should handle this.</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the connection object</SourceLine>
   <SourceLine>dim oNewConnection as new TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine>oNewConnection.iThreadIdentifier = iThreadID</SourceLine>
   <SourceLine>oNewConnection.oThreadWeakRef = new WeakRef(oCurrent)</SourceLine>
   <SourceLine>oNewConnection.DB = oDatabase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oConnection = oNewConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Store it</SourceLine>
   <SourceLine>maroConnectionPool.Append(oNewConnection)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Forcibly release this</SourceLine>
   <SourceLine>oCurrent = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the Database</SourceLine>
   <SourceLine>return Database(oConnection.DB)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabase</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1262065663</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabase() As Database</SourceLine>
   <SourceLine>// Prepares a SQLiteDatabase object to connect</SourceLine>
   <SourceLine>// Returns database object if successful</SourceLine>
   <SourceLine>#pragma Error "Set location of your database file"</SourceLine>
   <SourceLine>dim fDB as FolderItem = GetFolderItem("%db_path%", FolderItem.PathTypeNative)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fDB = nil or fDB.Exists = false then</SourceLine>
   <SourceLine>// Be sure to set up the database path in GetDatabaseFile</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oLocalDB as new SQLiteDatabase</SourceLine>
   <SourceLine>oLocalDB.DatabaseFile = fDB</SourceLine>
   <SourceLine>// oLocalDB.EncryptionKey = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the object</SourceLine>
   <SourceLine>return oLocalDB</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabase_MSSQLMBS</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>680574975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabase_MSSQLMBS() As Database</SourceLine>
   <SourceLine>// Used Microsoft SQL Server 2008 and run app on Windows to test this</SourceLine>
   <SourceLine>// install package tdsodbc</SourceLine>
   <SourceLine>#pragma Error "Supply password for the database."</SourceLine>
   <SourceLine>const user = "%template_username%"</SourceLine>
   <SourceLine>const pass = "" // Consider obfuscating the password String</SourceLine>
   <SourceLine>const databaseName = "%template_databasename%"</SourceLine>
   <SourceLine>const server = "%template_host%"</SourceLine>
   <SourceLine>const Port = "%template_port%"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS then</SourceLine>
   <SourceLine>dim con as new SQLDatabaseMBS</SourceLine>
   <SourceLine>dim cs as string</SourceLine>
   <SourceLine>#if TargetLinux then</SourceLine>
   <SourceLine>cs = "DRIVER={libtdsodbc.so};Server="+Server+";UId="+User+";PWD="+Pass+";Database="+DatabaseName+";TDS_VERSION=7.2;Port="+Port</SourceLine>
   <SourceLine>con.DatabaseName = "ODBC:"+cs</SourceLine>
   <SourceLine>con.Option("UseAPI") = "ODBC" </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TargetWindows then</SourceLine>
   <SourceLine>con.UserName = User</SourceLine>
   <SourceLine>con.Password = Pass</SourceLine>
   <SourceLine>con.Option("OLEDBProvider") = "SQLNCLI"</SourceLine>
   <SourceLine>cs = Server + "@"+DatabaseName</SourceLine>
   <SourceLine>con.DatabaseName = "SQLServer:"+cs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TargetMacOS then</SourceLine>
   <SourceLine>static mFrameworks as FolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mFrameworks = nil or mFrameworks.Exists = false then</SourceLine>
   <SourceLine>declare function NSClassFromString lib "AppKit" (className as CFStringRef) as Ptr</SourceLine>
   <SourceLine>declare function mainBundle lib "AppKit" selector "mainBundle" (NSBundleClass as Ptr) as Ptr</SourceLine>
   <SourceLine>declare function resourcePath lib "AppKit" selector "privateFrameworksPath" (NSBundleRef as Ptr) as CfStringRef</SourceLine>
   <SourceLine>mFrameworks = GetFolderItem(resourcePath(mainBundle(NSClassFromString("NSBundle"))), FolderItem.PathTypeNative)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim libtdsodbc as Folderitem = mFrameworks.Child("libtdsodbc.dylib") </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cs = "DRIVER={FREETDS};Server="+Server+";UId="+User+";PWD="+Pass+";Database="+DatabaseName+";TDS_VERSION=7.2;Port="+Port</SourceLine>
   <SourceLine>con.SetFileOption con.kOptionLibraryODBC, libtdsodbc</SourceLine>
   <SourceLine>con.Option("UseAPI") = "ODBC"</SourceLine>
   <SourceLine>con.DatabaseName = "ODBC:"+cs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma Error "Platform not supported"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ende compile </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// DB Library</SourceLine>
   <SourceLine>con.Option("DBPROP_INIT_TIMEOUT") = "10"</SourceLine>
   <SourceLine>con.Option("DBPROP_COMMANDTIMEOUT") = "10"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ODBC sachen</SourceLine>
   <SourceLine>con.Option("SQL_ATTR_QUERY_TIMEOUT") = "10"</SourceLine>
   <SourceLine>con.Option("SQL_ATTR_CONNECTION_TIMEOUT") = "10"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return con</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabase_Server</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1660172287</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabase_Server() As Database</SourceLine>
   <SourceLine>// Prepares a Database object to connect</SourceLine>
   <SourceLine>// Returns database object if successful</SourceLine>
   <SourceLine>dim oLocalDB as new PostgreSQLDatabase</SourceLine>
   <SourceLine>oLocalDB.Host = "%template_host%"</SourceLine>
   <SourceLine>oLocalDB.Port = 5432</SourceLine>
   <SourceLine>oLocalDB.DatabaseName = "%template_databasename%"</SourceLine>
   <SourceLine>oLocalDB.UserName = "%template_username%"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma Error "Supply password for the database." // Delete this line when done.</SourceLine>
   <SourceLine>oLocalDB.Password = "" // Consider obfuscating the password String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oLocalDB</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabase_ServerSSL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>551841791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabase_ServerSSL() As Database</SourceLine>
   <SourceLine>// Prepares a PostgreSQLDatabase object to connect</SourceLine>
   <SourceLine>// Returns database object if successful</SourceLine>
   <SourceLine>dim oLocalDB as new PostgreSQLDatabase</SourceLine>
   <SourceLine>oLocalDB.Host = "%template_host%"</SourceLine>
   <SourceLine>oLocalDB.Port = 5432</SourceLine>
   <SourceLine>oLocalDB.DatabaseName = "%template_databasename%"</SourceLine>
   <SourceLine>oLocalDB.UserName = "%template_username%"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma Error "Supply password for the database." // Delete this line when done.</SourceLine>
   <SourceLine>oLocalDB.Password = "" // Consider obfuscating the password String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer then</SourceLine>
   <SourceLine>if oLocalDB isa MySQLCommunityServer then</SourceLine>
   <SourceLine>// Configure SSL</SourceLine>
   <SourceLine>oLocalDB.SSLMode = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oLocalDB.SSLAuthority = %SSLAuthority%</SourceLine>
   <SourceLine>oLocalDB.SSLAuthorityDirectory = %SSLAuthorityDirectory%</SourceLine>
   <SourceLine>oLocalDB.SSLCertificate = %SSLCertificate%</SourceLine>
   <SourceLine>oLocalDB.SSLKey = %SSLKey%</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TP_ActiveRecord.kConfigUsePostgreSQLDatabase then</SourceLine>
   <SourceLine>if oLocalDB isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>// Configure SSL</SourceLine>
   <SourceLine>oLocalDB.SSLMode = PostgreSQLDatabase.SSLPrefer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oLocalDB.SSLAuthority = %SSLAuthority%</SourceLine>
   <SourceLine>oLocalDB.SSLCertificate = %SSLCertificate%</SourceLine>
   <SourceLine>oLocalDB.SSLKey = %SSLKey%</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oLocalDB</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDesktopConnection</ItemName>
  <Compatibility>(TargetConsole and (Target32Bit or Target64Bit)) or  (TargetDesktop and (Target32Bit or Target64Bit))</Compatibility>
  <Visible>1</Visible>
  <PartID>1072635903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDesktopConnection() As Database</SourceLine>
   <SourceLine>// Identify by thread</SourceLine>
   <SourceLine>if App.CurrentThread = nil then</SourceLine>
   <SourceLine>// Create the connection if necessary</SourceLine>
   <SourceLine>if maroConnectionPool.Ubound &lt; 0 then</SourceLine>
   <SourceLine>dim oDatabase as Database = OpenDB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oDatabase = nil then</SourceLine>
   <SourceLine>// The database failed to connect, you should handle this.</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the connection object</SourceLine>
   <SourceLine>dim oConnection as new TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine>oConnection.DB = oDatabase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Store it</SourceLine>
   <SourceLine>maroConnectionPool.Append(oConnection)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the connection</SourceLine>
   <SourceLine>return Database(maroConnectionPool(0).DB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// In a thread, find by thread ID</SourceLine>
   <SourceLine>return GetConnectionByCurrentThread</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetWebConnection</ItemName>
  <Compatibility>(TargetWeb and (Target32Bit or Target64Bit))</Compatibility>
  <Visible>1</Visible>
  <PartID>1488717823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetWebConnection() As Database</SourceLine>
   <SourceLine>// Attempt to identify by Session</SourceLine>
   <SourceLine>if WebSession.Available and Session &lt;&gt; nil then</SourceLine>
   <SourceLine>return GetWebConnectionBySession(Session.Identifier)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Identify by thread</SourceLine>
   <SourceLine>if App.CurrentThread = nil then</SourceLine>
   <SourceLine>// Main thread - use "Session" identifier: "App"</SourceLine>
   <SourceLine>return GetWebConnectionBySession("App")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// In a thread, find by thread ID</SourceLine>
   <SourceLine>return GetConnectionByCurrentThread</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetWebConnectionBySession</ItemName>
  <Compatibility>(TargetWeb and (Target32Bit or Target64Bit))</Compatibility>
  <Visible>1</Visible>
  <PartID>1168447487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetWebConnectionBySession(sIdentifier as String) As Database</SourceLine>
   <SourceLine>// Find or create a connection identified by a session string</SourceLine>
   <SourceLine>dim oConnection as TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as Integer = 0 to maroConnectionPool.Ubound</SourceLine>
   <SourceLine>dim oThisConnection as TP_ActiveRecord.DatabaseConnection = maroConnectionPool(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Found the connection</SourceLine>
   <SourceLine>if oThisConnection.sSessionIdentifier = sIdentifier then</SourceLine>
   <SourceLine>oConnection = oThisConnection</SourceLine>
   <SourceLine>exit for i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the connection if necessary</SourceLine>
   <SourceLine>if oConnection = nil then</SourceLine>
   <SourceLine>dim oDatabase as Database = OpenDB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oDatabase = nil then</SourceLine>
   <SourceLine>// The database failed to connect, you should handle this.</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Create the connection object</SourceLine>
   <SourceLine>dim oNewConnection as new TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine>oNewConnection.DB = oDatabase</SourceLine>
   <SourceLine>oNewConnection.sSessionIdentifier = sIdentifier</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oConnection = oNewConnection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Store it</SourceLine>
   <SourceLine>maroConnectionPool.Append(oNewConnection)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the Database</SourceLine>
   <SourceLine>return Database(oConnection.DB)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sIdentifier as String</ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>OpenDB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1378850815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OpenDB() As Database</SourceLine>
   <SourceLine>// Get a configured Databse object</SourceLine>
   <SourceLine>dim oLocalDB as Database = GetDatabase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS then</SourceLine>
   <SourceLine>// MS SQL MBS Connection</SourceLine>
   <SourceLine>if oLocalDB isa SQLDatabaseMBS then</SourceLine>
   <SourceLine>// Test connection</SourceLine>
   <SourceLine>if SQLDatabaseMBS(oLocalDB).ConnectMT = false then return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Must allow ActiveRecord to control transactions</SourceLine>
   <SourceLine>SQLDatabaseMBS(oLocalDB).AutoCommit = SQLDatabaseMBS.kAutoCommitOff</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Disabling scrolling cursors is much faster for Microsoft SQL Server</SourceLine>
   <SourceLine>SQLDatabaseMBS(oLocalDB).Scrollable = True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Change this if you'd rather check for error codes</SourceLine>
   <SourceLine>SQLDatabaseMBS(oLocalDB).RaiseExceptions = True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Test connection</SourceLine>
   <SourceLine>if oLocalDB.Connect = false then return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Make any db updates here before registering</SourceLine>
   <SourceLine>TP_AuditTrail.CreateAuditTables(oLocalDB)</SourceLine>
   <SourceLine>TP_DBUpdates.UpdateDB(oLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Tell ActiveRecord what the connection is</SourceLine>
   <SourceLine>TP_ActiveRecord.Connect(GetTypeInfo(DataFile.ActiveRecordBase), oLocalDB)</SourceLine>
   <SourceLine>TP_ActiveRecord.Connect(GetTypeInfo(DataFile.ActiveRecordView), oLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Register the tables with ActiveRecord</SourceLine>
   <SourceLine>Register(oLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Return the object</SourceLine>
   <SourceLine>return oLocalDB</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>Register</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1012615167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Register(oLocalDB as Database)</SourceLine>
   <SourceLine>#pragma unused oLocalDB</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Tables</SourceLine>
   <SourceLine>TP_ActiveRecord.Table(oLocalDB, "t_Table", GetTypeInfo(DataFile.t_Table))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Views</SourceLine>
   <SourceLine>TP_ActiveRecord.View(oLocalDB, "vw_View", GetTypeInfo(DataFile.vw_View))</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oLocalDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>maroConnectionPool()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>909199359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>maroConnectionPool() As TP_ActiveRecord.DatabaseConnection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>maroConnectionPool() As TP_ActiveRecord.DatabaseConnection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kMaxReturn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1388621823</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>50</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
</block>
<block type="BuildStepsList" ID="328407039">
 <ObjName>Linux</ObjName>
 <ObjContainerID>149562060</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2052550655">
 <ObjName>Build</ObjName>
 <ObjContainerID>328407039</ObjContainerID>
</block>
<block type="BuildStepsList" ID="2072428543">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>149562060</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="257599487">
 <ObjName>Build</ObjName>
 <ObjContainerID>2072428543</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1329670143">
 <ObjName>Windows</ObjName>
 <ObjContainerID>149562060</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1118703615">
 <ObjName>Build</ObjName>
 <ObjContainerID>1329670143</ObjContainerID>
</block>
<block type="BuildAutomation" ID="149562060">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="2121990330">
 <ObjName>P</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>2</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1290477060">
 <ObjName>Base</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BuildChangeLog</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1111810047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BuildChangeLog() As TP_AuditTrail.ChangeLog()</SourceLine>
   <SourceLine>dim aro() as TP_AuditTrail.ChangeLog</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine>dim vProperty as Variant = pi.Value( self )</SourceLine>
   <SourceLine>dim vSavedValue as Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictOrigValues&lt;&gt;nil then</SourceLine>
   <SourceLine>vSavedValue = m_dictOrigValues.Lookup(pi.Name, nil)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'cast the saved value so the type matches the property type</SourceLine>
   <SourceLine>select case vProperty.Type</SourceLine>
   <SourceLine>case Variant.TypeInteger</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.IntegerValue</SourceLine>
   <SourceLine>case Variant.TypeInt64</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.Int64Value</SourceLine>
   <SourceLine>case Variant.TypeSingle</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.SingleValue</SourceLine>
   <SourceLine>case Variant.TypeDouble</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.DoubleValue</SourceLine>
   <SourceLine>case Variant.TypeCurrency</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.CurrencyValue</SourceLine>
   <SourceLine>case Variant.TypeString</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.StringValue</SourceLine>
   <SourceLine>case Variant.TypeBoolean</SourceLine>
   <SourceLine>vSavedValue =  vSavedValue.BooleanValue</SourceLine>
   <SourceLine>case Variant.TypeColor</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.ColorValue</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vProperty.Type=Variant.TypeString then</SourceLine>
   <SourceLine>'do a case sensitive compare for Strings</SourceLine>
   <SourceLine>if StrComp(vProperty.StringValue, vSavedValue.StringValue, 0)&lt;&gt;0 then</SourceLine>
   <SourceLine>dim oChange as new TP_AuditTrail.ChangeLog</SourceLine>
   <SourceLine>oChange.sFieldName = oFieldInfo.sFieldName</SourceLine>
   <SourceLine>oChange.sNewValue = vProperty.StringValue</SourceLine>
   <SourceLine>oChange.sOldValue = vSavedValue.StringValue</SourceLine>
   <SourceLine>aro.Append oChange</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>'use the default comparison operator for everything else</SourceLine>
   <SourceLine>if vProperty&lt;&gt;vSavedValue then</SourceLine>
   <SourceLine>dim oChange as new TP_AuditTrail.ChangeLog</SourceLine>
   <SourceLine>oChange.sFieldName = oFieldInfo.sFieldName</SourceLine>
   <SourceLine>oChange.sNewValue = vProperty.StringValue</SourceLine>
   <SourceLine>oChange.sOldValue = vSavedValue.StringValue</SourceLine>
   <SourceLine>aro.Append oChange</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_AuditTrail.ChangeLog()</ItemResult>
 </Method>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1919461375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As Variant</SourceLine>
   <SourceLine>dim ty as Introspection.TypeInfo = Introspection.GetType(self)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo(ty)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oSuperConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oCopyConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oDefaultConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Look for three types of constructors (lowest priority first):</SourceLine>
   <SourceLine>' (1) Default constructors (i.e. no parameters)</SourceLine>
   <SourceLine>' (2) Constructors that take a parameter of which self's class is a subtype</SourceLine>
   <SourceLine>' (3) Constructors that take a parameter which matches this class type</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'For example if there's a class call User derived like this:</SourceLine>
   <SourceLine>' TP_ActiveRecord.Base -&gt; clsActiveRecord -&gt; User</SourceLine>
   <SourceLine>'Then the program will look for constructors like the following:</SourceLine>
   <SourceLine>' (1) Constructor()</SourceLine>
   <SourceLine>' (2) Constructor(TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>' (3) Constructor(clsActiveRecord)</SourceLine>
   <SourceLine>' (4) Constructor(User)</SourceLine>
   <SourceLine>'If it finds more than one it will use the one that's farthest down the list.</SourceLine>
   <SourceLine>'The point of this is to give users a way of customizing how their objects</SourceLine>
   <SourceLine>'get cloned, all they need to do is add the appropriate constructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each o as Introspection.ConstructorInfo in ty.GetConstructors</SourceLine>
   <SourceLine>dim aroParam() as Introspection.ParameterInfo</SourceLine>
   <SourceLine>aroParam = o.GetParameters</SourceLine>
   <SourceLine>if aroParam.Ubound &lt; 0 then</SourceLine>
   <SourceLine>'default constructor</SourceLine>
   <SourceLine>oDefaultConstructor = o</SourceLine>
   <SourceLine>elseif aroParam.Ubound=0 and _</SourceLine>
   <SourceLine>ty.IsSubclassOf(aroParam(0).ParameterType) then</SourceLine>
   <SourceLine>'copy constructor that takes a super class</SourceLine>
   <SourceLine>if oSuperConstructor=nil then</SourceLine>
   <SourceLine>oSuperConstructor = o</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim aroCurrentParam() as Introspection.ParameterInfo</SourceLine>
   <SourceLine>aroCurrentParam = oSuperConstructor.GetParameters</SourceLine>
   <SourceLine>if aroParam(0).ParameterType.IsSubclassOf(aroCurrentParam(0).ParameterType) then</SourceLine>
   <SourceLine>'if the parameter type of this constructor is derived from the parameter type</SourceLine>
   <SourceLine>'of the last one, then this one should have priority</SourceLine>
   <SourceLine>oSuperConstructor = o</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>elseif aroParam.Ubound=0 and _</SourceLine>
   <SourceLine>aroParam(0).ParameterType is ty then</SourceLine>
   <SourceLine>'copy constructor that takes this class</SourceLine>
   <SourceLine>oCopyConstructor = o</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Create an instance using the constructor we found</SourceLine>
   <SourceLine>dim oClone as Base</SourceLine>
   <SourceLine>dim vSelf as Variant = self</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oCopyConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oCopyConstructor.Invoke(Array(vSelf))</SourceLine>
   <SourceLine>elseif oSuperConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oSuperConstructor.Invoke(Array(vSelf))</SourceLine>
   <SourceLine>elseif oDefaultConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oDefaultConstructor.Invoke</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>'we should always be able to find a default constructor</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(false, _</SourceLine>
   <SourceLine>"Class does not have a default constructor")</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Copy the properties into the new instance</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine>if not (pi is oTableInfo.piPrimaryKey) then</SourceLine>
   <SourceLine>'copy every saved property except the primary key</SourceLine>
   <SourceLine>pi.Value(oClone) = pi.Value(self)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oClone</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Variant</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1468844031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>213129215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(rs as RecordSet)</SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>471285759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return GetDatabaseAdapter.Db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>Delete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1942808575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Delete()</SourceLine>
   <SourceLine>if self.IsNew then</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try </SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent BeforeDelete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.DeleteRecord(self)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterDelete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>756500479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As DatabaseAdapter</SourceLine>
   <SourceLine>return GetContext.ConnectionAdapter_Get(Introspection.GetType(self))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1068623871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableName() As String</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine>Return oTableInfo.sTableName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GUID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>688879615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GUID() As String</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine>select case oTableInfo.piPrimaryKey.PropertyType.Name</SourceLine>
   <SourceLine>case "Int32", "Int64"</SourceLine>
   <SourceLine>Return str(ID)</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>Return oTableInfo.piPrimaryKey.Value(Self)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GUID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>591042559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GUID(assigns guid as String)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey.Value(self) = guid</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>assigns guid as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2069981183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ID() As Int64</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine>return oTableInfo.piPrimaryKey.Value(self)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1621346303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ID(assigns id as Int64)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey.Value(self) = id</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>assigns id as Int64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsModified</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1521258495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsModified() As Boolean</SourceLine>
   <SourceLine>return IsRecordModified</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsNew</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1494171647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsNew() As Boolean</SourceLine>
   <SourceLine>dim sGUID as String = GUID</SourceLine>
   <SourceLine>if ID &lt; 1 or (sGUID = "" or sGUID = "0") then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsRecordModified</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1860737023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsRecordModified() As Boolean</SourceLine>
   <SourceLine>dim bModified as boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine>dim vProperty as Variant = pi.Value(self)</SourceLine>
   <SourceLine>dim vSavedValue as Variant</SourceLine>
   <SourceLine>if m_dictSavedPropertyValue&lt;&gt;nil then</SourceLine>
   <SourceLine>vSavedValue = m_dictSavedPropertyValue.Lookup(pi.Name, nil)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'cast the saved value so the type matches the property type</SourceLine>
   <SourceLine>select case vProperty.Type</SourceLine>
   <SourceLine>case Variant.TypeInteger</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// case Variant.TypeLong</SourceLine>
   <SourceLine>// // I'd love to implement this, but because Geoff has decided</SourceLine>
   <SourceLine>// // to obscure the docs history, I don't know which IDEs still need it</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case Variant.TypeInt32</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.Int32Value</SourceLine>
   <SourceLine>case Variant.TypeInt64</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.Int64Value</SourceLine>
   <SourceLine>case Variant.TypeSingle</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.SingleValue</SourceLine>
   <SourceLine>case Variant.TypeDouble</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.DoubleValue</SourceLine>
   <SourceLine>case Variant.TypeCurrency</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.CurrencyValue</SourceLine>
   <SourceLine>case Variant.TypeString</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.StringValue</SourceLine>
   <SourceLine>case Variant.TypeBoolean</SourceLine>
   <SourceLine>vSavedValue =  vSavedValue.BooleanValue</SourceLine>
   <SourceLine>case Variant.TypeColor</SourceLine>
   <SourceLine>vSavedValue = vSavedValue.ColorValue</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if vProperty.Type=Variant.TypeString then</SourceLine>
   <SourceLine>'do a case sensitive compare for strings</SourceLine>
   <SourceLine>if StrComp(vProperty.StringValue, vSavedValue.StringValue, 0)&lt;&gt;0 then</SourceLine>
   <SourceLine>bModified = true</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>'use the default comparison operator for everything else</SourceLine>
   <SourceLine>if vProperty&lt;&gt;vSavedValue then</SourceLine>
   <SourceLine>bModified = true</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return bModified</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Load</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>195975167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Load(iRecordID as Int64) As Boolean</SourceLine>
   <SourceLine>'Load record with the given ID. Return true if the record is found.</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim ada as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase then</SourceLine>
   <SourceLine>if ada isa TP_ActiveRecord.cubeSQLDatabaseAdapter then</SourceLine>
   <SourceLine>rs = TP_ActiveRecord.cubeSQLDatabaseAdapter(ada).SelectRecord(self, iRecordID)</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = ada.SelectRecord(self, iRecordID)</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>iRecordID as Int64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Load</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1199575039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Load(sRecordID as String) As Boolean</SourceLine>
   <SourceLine>'Load record with the given ID. Return true if the record is found.</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim ada as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase then</SourceLine>
   <SourceLine>if ada isa TP_ActiveRecord.cubeSQLDatabaseAdapter then</SourceLine>
   <SourceLine>rs = TP_ActiveRecord.cubeSQLDatabaseAdapter(ada).SelectRecord(self, sRecordID)</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = ada.SelectRecord(self, sRecordID)</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sRecordID as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Compare</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>497661951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Compare(rhs as TP_ActiveRecord.Base) As Integer</SourceLine>
   <SourceLine>if rhs is nil then</SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'the two records are equal if they are actually the same object or</SourceLine>
   <SourceLine>'if they're the same type and have the same ID (except if they're new).</SourceLine>
   <SourceLine>if rhs is self or _</SourceLine>
   <SourceLine>(Introspection.GetType(self) = Introspection.GetType(rhs) and _</SourceLine>
   <SourceLine>(rhs.ID = ID) and not IsNew) then</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'this ordering is arbitrary. Equality is really the case we're after.</SourceLine>
   <SourceLine>if ID &lt; rhs.ID then</SourceLine>
   <SourceLine>return -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rhs as TP_ActiveRecord.Base</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>893429759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as RecordSet)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo(Introspection.GetType(self))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord(rs, oTableInfo, m_dictSavedPropertyValue)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>926449663</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as RecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim oField as DatabaseField = rs.Field(oFieldInfo.sFieldName)</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField is nil then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(false, _</SourceLine>
   <SourceLine>"A field needed to populate this record wasn't provided: " + _</SourceLine>
   <SourceLine>oFieldInfo.sFieldName)</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim vProperty as Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pi.PropertyType.Name = "Double" then</SourceLine>
   <SourceLine>if oField.Value=nil then</SourceLine>
   <SourceLine>vProperty = TP_ActiveRecord.kDoubleNullSentinal</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>elseif pi.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim s as string = oField.StringValue</SourceLine>
   <SourceLine>if Encoding(s) is nil then</SourceLine>
   <SourceLine>s = DefineEncoding(s, Encodings.UTF8)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>vProperty = s</SourceLine>
   <SourceLine>elseif pi.PropertyType.IsPrimitive then</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>elseif pi.PropertyType = GetTypeInfo(Date) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim v as Variant = oField.Value</SourceLine>
   <SourceLine>if v = nil or v = "" then</SourceLine>
   <SourceLine>vProperty=nil</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim dt as new Date</SourceLine>
   <SourceLine>dt.SQLDateTime = v.StringValue</SourceLine>
   <SourceLine>vProperty=dt</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty= oField.Value</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pi.Value(self) = vProperty</SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = vProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Make sure the instances aren't connected</SourceLine>
   <SourceLine>if pi.PropertyType = GetTypeInfo(Date) and vProperty &lt;&gt; nil then</SourceLine>
   <SourceLine>pi.Value(self) = new Date(vProperty.DateValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Save</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1219330047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Save()</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent BeforeSave</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsNew then</SourceLine>
   <SourceLine>RaiseEvent BeforeCreate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.InsertRecord(self, m_dictSavedPropertyValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterSave</SourceLine>
   <SourceLine>RaiseEvent AfterCreate</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>RaiseEvent BeforeUpdate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ARGen Audit Trail</SourceLine>
   <SourceLine>m_dictOrigValues = TP_AuditTrail.CloneDictionary(m_dictSavedPropertyValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsRecordModified then</SourceLine>
   <SourceLine>adp.UpdateRecord(self, m_dictSavedPropertyValue)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterSave</SourceLine>
   <SourceLine>RaiseEvent AfterUpdate</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exception ex as RuntimeException</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Validate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>285894655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Validate(oError as TP_ActiveRecord.ValidationErrors) As Boolean</SourceLine>
   <SourceLine>RaiseEvent Validate(oError)</SourceLine>
   <SourceLine>return (oError.ErrorCount = 0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oError as TP_ActiveRecord.ValidationErrors</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Hook>
  <ItemName>AfterCreate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterDelete</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterSave</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterUpdate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeCreate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeDelete</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeSave</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeUpdate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>Validate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>oErrors as TP_ActiveRecord.ValidationErrors</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Property>
  <ItemName>m_dictOrigValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>167247871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictOrigValues As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictOrigValues As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictSavedPropertyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1926207487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictSavedPropertyValue As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictSavedPropertyValue As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1610613173">
 <ObjName>BaseList</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1176817663</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(ty as Introspection.TypeInfo, sCriteria as string = "", sOrder as string = "")</SourceLine>
   <SourceLine>m_tyElement = ty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not ty.IsSubclassOf(GetTypeInfo(TP_ActiveRecord.Base)) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Message = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>' dim aro() as Variant</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo( ty )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as string = "SELECT " + oTableInfo.sPrimaryKey + _</SourceLine>
   <SourceLine>" FROM " + oTableInfo.sTableName</SourceLine>
   <SourceLine>if sCriteria&lt;&gt;"" then</SourceLine>
   <SourceLine>sql = sql + " WHERE " + sCriteria</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sOrder&lt;&gt;"" then</SourceLine>
   <SourceLine>sql = sql + " ORDER BY " + sOrder</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arid() as Int64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = adp.SQLSelect(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oField as DatabaseField = rs.IdxField(1)</SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>arid.Append(oField.Int64Value)</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m_arid = arid</SourceLine>
   <SourceLine>redim m_aro(m_arid.Ubound)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, sCriteria as string = "", sOrder as string = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ElementType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>637812735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ElementType() As Introspection.TypeInfo</SourceLine>
   <SourceLine>return m_tyElement</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Introspection.TypeInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>Item</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>481562623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Item(index as integer) As TP_ActiveRecord.Base</SourceLine>
   <SourceLine>if m_aro(index)&lt;&gt;nil then</SourceLine>
   <SourceLine>return m_aro(index)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>const kBatchSize = 50</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>LoadRange(index, Min(index+kBatchSize-1, m_arid.Ubound))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_aro(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as integer</ItemParams>
  <ItemResult>TP_ActiveRecord.Base</ItemResult>
 </Method>
 <Method>
  <ItemName>LoadRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1397602303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub LoadRange(startIndex as integer, endIndex as integer)</SourceLine>
   <SourceLine>dim sPrimaryKey as string = GetTableInfo(m_tyElement).sPrimaryKey</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aridix() as integer</SourceLine>
   <SourceLine>dim arid() as Int64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = startIndex to endIndex</SourceLine>
   <SourceLine>aridix.Append(i)</SourceLine>
   <SourceLine>arid.Append(m_arid(i))</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arid.SortWith(aridix)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsId() as string</SourceLine>
   <SourceLine>for i as integer = 0 to arid.Ubound</SourceLine>
   <SourceLine>arsId.Append(Str(arid(i)))</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sCriteria as string</SourceLine>
   <SourceLine>sCriteria = sPrimaryKey + " IN (" + Join(arsId, ",") + ")"</SourceLine>
   <SourceLine>dim arv() as Variant = TP_ActiveRecord.Query(m_tyElement, sCriteria, sPrimaryKey)</SourceLine>
   <SourceLine>for i as integer = 0 to arv.Ubound</SourceLine>
   <SourceLine>dim oRecord as TP_ActiveRecord.Base = arv(i)</SourceLine>
   <SourceLine>if oRecord.ID = arid(i) then</SourceLine>
   <SourceLine>m_aro(aridix(i)) = oRecord</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>startIndex as integer, endIndex as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Subscript</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>63115263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Subscript(index as Integer) As TP_ActiveRecord.Base</SourceLine>
   <SourceLine>return Item(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as Integer</ItemParams>
  <ItemResult>TP_ActiveRecord.Base</ItemResult>
 </Method>
 <Method>
  <ItemName>Ubound</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1630803967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Ubound() As integer</SourceLine>
   <SourceLine>return m_arid.Ubound</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Property>
  <ItemName>m_arid()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2060175359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_arid() As Int64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_arid() As Int64</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_aro()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>355188735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_aro() As TP_ActiveRecord.Base</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_aro() As TP_ActiveRecord.Base</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_tyElement</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1815384063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_tyElement As Introspection.TypeInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_tyElement As Introspection.TypeInfo</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="544244982">
 <ObjName>FieldDef</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1065148415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sFieldName as string, enFieldType as TP_ActiveRecord.DBType, bPrimaryKey as boolean, bForeignKey as boolean)</SourceLine>
   <SourceLine>self.sFieldName = sFieldName</SourceLine>
   <SourceLine>self.enFieldType = enFieldType</SourceLine>
   <SourceLine>self.IsPrimaryKey = bPrimaryKey</SourceLine>
   <SourceLine>self.IsForeignKey = bForeignKey</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as string, enFieldType as TP_ActiveRecord.DBType, bPrimaryKey as boolean, bForeignKey as boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>enFieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1495248895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>enFieldType As TP_ActiveRecord.DBType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>enFieldType As TP_ActiveRecord.DBType</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>596535295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsForeignKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>649455615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsPrimaryKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsPrimaryKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>973457407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sFieldName As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sFieldName As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsForeignKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sFieldName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>enFieldType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>TP_ActiveRecord.DBType</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - DInteger</ItemDef>
    <ItemDef>1 - DSmallInt</ItemDef>
    <ItemDef>2 - DDouble</ItemDef>
    <ItemDef>3 - DDate</ItemDef>
    <ItemDef>4 - DTime</ItemDef>
    <ItemDef>5 - DTimestamp</ItemDef>
    <ItemDef>6 - DBoolean</ItemDef>
    <ItemDef>7 - DBlob</ItemDef>
    <ItemDef>8 - DText</ItemDef>
    <ItemDef>9 - DInt64</ItemDef>
    <ItemDef>10 - DFloat</ItemDef>
    <ItemDef>11 - DCurrency</ItemDef>
    <ItemDef>12 - DNotUsed</ItemDef>
    <ItemDef>13 - DDecimal</ItemDef>
   </Enumeration>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="992576707">
 <ObjName>TableDef</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>80996351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sTableName as string, sPrimaryKey as string, aroField() as TP_ActiveRecord.FieldDef)</SourceLine>
   <SourceLine>self.sTableName = sTableName</SourceLine>
   <SourceLine>self.sPrimaryKey = sPrimaryKey</SourceLine>
   <SourceLine>self.aroField = aroField</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTableName as string, sPrimaryKey as string, aroField() as TP_ActiveRecord.FieldDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>aroField()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>536074239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>aroField() As TP_ActiveRecord.FieldDef</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>aroField() As TP_ActiveRecord.FieldDef</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>408971263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sPrimaryKey As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sPrimaryKey As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1280350207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sTableName As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sTableName As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sTableName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="583761459">
 <ObjName>FieldOpt</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1807482879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sFieldName as string)</SourceLine>
   <SourceLine>m_sFieldName = sFieldName</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>330119167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FieldName() As String</SourceLine>
   <SourceLine>return m_sFieldName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1674698751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ForeignKey() As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>m_bForeignKey = true</SourceLine>
   <SourceLine>return self</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>Ignored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1074239487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Ignored() As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>m_bIgnored = true</SourceLine>
   <SourceLine>return self</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>IsForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1352183807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsForeignKey() As Boolean</SourceLine>
   <SourceLine>return m_bForeignKey</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsIgnored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>892047359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsIgnored() As Boolean</SourceLine>
   <SourceLine>return m_bIgnored</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>m_bForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>337862655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_bForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_bForeignKey As boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_bIgnored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1023997951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_bIgnored As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_bIgnored As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1138206719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_sFieldName As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_sFieldName As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1845259045">
 <ObjName>CubeSQLDatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>825892863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>'If you are not connecting to CubeSQLServer and do not have the CubeSQLServer plugin delete this class (cubeSQLDatabaseAdapter)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>if m_iTransactionCt=0 and not db.AutoCommit then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1671251967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BindValues(oStmt as Object, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo) As Dictionary</SourceLine>
   <SourceLine>// Overriding the parent class ...</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim stmt as cubeSQLVM = cubeSQLVM(oStmt)</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = 0 to aroField.Ubound</SourceLine>
   <SourceLine>dim oField as TP_ActiveRecord.P.FieldInfo = aroField(i)</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine>dim v as Variant = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iDBType as integer</SourceLine>
   <SourceLine>select case aroField(i).enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BOOLEAN</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BLOB</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DCurrency</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.IsKey and (v.IntegerValue &lt; 1 or v.StringValue = "" or v.StringValue = "0") then</SourceLine>
   <SourceLine>'if the field is a key and it's 0 or less, then set it to NULL</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_NULL</SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Date" or _</SourceLine>
   <SourceLine>(pi.PropertyType.Name="Variant" and v.Type=Variant.TypeDate) then</SourceLine>
   <SourceLine>dim dt as Date = v.DateValue</SourceLine>
   <SourceLine>if dt=nil then</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_NULL</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim dt1 as new Date</SourceLine>
   <SourceLine>dt1.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt1.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>v = dt1 'copied for the saved value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dt2 as new Date</SourceLine>
   <SourceLine>dt2.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt2.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>dt2.GMTOffset = 0</SourceLine>
   <SourceLine>dt = dt2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.enFieldType=TP_ActiveRecord.DBType.DDate then</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>elseif oField.enFieldType=TP_ActiveRecord.DBType.DTimestamp then</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Double" and _</SourceLine>
   <SourceLine>v.DoubleValue = TP_ActiveRecord.kDoubleNullSentinal then</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_NULL</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// stmt.Bind(i, v)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case iDBType</SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>stmt.BindInt(i + 1, v.IntegerValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>stmt.BindDouble(i + 1, v.DoubleValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>stmt.BindText(i + 1, v.StringValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_BOOLEAN</SourceLine>
   <SourceLine>stmt.BindInt(i + 1, v.IntegerValue)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_BLOB</SourceLine>
   <SourceLine>stmt.BindBlob(i + 1, v)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>stmt.BindInt64(i + 1, v.Int64Value)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return dictFieldValue</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused aroField</SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>#pragma unused oStmt</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oStmt as Object, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo</ItemParams>
  <ItemResult>Dictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1023207423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>675868671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to CubeSQL</SourceLine>
   <SourceLine>// and do not have the CubeSQL Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDB</SourceLine>
   <SourceLine>dim ex as new UnsupportedOperationException</SourceLine>
   <SourceLine>ex.Message = "CubeSQL is not enabled"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1621014527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>DeleteRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>137074687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DeleteRecord(oRecord as TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "DELETE FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as CubeSQLVM</SourceLine>
   <SourceLine>stmt = db.VMPrepare(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oRecord.GUID &lt;&gt; "" then</SourceLine>
   <SourceLine>stmt.BindText(1, oRecord.GUID)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>stmt.BindInt64(1, oRecord.ID)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.VMExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1901940735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>return db.LastRowID</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>494616575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>// Overriding the parent class ...</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as integer</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>arsPlaceholder.Append("?" + str(i))</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>sql = "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>sql = sql + "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>sql = sql + " VALUES "</SourceLine>
   <SourceLine>sql = sql + "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as CubeSQLVM</SourceLine>
   <SourceLine>stmt = db.VMPrepare(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.VMExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRowID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.Append "select "</SourceLine>
   <SourceLine>arsSQL.Append sPK</SourceLine>
   <SourceLine>arsSQL.Append "From "</SourceLine>
   <SourceLine>arsSQL.Append oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.Append "Where RowID = "</SourceLine>
   <SourceLine>arsSQL.Append str(iRowID)</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRowID</SourceLine>
   <SourceLine>oRecord.id = iRowID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>#pragma unused dictSavedPropertyValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1611784191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>241059839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, iRecordID as Int64) As RecordSet</SourceLine>
   <SourceLine>// Overriding the parent class ...</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as CubeSQLVM</SourceLine>
   <SourceLine>stmt = db.VMPrepare(sql)</SourceLine>
   <SourceLine>stmt.BindInt64(1, iRecordID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = stmt.VMSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>#pragma unused iRecordID</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, iRecordID as Int64</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>174643199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, sID as string) As RecordSet</SourceLine>
   <SourceLine>// Overriding the parent class ...</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as CubeSQLVM</SourceLine>
   <SourceLine>stmt = db.VMPrepare(sql)</SourceLine>
   <SourceLine>stmt.BindText(1, sID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = stmt.VMSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>#pragma unused sID</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, sID as string</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1146560511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>// Overriding the parent class ...</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>dim db as CubeSQLServer = CubeSQLServer(m_db)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim oPrimaryKeyField as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>oPrimaryKeyField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>i = i + 1</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName + "=?" + str(i))</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>sql = "UPDATE " + oTableInfo.sTableName + " SET "</SourceLine>
   <SourceLine>sql = sql + Join(arsField, ",")</SourceLine>
   <SourceLine>sql = sql + " WHERE " + oTableInfo.sPrimaryKey + "=?"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as CubeSQLVM</SourceLine>
   <SourceLine>stmt = db.VMPrepare(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroField.Append(oPrimaryKeyField)</SourceLine>
   <SourceLine>dictFieldValue = me.BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.VMExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused oRecord</SourceLine>
   <SourceLine>#pragma unused dictSavedPropertyValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1230647295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2051334143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1573558723">
 <ObjName>ValidationErrors</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Append</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1454057471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Append(sMessage as string)</SourceLine>
   <SourceLine>m_arsError.Append( sMessage )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sMessage as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1955506175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Clear()</SourceLine>
   <SourceLine>redim m_arsError( -1 )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>608397311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Error(index as Integer) As string</SourceLine>
   <SourceLine>return m_arsError(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as Integer</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>377800703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorCount() As integer</SourceLine>
   <SourceLine>return m_arsError.Ubound + 1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Property>
  <ItemName>m_arsError()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1462274047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_arsError() As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_arsError() As string</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1809731218">
 <ObjName>MSSQLServerAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2112352255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>' try</SourceLine>
   <SourceLine>' m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>' catch ex as RuntimeException</SourceLine>
   <SourceLine>' 'ignore this one</SourceLine>
   <SourceLine>' end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN TRANSACTION" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1770651647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1694558207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to MS SQL Server</SourceLine>
   <SourceLine>// and do not have the MSSQLServerDatabase Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>dim db as MSSQLServerDatabase = MSSQLServerDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDB</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1190318079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>586199039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = SQLSelect("SELECT @@IDENTITY;")</SourceLine>
   <SourceLine>return rs.IdxField(1).Int64Value</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>776075263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arssql.Append "OUTPUT inserted." + sPK</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as recordset = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>sRecordID = sRecordID.ReplaceAll("{", "")</SourceLine>
   <SourceLine>sRecordID = sRecordID.ReplaceAll("}", "")</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim iRecordID as Int64 = rs.Field(sPK).Int64Value</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine>oRecord.id = iRecordID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1749073919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1133103103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>259704831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="755687739">
 <ObjName>MySQLCommunityServerAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>69152767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "START TRANSACTION" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1813911551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BindValues(stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo) As Dictionary</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = 0 to aroField.Ubound</SourceLine>
   <SourceLine>dim oField as TP_ActiveRecord.P.FieldInfo = aroField(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iDBType as integer = oField.iDBType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim v as Variant = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case db</SourceLine>
   <SourceLine>case nil</SourceLine>
   <SourceLine>'empty. This just let's it compile if someone turns off all the constants</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>case isa MySQLCommunityServer</SourceLine>
   <SourceLine>select case aroField(i).enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_LONG</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_SHORT</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DATE</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_TIMESTAMP</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_TINY</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_BLOB</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_STRING</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_LONGLONG</SourceLine>
   <SourceLine>case DBType.DFloat, DBType.DDecimal</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DCurrency</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>'Xojo thinks MySQL BigInt (Int64) is a text field.</SourceLine>
   <SourceLine>if oField.piFieldProperty.PropertyType.name = "Int64" AND oField.enFieldType = DBType.DText then</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_LONGLONG</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.BindType(i, iDBType)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.IsKey and (v.IntegerValue &lt; 1 or v.StringValue = "" or v.StringValue = "0") then</SourceLine>
   <SourceLine>'if the field is a key and it's 0 or less, then set it to NULL</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Date" or (pi.PropertyType.Name="Variant" and v.Type=Variant.TypeDate) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dt as Date = v.DateValue</SourceLine>
   <SourceLine>if dt=nil then</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim dt1 as new Date</SourceLine>
   <SourceLine>dt1.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt1.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>v = dt1 'copied for the saved value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dt2 as new Date</SourceLine>
   <SourceLine>dt2.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt2.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>dt2.GMTOffset = 0</SourceLine>
   <SourceLine>dt = dt2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.enFieldType=TP_ActiveRecord.DBType.DDate then</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDate)</SourceLine>
   <SourceLine>elseif oField.enFieldType=TP_ActiveRecord.DBType.DTimestamp then</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDateTime)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDateTime)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Double" and v.DoubleValue = TP_ActiveRecord.kDoubleNullSentinal then</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>stmt.Bind(i, v)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return dictFieldValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo</ItemParams>
  <ItemResult>Dictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1490593791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1936674815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to MySQL</SourceLine>
   <SourceLine>// and do not have the MySQLCommunityServer Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>dim db as MySQLCommunityServer = MySQLCommunityServer(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDB</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>313589759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2082027519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>return MySQLCommunityServer(m_db).GetInsertID</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>745994239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelectRaiseOnError("Select @last_uuid as guid_id")</SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field("guid_id").StringValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim iRecordID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine>oRecord.ID = iRecordID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>46448639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1108500479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>120455167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1376161989">
 <ObjName>PostgreSQLDatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>294563839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "START TRANSACTION" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>12939263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BindValues(stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo) As Dictionary</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = 0 to aroField.Ubound</SourceLine>
   <SourceLine>dim oField as TP_ActiveRecord.P.FieldInfo = aroField(i)</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine>dim v as Variant = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.Bind(i, v)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return dictFieldValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo</ItemParams>
  <ItemResult>Dictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2055362559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>122388479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to PostgreSQL</SourceLine>
   <SourceLine>// and do not have the PostgreSQLDatabase Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>dim db as PostgreSQLDatabase = PostgreSQLDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDB</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2087407615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>477206527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = SQLSelect("SELECT LASTVAL();")</SourceLine>
   <SourceLine>return rs.IdxField(1).Int64Value</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>243355647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("$" + str(arsPlaceholder.Ubound + 2) )</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ") RETURNING " + oTableInfo.sPrimaryKey</SourceLine>
   <SourceLine>sql = join(arsSQL,"")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs as Recordset = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim iRecordID as Int64 = rs.Field(sPK).Int64Value</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine>oRecord.id = iRecordID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1318311935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>536709119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim oPrimaryKeyField as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>oPrimaryKeyField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName + "=$" + str(arsField.ubound + 2) )</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>sql = "UPDATE " + oTableInfo.sTableName + " SET "</SourceLine>
   <SourceLine>sql = sql + Join(arsField, ",")</SourceLine>
   <SourceLine>sql = sql + " WHERE " + oTableInfo.sPrimaryKey + "=$" + str(arsField.ubound + 2)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroField.Append(oPrimaryKeyField)</SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1215899647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2029488127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1732490146">
 <ObjName>SQLiteDatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>157229055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN TRANSACTION" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>987746303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1387069439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>dim db as SQLiteDatabase = SQLiteDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDb</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>547196927</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>456075263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>return SQLiteDatabase(m_db).LastRowID</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>30633983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRowID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>redim arsSQL(-1)</SourceLine>
   <SourceLine>arsSQL.Append "select "</SourceLine>
   <SourceLine>arsSQL.Append sPK</SourceLine>
   <SourceLine>arsSQL.Append "From "</SourceLine>
   <SourceLine>arsSQL.Append oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.Append "Where RowID = "</SourceLine>
   <SourceLine>arsSQL.Append str(iRowID)</SourceLine>
   <SourceLine>sSQL = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRowID</SourceLine>
   <SourceLine>oRecord.id = iRowID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1342605311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1740910591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1331292159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1300199810">
 <ObjName>VSQLiteDatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1420869631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1162686463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1057163263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to Valentina</SourceLine>
   <SourceLine>// and do not have the VSQLiteDatabase Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>dim db as VSqliteDataBase = VSQLiteDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDb</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>811401215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>969533439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>return VSQLiteDatabase(m_db).LastRowID</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>69744639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRowID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>redim arsSQL(-1)</SourceLine>
   <SourceLine>arsSQL.Append "select "</SourceLine>
   <SourceLine>arsSQL.Append sPK</SourceLine>
   <SourceLine>arsSQL.Append "From "</SourceLine>
   <SourceLine>arsSQL.Append oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.Append "Where RowID = "</SourceLine>
   <SourceLine>arsSQL.Append str(iRowID)</SourceLine>
   <SourceLine>sSQL = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRowID</SourceLine>
   <SourceLine>oRecord.id = iRowID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>886274047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>498710527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1045118975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="540361462">
 <ObjName>DatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>762943487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindId</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>245583871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BindId(stmt as PreparedSQLStatement, i as integer, id as Int64)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>if db isa SQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_INT64)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>if db isa MySQLCommunityServer then</SourceLine>
   <SourceLine>stmt.BindType(i, MySQLPreparedStatement.MYSQL_TYPE_LONGLONG)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>//PostgreSQL doesn't do binding the same way</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>if db isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_INT)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>if db isa ODBCDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, ODBCPreparedStatement.ODBC_TYPE_BIGINT)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#If TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>if db isa CubeSQLServer then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>if db isa VSQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_INT64)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.Bind(i, id)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, i as integer, id as Int64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindId</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2123038719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BindId(stmt as PreparedSQLStatement, i as integer, sID as String)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>if db isa SQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_TEXT)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>if db isa MySQLCommunityServer then</SourceLine>
   <SourceLine>stmt.BindType(i, MySQLPreparedStatement.MYSQL_TYPE_STRING)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>// PostgreSQL doesn't do binding the same way</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>if db isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_STRING)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>if db isa ODBCDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, ODBCPreparedStatement.ODBC_TYPE_STRING)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#If TP_ActiveRecord.kConfigUseCubeDatabase</SourceLine>
   <SourceLine>if db isa CubeSQLServer then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>if db isa VSQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_TEXT)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.Bind(i, sID)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, i as integer, sID as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindNull</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>549974015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BindNull(stmt as PreparedSQLStatement, i as integer)</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>if db isa MySQLCommunityServer then</SourceLine>
   <SourceLine>stmt.BindType(i, MySQLPreparedStatement.MYSQL_TYPE_NULL)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>if db isa SQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_NULL)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>// PostgreSQL doesn't do binding the same way</SourceLine>
   <SourceLine>#pragma unused stmt</SourceLine>
   <SourceLine>#pragma unused i</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>if db isa ODBCDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, ODBCPreparedStatement.ODBC_TYPE_NULL)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>if db isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_NULL)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS</SourceLine>
   <SourceLine>if db isa SQLDatabaseMBS then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLPreparedStatementMBS.kTypeNull)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>if db isa VSQLiteDatabase then</SourceLine>
   <SourceLine>stmt.BindType(i, SQLitePreparedStatement.SQLITE_NULL)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, i as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>346435583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BindValues(stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo) As Dictionary</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = 0 to aroField.Ubound</SourceLine>
   <SourceLine>dim oField as TP_ActiveRecord.P.FieldInfo = aroField(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iDBType as integer = oField.iDBType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim v as Variant = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case db</SourceLine>
   <SourceLine>case nil</SourceLine>
   <SourceLine>'empty. This just let's it compile if someone turns off all the constants</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.BindType(i, iDBType)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.IsKey and (v.IntegerValue &lt; 1 or v.StringValue = "" or v.StringValue = "0") then</SourceLine>
   <SourceLine>'if the field is a key and it's 0 or less, then set it to NULL</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Date" or (pi.PropertyType.Name="Variant" and v.Type=Variant.TypeDate) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dt as Date = v.DateValue</SourceLine>
   <SourceLine>if dt=nil then</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim dt1 as new Date</SourceLine>
   <SourceLine>dt1.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt1.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>v = dt1 'copied for the saved value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dt2 as new Date</SourceLine>
   <SourceLine>dt2.GMTOffset = dt.GMTOffset</SourceLine>
   <SourceLine>dt2.TotalSeconds = dt.TotalSeconds</SourceLine>
   <SourceLine>dt2.GMTOffset = 0</SourceLine>
   <SourceLine>dt = dt2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.enFieldType=TP_ActiveRecord.DBType.DDate then</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDate)</SourceLine>
   <SourceLine>elseif oField.enFieldType=TP_ActiveRecord.DBType.DTimestamp then</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDateTime)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>stmt.Bind(i, dt.SQLDateTime)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType.Name="Double" and v.DoubleValue = TP_ActiveRecord.kDoubleNullSentinal then</SourceLine>
   <SourceLine>BindNull(stmt, i)</SourceLine>
   <SourceLine>stmt.Bind(i, nil)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>stmt.Bind(i, v)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = v</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return dictFieldValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stmt as PreparedSQLStatement, oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo</ItemParams>
  <ItemResult>Dictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1222903807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1157642239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>409368575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "needs to be implemented in subclass" )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>DeleteRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>239511551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DeleteRecord(oRecord as TP_ActiveRecord.Base)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "DELETE FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase</SourceLine>
   <SourceLine>if db isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>sql = sql  + "=$1"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>sql = sql  + "=?"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>sql = sql  + "=?"</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare(sql)</SourceLine>
   <SourceLine>if oRecord.GUID &lt;&gt; "" then</SourceLine>
   <SourceLine>BindId(stmt, 0, oRecord.GUID)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>BindId(stmt, 0, oRecord.ID)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1829050367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "needs to be implemented in subclass" )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>HasTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1656575999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasTable(sTableName as String) As boolean</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = Db.TableSchema</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>if rs.IdxField(1).StringValue = sTableName then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTableName as String</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>612296703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRecordID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>656164863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SelectList</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>734683135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectList(sTable as string, sCondition as string = "", sOrder as string = "") As RecordSet</SourceLine>
   <SourceLine>dim sSQL as string = "SELECT * FROM " + sTable + " "</SourceLine>
   <SourceLine>if sCondition&lt;&gt;"" then</SourceLine>
   <SourceLine>sSQL = sSQL + "WHERE " + sCondition</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sOrder&lt;&gt;"" then</SourceLine>
   <SourceLine>sSQL = sSQL + " ORDER BY " + sOrder</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>sSQL = sSQL + ";"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return SQLSelect(sSQL)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTable as string, sCondition as string = "", sOrder as string = ""</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1863710719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, iRecordID as integer) As RecordSet</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + " WHERE " + oTableInfo.sPrimaryKey + "=?"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare(sql)</SourceLine>
   <SourceLine>BindId(stmt, 0, iRecordID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, iRecordID as integer</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1458030591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, sRecorID as string) As RecordSet</SourceLine>
   <SourceLine>dim sql as string</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + " WHERE " + oTableInfo.sPrimaryKey + "=?"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare(sql)</SourceLine>
   <SourceLine>BindId(stmt, 0, sRecorID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, sRecorID as string</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SQLExecute</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1386369023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SQLExecute(sql as String)</SourceLine>
   <SourceLine>db.SQLExecute( sql )</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException( db, sql )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sql as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLSelect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>937889791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLSelect(sql as String) As RecordSet</SourceLine>
   <SourceLine>dim rs as RecordSet = db.SQLSelect( sql )</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException( db, sql )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sql as String</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>736366591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim oPrimaryKeyField as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>oPrimaryKeyField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName + "=?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.Append "UPDATE " + oTableInfo.sTableName + " SET "</SourceLine>
   <SourceLine>arsSQL.Append Join(arsField, ",")</SourceLine>
   <SourceLine>arsSQL.Append " WHERE " + oTableInfo.sPrimaryKey + "=?"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( Join(arsSQL, " ") )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroField.Append(oPrimaryKeyField)</SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="625557821">
 <ObjName>DatabaseException</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ActiveRecordException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>137385983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(db as Database, sql as string = "")</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>ErrorCode = db.ErrorCode</SourceLine>
   <SourceLine>ErrorMessage = db.ErrorMessage</SourceLine>
   <SourceLine>Message = Str( ErrorCode ) + ": " + ErrorMessage</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ErrorMessage = "Unknown error"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sql &lt;&gt; "" then</SourceLine>
   <SourceLine>Message = Message + EndOfLine + "   " + sql</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as Database, sql as string = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1099986943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sMessage as string, sSQL as string)</SourceLine>
   <SourceLine>if sMessage &lt;&gt; "" then</SourceLine>
   <SourceLine>me.Message = sMessage</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sSQL &lt;&gt; "" then</SourceLine>
   <SourceLine>me.Message = me.Message + EndOfLine +  "      " + sSQL</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sMessage as string, sSQL as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>ErrorCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1513154559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ErrorCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ErrorCode As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1879924735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ErrorMessage As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ErrorMessage As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>ErrorCode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ErrorMessage</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1817862288">
 <ObjName>ActiveRecordException</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>RuntimeException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1133582335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sMessage as string)</SourceLine>
   <SourceLine>me.Message = sMessage</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sMessage as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Reason</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ErrorNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Message</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1382836112">
 <ObjName>Context</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ConnectionAdapter_Count</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1614761983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConnectionAdapter_Count() As Integer</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>//BK 04Sept2015:  Really only needed on web apps.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m_dictTypeDb.Count</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Get</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>796139519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConnectionAdapter_Get(ty as Introspection.TypeInfo) As DatabaseAdapter</SourceLine>
   <SourceLine>'Start with this class and search the hash table in TP_ActiveRecord for</SourceLine>
   <SourceLine>'a database to use.</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>//BK 04Sept2015:  Really only needed on web apps.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'start with the given type and walk up the inheritance chain</SourceLine>
   <SourceLine>'looking for a databsae connection</SourceLine>
   <SourceLine>while ty&lt;&gt;nil</SourceLine>
   <SourceLine>adp = m_dictTypeDb.Lookup(ty.FullName, nil )</SourceLine>
   <SourceLine>if adp&lt;&gt;nil then</SourceLine>
   <SourceLine>exit while</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ty = ty.BaseType</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return adp</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo</ItemParams>
  <ItemResult>DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Remove</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>19208191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ConnectionAdapter_Remove(ty as Introspection.TypeInfo)</SourceLine>
   <SourceLine>'Disconnect a specific active record class from the database</SourceLine>
   <SourceLine>if ty=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if  not ty.IsSubclassOf( GetTypeInfo(TP_ActiveRecord.Base) ) and _</SourceLine>
   <SourceLine>not ty.IsSubclassOf( GetTypeInfo(TP_ActiveRecord.View) ) then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Invalid type. Expected a subclass of TP_ActiveRecord.Base")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>if m_dictTypeDb&lt;&gt;nil then</SourceLine>
   <SourceLine>m_dictTypeDb.Remove(ty.FullName)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Set</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1674108927</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ConnectionAdapter_Set(ty as Introspection.TypeInfo, adp as TP_ActiveRecord.DatabaseAdapter)</SourceLine>
   <SourceLine>'Connect a specific active record class and all of its subclasses to a database</SourceLine>
   <SourceLine>if ty=nil or adp=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if  not ty.IsSubclassOf( GetTypeInfo(TP_ActiveRecord.Base) ) and _</SourceLine>
   <SourceLine>not ty.IsSubclassOf( GetTypeInfo(TP_ActiveRecord.View) ) then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Invalid type. Expected a subclass of TP_ActiveRecord.Base")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'add the database using the full type name of the type as a key</SourceLine>
   <SourceLine>'Base will use this to find the appropriate adapter.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>m_dictTypeDb = new Dictionary</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_dictTypeDb.Value(ty.FullName) = adp</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, adp as TP_ActiveRecord.DatabaseAdapter</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1382057983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Mutexes work on Mac and Linux but not Windows.</SourceLine>
   <SourceLine>'CriticalSections work on Windows but not Mac.</SourceLine>
   <SourceLine>'(Verified as of 2011 R4.1)</SourceLine>
   <SourceLine>#if TargetWin32</SourceLine>
   <SourceLine>m_cs = new CriticalSection</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>m_cs = new Mutex("")</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_Get</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1580996607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TableInfo_Get(ty as Introspection.TypeInfo) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>//BK 04Sept2015:  Really only needed on web apps.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_dictTypeTableInfo.Lookup(ty.FullName, nil)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1160558591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TableInfo_List() As TP_ActiveRecord.P.TableInfo()</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>//BK 04Sept2015:  Really only needed on web apps.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>dim aro() as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each sKey as string in m_dictTypeTableInfo.Keys</SourceLine>
   <SourceLine>dim o as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>o = m_dictTypeTableInfo.Value(sKey)</SourceLine>
   <SourceLine>aro.Append(o)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo()</ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_Set</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>707643391</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TableInfo_Set(ty as Introspection.TypeInfo, oTableInfo as TP_ActiveRecord.P.TableInfo)</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>//BK 04Sept2015:  Really only needed on web apps.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>#Endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>m_dictTypeTableInfo = new Dictionary</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_dictTypeTableInfo.Value(ty.FullName) = oTableInfo</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as Introspection.TypeInfo, oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_cs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1507583999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_cs As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_cs As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictTypeDb</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1153458175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictTypeDb As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictTypeDb As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictTypeTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2141573119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictTypeTableInfo As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictTypeTableInfo As Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1258523356">
 <ObjName>ScopedLock</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1985781759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(cs as CriticalSection)</SourceLine>
   <SourceLine>if cs is nil then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Lock is set to Nil")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_cs = cs</SourceLine>
   <SourceLine>m_cs.Enter</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>cs as CriticalSection</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1984866303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>m_cs.Leave</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>Overview</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>392437759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Overview</NoteLine>
   <NoteLine>The Constructor for this class accepts a CriticalSection and immediately calls the Enter method.</NoteLine>
   <NoteLine>The Destructor calls Leave.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>You can use this class to hold a lock for the duration of the object's life. For example, if you</NoteLine>
   <NoteLine>create it at the beginning of a method than the lock will be held until the method is complete.</NoteLine>
   <NoteLine>The advantage of this is that the object will be destroyed regardless of how the method ends,</NoteLine>
   <NoteLine>via a return statement or an exception or whatever.</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>m_cs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1936617471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_cs As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_cs As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1435621795">
 <ObjName>FieldInfo</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1396746239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sField as string, pi as Introspection.PropertyInfo, oTypeInfo as Introspection.TypeInfo)</SourceLine>
   <SourceLine>self.sFieldName = sField</SourceLine>
   <SourceLine>self.piFieldProperty = pi</SourceLine>
   <SourceLine>self.moTypeInfo = oTypeInfo.BaseType</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sField as string, pi as Introspection.PropertyInfo, oTypeInfo as Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1939042303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsKey() As Boolean</SourceLine>
   <SourceLine>return (bForeignKey or bPrimaryKey)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetDBType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1068193791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetDBType()</SourceLine>
   <SourceLine>//First Get the Database Type</SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(moTypeInfo)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim db as database = adp.Db</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case db</SourceLine>
   <SourceLine>case nil</SourceLine>
   <SourceLine>'empty. This just let's it compile if someone turns off all the constants</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase and RBVersion&gt;=2013</SourceLine>
   <SourceLine>case isa SQLiteDatabase</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BOOLEAN</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BLOB</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer</SourceLine>
   <SourceLine>case isa MySQLCommunityServer</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_LONG</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_SHORT</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DATE</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_TIME</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_TIMESTAMP</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_TINY</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_BLOB</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_STRING</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_LONGLONG</SourceLine>
   <SourceLine>case DBType.DFloat, DBType.DDecimal</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>iDBType = MySQLPreparedStatement.MYSQL_TYPE_DOUBLE</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Postgres doesn't use bind types.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer</SourceLine>
   <SourceLine>case isa MSSQLServerDatabase</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_BIGINT</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_SMALLINT</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_DATE</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_TIME</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_TIMESTAMP</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_TINYINT</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_BINARY</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_STRING</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_BIGINT</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_FLOAT</SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>iDBType = MSSQLServerPreparedStatement.MSSQLSERVER_TYPE_BIGINT</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS then</SourceLine>
   <SourceLine>case isa SQLDatabaseMBS</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeUInt64</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeUShort</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeDouble</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeDateTime</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeDateTime</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeUInt64</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeBool</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeBlob</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeString</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeUInt64</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeDouble</SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>iDBType = SQLPreparedStatementMBS.kTypeUInt64</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>case isa ODBCDatabase</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_INTEGER</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_INTEGER</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_TIMESTAMP //Why Timestamp?  Testing shows that's the only thing works</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_STRING</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_TIMESTAMP</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_TINYINT</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_BINARY</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_STRING</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_BIGINT</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_FLOAT</SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>iDBType = ODBCPreparedStatement.ODBC_TYPE_BIGINT</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>case isa VSQLiteDatabase</SourceLine>
   <SourceLine>select case enFieldType</SourceLine>
   <SourceLine>case DBType.DInteger</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DSmallInt</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INTEGER</SourceLine>
   <SourceLine>case DBType.DDouble</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case DBType.DDate</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTime</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DTimestamp</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DBoolean</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BOOLEAN</SourceLine>
   <SourceLine>case DBType.DBlob</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_BLOB</SourceLine>
   <SourceLine>case DBType.DText</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_TEXT</SourceLine>
   <SourceLine>case DBType.DInt64</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_INT64</SourceLine>
   <SourceLine>case DBType.DFloat</SourceLine>
   <SourceLine>iDBType = SQLitePreparedStatement.SQLITE_DOUBLE</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>bForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1174095871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bForeignKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>bPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>812675071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bPrimaryKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bPrimaryKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>enFieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1622925311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>enFieldType As TP_ActiveRecord.DBType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>enFieldType As TP_ActiveRecord.DBType</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>menFieldType = value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SetDBType</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return menFieldType</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>iDBType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1908781055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iDBType As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iDBType As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>menFieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>533409791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>menFieldType As TP_ActiveRecord.DBType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>menFieldType As TP_ActiveRecord.DBType</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>moTypeInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>965554175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>moTypeInfo As Introspection.TypeInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>moTypeInfo As Introspection.TypeInfo</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>piFieldProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>606207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>piFieldProperty As Introspection.PropertyInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>piFieldProperty As Introspection.PropertyInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>534919167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sFieldName As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sFieldName As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>bForeignKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>bPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>enFieldType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>TP_ActiveRecord.DBType</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - DInteger</ItemDef>
    <ItemDef>1 - DSmallInt</ItemDef>
    <ItemDef>2 - DDouble</ItemDef>
    <ItemDef>3 - DDate</ItemDef>
    <ItemDef>4 - DTime</ItemDef>
    <ItemDef>5 - DTimestamp</ItemDef>
    <ItemDef>6 - DBoolean</ItemDef>
    <ItemDef>7 - DBlob</ItemDef>
    <ItemDef>8 - DText</ItemDef>
    <ItemDef>9 - DInt64</ItemDef>
    <ItemDef>10 - DFloat</ItemDef>
    <ItemDef>11 - DCurrency</ItemDef>
    <ItemDef>12 - DNotUsed</ItemDef>
    <ItemDef>13 - DDecimal</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iDBType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sFieldName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1516751326">
 <ObjName>TableInfo</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Property>
  <ItemName>aroField()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2113021951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>aroField() As TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>aroField() As TP_ActiveRecord.P.FieldInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>piPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>183486463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>piPrimaryKey As Introspection.PropertyInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>piPrimaryKey As Introspection.PropertyInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2133940223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sPrimaryKey As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sPrimaryKey As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>401233919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sTableName As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sTableName As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>tyClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1740009471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>tyClass As Introspection.TypeInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>tyClass As Introspection.TypeInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sTableName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1057624380">
 <ObjName>View</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1272053759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1128646655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(rs as RecordSet)</SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>545681407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return GetDatabaseAdapter.Db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1051283455</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As DatabaseAdapter</SourceLine>
   <SourceLine>return GetContext.ConnectionAdapter_Get(Introspection.GetType(self))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>909082623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableName() As String</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine>Return oTableInfo.sTableName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1256343551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ID() As integer</SourceLine>
   <SourceLine>//PROGRAMMER NOTE!</SourceLine>
   <SourceLine>//You are here because you've tried to use the ID of a VIEW</SourceLine>
   <SourceLine>//There is no ID in a view in ActiveRecord (or at least one that you can do anything with).</SourceLine>
   <SourceLine>//Check your stack and see where you came from.</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>926124031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as RecordSet)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord( rs, oTableInfo )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>660725759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as RecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim oField as DatabaseField = rs.Field( oFieldInfo.sFieldName )</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField is nil then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, _</SourceLine>
   <SourceLine>"A field needed to populate this record wasn't provided: " + _</SourceLine>
   <SourceLine>oFieldInfo.sFieldName )</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim vProperty as Variant</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pi.PropertyType.Name = "Double" then</SourceLine>
   <SourceLine>if oField.Value=nil then</SourceLine>
   <SourceLine>vProperty = TP_ActiveRecord.kDoubleNullSentinal</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>elseif pi.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim s as string = oField.StringValue</SourceLine>
   <SourceLine>if Encoding(s) is nil then</SourceLine>
   <SourceLine>s = DefineEncoding(s, Encodings.UTF8)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>vProperty = s</SourceLine>
   <SourceLine>elseif pi.PropertyType.IsPrimitive then</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>elseif pi.PropertyType = GetTypeInfo(Date) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim v as Variant = oField.Value</SourceLine>
   <SourceLine>if v = nil or v = "" then</SourceLine>
   <SourceLine>vProperty=nil</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim dt as new Date</SourceLine>
   <SourceLine>#pragma BreakOnExceptions False</SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>dt.SQLDateTime = v.StringValue</SourceLine>
   <SourceLine>Catch e as UnsupportedFormatException</SourceLine>
   <SourceLine>dt.SQLDateTime = "2000-01-01 00:00:00.000"</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine>vProperty=dt</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty= oField.Value</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pi.Value(self) = vProperty</SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = vProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as RecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="932341759">
 <ObjName>ODBCServerAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1292980223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>m_db.Commit 'commit the auto transaction</SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine>'ignore this one</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN TRANSACTION" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>549416959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>585660415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting with ODBC</SourceLine>
   <SourceLine>// and do not have the ODBCDatabase Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC</SourceLine>
   <SourceLine>dim db as ODBCDatabase = ODBCDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDb</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>911650815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>692011007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>//Note that this WILL change depending upon the database you're connecting to via ODBC.</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = SQLSelect("SELECT @@IDENTITY;")</SourceLine>
   <SourceLine>return rs.IdxField(1).Int64Value</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1641029631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>stmt.SQLExecute</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>'AR for ODBC does not support text. Feel free to modifiy this method to suit your needs.</SourceLine>
   <SourceLine>break </SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRecordID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1920679935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2030870527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1678030847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="131753769">
 <ObjName>ActiveRecordBase</ObjName>
 <ObjContainerID>1283433680</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.Base</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1985282210">
 <ObjName>ActiveRecordView</ObjName>
 <ObjContainerID>1283433680</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.View</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="100075519">
 <ObjName>ActiveRecordClass</ObjName>
 <ObjContainerID>1283433680</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>AfterCreate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>232916991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AfterCreate()</SourceLine>
   <SourceLine>dim oAudit as TP_AuditTrail.Entry = TP_AuditTrail.Entry.AuditAdd(self)</SourceLine>
   <SourceLine>'Add Additional Info here.</SourceLine>
   <SourceLine>'oAudit.srecordno = "your record number string Here"</SourceLine>
   <SourceLine>'oAudit.iparent_id = 0 'Parent Record ID here if required</SourceLine>
   <SourceLine>'oAudit.iuser_id = 0 'User ID if required.</SourceLine>
   <SourceLine>oAudit.Insert</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>AfterDelete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2025424895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AfterDelete()</SourceLine>
   <SourceLine>if self.IsNew = false then</SourceLine>
   <SourceLine>dim oAudit as TP_AuditTrail.Entry = TP_AuditTrail.Entry.AuditDelete(self)</SourceLine>
   <SourceLine>'oAudit.srecordno = "your record number string Here"</SourceLine>
   <SourceLine>'oAudit.iparent_id = 0 'Parent Record ID here if required</SourceLine>
   <SourceLine>'oAudit.iuser_id = 0 'User ID if required.</SourceLine>
   <SourceLine>oAudit.Insert</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>AfterUpdate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>177420287</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AfterUpdate()</SourceLine>
   <SourceLine>// If the record hasn't been modified don't add an audit trail</SourceLine>
   <SourceLine>if me.IsModified = true then</SourceLine>
   <SourceLine>dim oAudit as TP_AuditTrail.Entry = TP_AuditTrail.Entry.AuditEdit(self)</SourceLine>
   <SourceLine>'Add Additional Info here.</SourceLine>
   <SourceLine>'oAudit.srecordno = "your record number string Here"</SourceLine>
   <SourceLine>'oAudit.iparent_id = 0 'Parent Record ID here if required</SourceLine>
   <SourceLine>'oAudit.iuser_id = 0 'User ID if required.</SourceLine>
   <SourceLine>oAudit.Insert</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Validate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>258658303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Validate(oErrors as TP_ActiveRecord.ValidationErrors)</SourceLine>
   <SourceLine>// Check for errors here. Use this to prevent deletion.</SourceLine>
   <SourceLine>// Append to the oErrors object to cause validation to return false</SourceLine>
   <SourceLine>#pragma unused oErrors</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>989536255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As String</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM t_Table")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>FindByID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1641934847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FindByID(iID as Integer) As DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>// Use ActiveRecord Load function to get the record</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>if oRecord.Load(iID) then</SourceLine>
   <SourceLine>return oRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>iID as Integer</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass</ItemResult>
 </Method>
 <Method>
  <ItemName>FindByID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>452524031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FindByID(sID as String) As DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>// Use ActiveRecord Load function to get the record</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>if oRecord.Load(sID) then</SourceLine>
   <SourceLine>return oRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sID as String</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass</ItemResult>
 </Method>
 <Method>
  <ItemName>IsDuplicate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2084644863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsDuplicate(sValue as String) As Boolean</SourceLine>
   <SourceLine>// Use this Method to test for duplicate records</SourceLine>
   <SourceLine>// Note: The following example is for a SQLite database and may differ for your database.</SourceLine>
   <SourceLine>// For more information see http://docs.xojo.com/index.php/PreparedSQLStatement</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// dim arsSQL() as String</SourceLine>
   <SourceLine>// arsSQL.Append(t_Table.BaseSQL)</SourceLine>
   <SourceLine>// arsSQL.Append("WHERE %unique_field% = ?")</SourceLine>
   <SourceLine>// arsSQL.Append("AND %primary_key% &lt;&gt; ?")</SourceLine>
   <SourceLine>// </SourceLine>
   <SourceLine>// dim sSQL as String = Join(arsSQL, " ")</SourceLine>
   <SourceLine>// </SourceLine>
   <SourceLine>// dim ps as PreparedSQLStatement = DataFile.DB.Prepare(sSQL)</SourceLine>
   <SourceLine>// ps.BindType(0, SQLitePreparedStatement.SQLITE_TEXT)</SourceLine>
   <SourceLine>// ps.BindType(1, SQLitePreparedStatement.SQLITE_INTEGER)</SourceLine>
   <SourceLine>// ps.Bind(0, sValue)</SourceLine>
   <SourceLine>// ps.Bind(1, self.ID)</SourceLine>
   <SourceLine>// </SourceLine>
   <SourceLine>// dim rs as RecordSet = ps.SQLSelect</SourceLine>
   <SourceLine>// return (rs.Field("iCount").IntegerValue &gt; 0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sValue as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1841967103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(stmt as PreparedSQLStatement) As DataFile.ActiveRecordClass()</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns data from this table</SourceLine>
   <SourceLine>// and cast it to the ActiveRecord class for use</SourceLine>
   <SourceLine>dim aro() as DataFile.ActiveRecordClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1111312383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1) As DataFile.ActiveRecordClass()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>dim sBase as String = DataFile.ActiveRecordClass.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + str(DataFile.kMaxReturn) + " OFFSET " + str(iOffset))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DataFile.DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>90884095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(stmt as PreparedSQLStatement) As Integer</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns the count from this table</SourceLine>
   <SourceLine>dim rs as Recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine>return rs.IdxField(1).IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1358256127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as String = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.ActiveRecordClass.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="605638655">
 <ObjName>t_Table</ObjName>
 <ObjContainerID>1283433680</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>222914559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As String</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM t_Table")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>FindByID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>792496127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FindByID(iID as Integer) As DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>// Use ActiveRecord Load function to get the record</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>if oRecord.Load(iID) then</SourceLine>
   <SourceLine>return oRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>iID as Integer</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1339813887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(stmt as PreparedSQLStatement) As DataFile.t_Table()</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns data from this table</SourceLine>
   <SourceLine>// and cast it to the ActiveRecord class for use</SourceLine>
   <SourceLine>dim aro() as DataFile.t_Table</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.t_Table</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>DataFile.t_Table()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>841123839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1) As DataFile.t_Table()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>dim sBase as String = DataFile.t_Table.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + str(DataFile.kMaxReturn) + " OFFSET " + str(iOffset))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DataFile.DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.t_Table</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.t_Table</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.t_Table()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>273117183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(stmt as PreparedSQLStatement) As Integer</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns the count from this table</SourceLine>
   <SourceLine>dim rs as Recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine>return rs.IdxField(1).IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1506912255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as String = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.t_Table.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1291900927">
 <ObjName>vw_View</ObjName>
 <ObjContainerID>1283433680</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordView</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>187439103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As String</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM vw_View")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>225099775</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(stmt as PreparedSQLStatement) As DataFile.vw_View()</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns data from this table</SourceLine>
   <SourceLine>// and cast it to the ActiveRecord class for use</SourceLine>
   <SourceLine>dim aro() as DataFile.vw_View</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.vw_View</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>DataFile.vw_View()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1743415295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1) As DataFile.vw_View()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>dim sBase as String = DataFile.vw_View.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + str(DataFile.kMaxReturn) + " OFFSET " + str(iOffset))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DataFile.DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.vw_View</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.vw_View</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = "", sOrder as String = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.vw_View()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1807689727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(stmt as PreparedSQLStatement) As Integer</SourceLine>
   <SourceLine>// Take a PreparedStatement that returns the count from this table</SourceLine>
   <SourceLine>dim rs as Recordset = stmt.SQLSelectRaiseOnError(db)</SourceLine>
   <SourceLine>return rs.IdxField(1).IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>stmt as PreparedSQLStatement</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1381060607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as String = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as String</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.vw_View.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as recordset = DB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as String = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="264087551">
 <ObjName>App Parts</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="375033321">
 <ObjName>App</ObjName>
 <ObjContainerID>264087551</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Application</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>785238015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>if DataFile.db &lt;&gt; nil then</SourceLine>
   <SourceLine>DataFile.db.Close()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Valentina.ShutDownClient()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1465083903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseVSQLiteDatabase</SourceLine>
   <SourceLine>Valentina.InitClient()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if DebugBuild then</SourceLine>
   <SourceLine>Valentina.DebugLevel = EVDebugLevel.kLogParams</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Valentina.DebugLevel = EVDebugLevel.kLogNothing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Connect to the database</SourceLine>
   <SourceLine>call DataFile.DB</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <MenuHandler>
  <ItemName>AboutActiveRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2029680639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AboutActiveRecord() As Boolean Handles AboutActiveRecord.Action</SourceLine>
   <SourceLine>MsgBox("ActiveRecord for Xojo" + EndOfLine + EndOfLine + _</SourceLine>
   <SourceLine>"Release " + Format(TP_ActiveRecord.kVersion, "####.00"))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ARGenHomePage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2145134591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ARGenHomePage() As Boolean Handles ARGenHomePage.Action</SourceLine>
   <SourceLine>ShowURL("https://strawberrysw.com/argen")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>ARHomePage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1075894271</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ARHomePage() As Boolean Handles ARHomePage.Action</SourceLine>
   <SourceLine>ShowURL("https://strawberrysw.com/activerecord")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <MenuHandler>
  <ItemName>HelpStrawberryWebsite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>690712575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HelpStrawberryWebsite() As Boolean Handles HelpStrawberryWebsite.Action</SourceLine>
   <SourceLine>ShowURL("https://strawberrysw.com")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </MenuHandler>
 <PropertyVal Name="MenuBar">1408456886</PropertyVal>
 <ViewBehavior>
 </ViewBehavior>
 <Constant>
  <ItemName>kEditClear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>461357055</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Delete</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>&amp;Delete</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kFileQuit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1311021055</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>&amp;Quit</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>E&amp;xit</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kFileQuitShortcut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>916994047</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Cmd+Q</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>0</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Ctrl+Q</ItemDef>
  </ConstantInstance>
 </Constant>
</block>
<block type="Menu" ID="1408456886">
 <ObjName>MenuBar1</ObjName>
 <ObjContainerID>264087551</ObjContainerID>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>FileMenu</ItemName>
  <ItemText>&amp;File</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <MenuItemVisible>1</MenuItemVisible>
  <ItemFlags>0</ItemFlags>
  <ObjName>FileMenu</ObjName>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileQuit</ItemName>
   <ItemText>#App.kFileQuit</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>#App.kFileQuitShortcut</ItemShortcut>
   <MenuShortcut>#App.kFileQuitShortcut</MenuShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>FileQuit</ObjName>
   <Superclass>QuitMenuItem</Superclass>
  </MenuItem>
 </MenuItem>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>EditMenu</ItemName>
  <ItemText>&amp;Edit</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <MenuItemVisible>1</MenuItemVisible>
  <ItemFlags>0</ItemFlags>
  <ObjName>EditMenu</ObjName>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditUndo</ItemName>
   <ItemText>&amp;Undo</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+Z</ItemShortcut>
   <MenuShortcut>Z</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditUndo</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu1</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>UntitledMenu1</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCut</ItemName>
   <ItemText>Cu&amp;t</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+X</ItemShortcut>
   <MenuShortcut>X</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditCut</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCopy</ItemName>
   <ItemText>&amp;Copy</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+C</ItemShortcut>
   <MenuShortcut>C</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditCopy</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditPaste</ItemName>
   <ItemText>&amp;Paste</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+V</ItemShortcut>
   <MenuShortcut>V</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditPaste</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditClear</ItemName>
   <ItemText>#App.kEditClear</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditClear</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu0</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>UntitledMenu0</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditSelectAll</ItemName>
   <ItemText>Select &amp;All</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+A</ItemShortcut>
   <MenuShortcut>A</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>EditSelectAll</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
 </MenuItem>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>HelpMenu</ItemName>
  <ItemText>Help</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <MenuItemVisible>1</MenuItemVisible>
  <ItemFlags>0</ItemFlags>
  <ObjName>HelpMenu</ObjName>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>HelpStrawberryWebsite</ItemName>
   <ItemText>Strawberry Software Website</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>HelpStrawberryWebsite</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ARHomePage</ItemName>
   <ItemText>ActiveRecord Home Page</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>ARHomePage</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>ARGenHomePage</ItemName>
   <ItemText>ARGen Home Page</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>ARGenHomePage</ObjName>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>AboutActiveRecord</ItemName>
   <ItemText>About ActiveRecord</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <ObjName>AboutActiveRecord</ObjName>
   <Superclass>ApplicationMenuItem</Superclass>
  </MenuItem>
 </MenuItem>
</block>
<block type="Folder" ID="251504639">
 <ObjName>Extras</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="1829013503">
 <ObjName>Globals</ObjName>
 <ObjContainerID>251504639</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AddField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1920163839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddField(sTable as String, sField as String, sType as String)</SourceLine>
   <SourceLine>// Make sure table exists</SourceLine>
   <SourceLine>if HasTable(sTable) then</SourceLine>
   <SourceLine>// Add field if it doesn't already exist in the given table</SourceLine>
   <SourceLine>if HasField(sTable, sField) = false then</SourceLine>
   <SourceLine>dim sSQL as String = "ALTER TABLE " + sTable + " ADD " + sField + " " + sType + ""</SourceLine>
   <SourceLine>DataFile.DB.SQLExecuteRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTable as String, sField as String, sType as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HasField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1907068927</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasField(sTable as String, sField as String) As Boolean</SourceLine>
   <SourceLine>// Check the table and return true if there is a column (sField)</SourceLine>
   <SourceLine>if DataFile.DB = nil then</SourceLine>
   <SourceLine>// Database is not connected!</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as RecordSet = DataFile.DB.FieldSchema(sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>if rs.Field("ColumnName").StringValue = sField then</SourceLine>
   <SourceLine>// Field exists</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Table was not found</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTable as String, sField as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>HasTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1775398911</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasTable(sTableName as String) As Boolean</SourceLine>
   <SourceLine>// Check the database and return true if the table exists</SourceLine>
   <SourceLine>if DataFile.DB = nil then</SourceLine>
   <SourceLine>// Database is not connected!</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as RecordSet = DataFile.DB.TableSchema</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>if rs.IdxField(1).StringValue = sTableName then</SourceLine>
   <SourceLine>// Table exists</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Table was not found</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTableName as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="73786099">
 <ObjName>TP_AuditTrail</ObjName>
 <ObjContainerID>251504639</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CloneDictionary</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1513392127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CloneDictionary(tdictSource as Dictionary) As Dictionary</SourceLine>
   <SourceLine>// Namespaced dictionary clone function</SourceLine>
   <SourceLine>dim tdictNew as new Dictionary</SourceLine>
   <SourceLine>if tdictSource = nil then return tdictNew</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for ti as Integer = (tdictSource.Count - 1) downto 0</SourceLine>
   <SourceLine>// Clone the entry</SourceLine>
   <SourceLine>dim tvKey as Variant = tdictSource.Key(ti)</SourceLine>
   <SourceLine>tdictNew.Value(tvKey) = tdictSource.Value(tvKey)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next ti</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return tdictNew</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tdictSource as Dictionary</ItemParams>
  <ItemResult>Dictionary</ItemResult>
 </Method>
 <Method>
  <ItemName>CreateAuditTables</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>556251135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CreateAuditTables(toLocalDB as Database)</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa CubeSQLVM then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateAuditTablesSQLite)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer = true then</SourceLine>
   <SourceLine>if toLocalDB isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateAuditTablesMSSQL)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer = true then</SourceLine>
   <SourceLine>if toLocalDB isa MySQLCommunityServer then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("START TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateAuditTablesMySQL)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC = true then</SourceLine>
   <SourceLine>#pragma Error "TP_AuditTrail does not support ODBC connections."</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("START TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateAuditTablesPostgres)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa SQLiteDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateAuditTablesSQLite)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>catch ex as TP_ActiveRecord.DatabaseException</SourceLine>
   <SourceLine>toLocalDB.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kCreateAuditTablesMSSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>380934143</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateAuditTablesMySQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2072410111</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateAuditTablesPostgres</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>223436799</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateAuditTablesSQLite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1514862591</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="728335528">
 <ObjName>ChangeLog</ObjName>
 <ObjContainerID>73786099</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Property>
  <ItemName>iaudit_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>503367679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iaudit_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iaudit_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ichangelog_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2043281407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>ichangelog_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ichangelog_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sfieldname</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1548341247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sfieldname As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sfieldname As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>snewvalue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>9768959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>snewvalue As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>snewvalue As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>soldvalue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2006007807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>soldvalue As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>soldvalue As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iaudit_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ichangelog_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sfieldname</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>snewvalue</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>soldvalue</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="450544066">
 <ObjName>Entry</ObjName>
 <ObjContainerID>73786099</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AuditAdd</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>88203263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function AuditAdd(oRecord as DataFile.ActiveRecordBase) As TP_AuditTrail.Entry</SourceLine>
   <SourceLine>dim oAudit as new TP_AuditTrail.Entry</SourceLine>
   <SourceLine>oAudit.m_oRecord = oRecord</SourceLine>
   <SourceLine>oAudit.irecord_id = oAudit.m_oRecord.ID</SourceLine>
   <SourceLine>oAudit.sAction = kAuditAdd</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oAudit</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>oRecord as DataFile.ActiveRecordBase</ItemParams>
  <ItemResult>TP_AuditTrail.Entry</ItemResult>
 </Method>
 <Method>
  <ItemName>AuditDelete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1856706559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function AuditDelete(oRecord as DataFile.ActiveRecordBase) As TP_AuditTrail.Entry</SourceLine>
   <SourceLine>dim oAudit as new TP_AuditTrail.Entry</SourceLine>
   <SourceLine>oAudit.m_oRecord = oRecord</SourceLine>
   <SourceLine>oAudit.irecord_id = oAudit.m_oRecord.ID</SourceLine>
   <SourceLine>oAudit.sAction = kAuditDelete</SourceLine>
   <SourceLine>return oAudit</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>oRecord as DataFile.ActiveRecordBase</ItemParams>
  <ItemResult>TP_AuditTrail.Entry</ItemResult>
 </Method>
 <Method>
  <ItemName>AuditEdit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1498114047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function AuditEdit(oRecord as DataFile.ActiveRecordBase) As TP_AuditTrail.Entry</SourceLine>
   <SourceLine>dim oAudit as new TP_AuditTrail.Entry</SourceLine>
   <SourceLine>oAudit.m_oRecord = oRecord</SourceLine>
   <SourceLine>oAudit.irecord_id = oAudit.m_oRecord.ID</SourceLine>
   <SourceLine>oAudit.sAction = kAuditEdit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Build Change Log</SourceLine>
   <SourceLine>for each oChange as TP_AuditTrail.ChangeLog in oAudit.m_oRecord.BuildChangeLog</SourceLine>
   <SourceLine>dim bAddChange as Boolean = true</SourceLine>
   <SourceLine>//Ignore modified date/user fields</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sField as string = oChange.sFieldName.Lowercase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if  sField.instr("modified") &gt; 0 then</SourceLine>
   <SourceLine>bAddChange = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Add Change</SourceLine>
   <SourceLine>if bAddChange = true then</SourceLine>
   <SourceLine>dim oLog as new TP_AuditTrail.ChangeLog</SourceLine>
   <SourceLine>oLog.sFieldName = oChange.sFieldName</SourceLine>
   <SourceLine>oLog.sOldValue = oChange.sOldValue</SourceLine>
   <SourceLine>oLog.sNewValue = oChange.sNewValue</SourceLine>
   <SourceLine>oAudit.aroChangeLog.Append oLog</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oAudit</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>oRecord as DataFile.ActiveRecordBase</ItemParams>
  <ItemResult>TP_AuditTrail.Entry</ItemResult>
 </Method>
 <Method>
  <ItemName>Insert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1363802111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Insert()</SourceLine>
   <SourceLine>Dim oAudit As New DatabaseRecord</SourceLine>
   <SourceLine>oAudit.IntegerColumn("record_id") = irecord_id</SourceLine>
   <SourceLine>oAudit.IntegerColumn("parent_id") = iparent_id</SourceLine>
   <SourceLine>oAudit.Column("recordtable") = m_oRecord.GetTableName</SourceLine>
   <SourceLine>oAudit.Column("recordaction") = saction</SourceLine>
   <SourceLine>oAudit.DateColumn("actiondate") = new date</SourceLine>
   <SourceLine>oAudit.IntegerColumn("user_id") = iuser_id</SourceLine>
   <SourceLine>oAudit.Column("recordno") = srecordno</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Insert Record</SourceLine>
   <SourceLine>DataFile.DB.InsertRecord("t_tp_audit", oAudit)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Check for Error</SourceLine>
   <SourceLine>if DataFile.DB.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(DataFile.DB.ErrorMessage, "audit insert")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if saction &lt;&gt; kAuditEdit then Return 'Change log is only needed for edit.</SourceLine>
   <SourceLine>'Get the New Record ID.</SourceLine>
   <SourceLine>dim iAuditID as int64</SourceLine>
   <SourceLine>iAuditID = m_oRecord.ID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Save Children if required</SourceLine>
   <SourceLine>for each oChange as TP_AuditTrail.ChangeLog in aroChangeLog</SourceLine>
   <SourceLine>Dim oChild As New DatabaseRecord</SourceLine>
   <SourceLine>oChild.IntegerColumn("audit_id") = iAuditID</SourceLine>
   <SourceLine>oChild.Column("fieldname") = oChange.sfieldname</SourceLine>
   <SourceLine>oChild.Column("oldvalue") = oChange.soldvalue</SourceLine>
   <SourceLine>oChild.Column("newvalue") = oChange.snewvalue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Insert Record</SourceLine>
   <SourceLine>DataFile.DB.InsertRecord("t_tp_changelog", oChild)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Check for Error</SourceLine>
   <SourceLine>if DataFile.DB.Error Then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(DataFile.DB.ErrorMessage, "audit change log insert")</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>aroChangeLog()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>734980095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>aroChangeLog() As TP_AuditTrail.ChangeLog</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>aroChangeLog() As TP_AuditTrail.ChangeLog</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>dtactiondate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>944834559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dtactiondate As Date</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>dtactiondate As Date</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>iaudit_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>899561471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iaudit_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iaudit_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>iparent_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1059315711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iparent_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iparent_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>irecord_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1971171327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>irecord_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>irecord_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>iuser_id</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1242916863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>iuser_id As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>iuser_id As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_oRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>317540351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_oRecord As DataFile.ActiveRecordBase</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_oRecord As DataFile.ActiveRecordBase</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>saction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>856193023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>saction As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>saction As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>srecordno</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>74541055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>srecordno As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>srecordno As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>srecordtable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1341456383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>srecordtable As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>srecordtable As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iaudit_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iparent_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>irecord_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>iuser_id</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>saction</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>srecordno</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>srecordtable</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kAuditAdd</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>309587967</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Add</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kAuditDelete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1996642303</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Delete</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kAuditEdit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>266457087</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Edit</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kAuditVoid</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1604655103</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Void</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="2019680067">
 <ObjName>TP_DBUpdates</ObjName>
 <ObjContainerID>251504639</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CreateVersionTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>228415487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CreateVersionTable(toLocalDB as Database)</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa CubeSQLVM then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateVersionTableSQLite)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServer = true then</SourceLine>
   <SourceLine>if toLocalDB isa MSSQLServerDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateVersionTableMSSQL)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMySQLCommunityServer = true then</SourceLine>
   <SourceLine>if toLocalDB isa MySQLCommunityServer then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("START TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateVersionTableMySQL)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseODBC = true then</SourceLine>
   <SourceLine>#pragma Error "TP_AuditTrail does not support ODBC connections."</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUsePostgreSQLDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa PostgreSQLDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("START TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateVersionTablePostgres)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseSQLiteDatabase = true then</SourceLine>
   <SourceLine>if toLocalDB isa SQLiteDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(kCreateVersionTableSQLite)</SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>catch ex as TP_ActiveRecord.DatabaseException</SourceLine>
   <SourceLine>toLocalDB.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1493309439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDBVersion(toLocalDB as Database) As Integer</SourceLine>
   <SourceLine>dim sSQL as String = "SELECT Max(dbversionnumber) AS CurrentVersionCode FROM t_tp_dbversion"</SourceLine>
   <SourceLine>dim rs as RecordSet = toLocalDB.SQLSelectRaiseOnError(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("CurrentVersionCode").IntegerValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>SetDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1207848959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetDBVersion(toLocalDB as Database, iVersion as Integer)</SourceLine>
   <SourceLine>dim sSQL as String = "INSERT INTO t_tp_dbversion(dbversionnumber) VALUES (" + Format(iVersion, "#########") + ");"</SourceLine>
   <SourceLine>toLocalDB.SQLExecuteRaiseOnError(sSQL)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database, iVersion as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateDB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>879736831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateDB(toLocalDB as Database)</SourceLine>
   <SourceLine>// Create the version table if necessary</SourceLine>
   <SourceLine>CreateVersionTable(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iDBVersion as Integer = GetDBVersion(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If the version is current we're done</SourceLine>
   <SourceLine>if iDBVersion &gt;= kDBVersion then return</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseCubeDatabase or _</SourceLine>
   <SourceLine>TP_ActiveRecord.kConfigUseMSSQLServer or _</SourceLine>
   <SourceLine>TP_ActiveRecord.kConfigUseSQLiteDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecute("BEGIN TRANSACTION")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#elseif TP_ActiveRecord.kConfigUseMySQLCommunityServer or _</SourceLine>
   <SourceLine>TP_ActiveRecord.kConfigUsePostgreSQLDatabase then</SourceLine>
   <SourceLine>toLocalDB.SQLExecute("START TRANSACTION")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if toLocalDB.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(toLocalDB.ErrorMessage)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>// This example is the base for how this update function works</SourceLine>
   <SourceLine>// Repeat this if block for each version. We recommend using</SourceLine>
   <SourceLine>// a different method for each version update, this will help</SourceLine>
   <SourceLine>// keep your code clean and organized.</SourceLine>
   <SourceLine>if iDBVersion &lt; 1 then UpdateVersion_001(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// After checking for updates, set the current version</SourceLine>
   <SourceLine>SetDBVersion(toLocalDB, kDBVersion)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>toLocalDB.Commit</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>catch ex as TP_ActiveRecord.DatabaseException</SourceLine>
   <SourceLine>toLocalDB.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateVersion_001</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1446522879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateVersion_001(toLocalDB as Database)</SourceLine>
   <SourceLine>// This is an example function for updating the database</SourceLine>
   <SourceLine>// Use it as a template for updates to the database</SourceLine>
   <SourceLine>#pragma unused toLocalDB</SourceLine>
   <SourceLine>// toLocalDB.SQLExecuteRaiseOnError("{SQL Statement}")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as Database</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kCreateVersionTableMSSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>254285823</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateVersionTableMySQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>296030207</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateVersionTablePostgres</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2045151231</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kCreateVersionTableSQLite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1217810431</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytes="182">435245415445205441424C45204946204E4F54204558495354532020745F74705F646276657273696F6E20280A0920646276657273696F6E5F696420494E5445474552204E4F54204E554C4C205052494D415259204B4559204155544F494E4352454D454E542C0A092064626461746574696D652054494D455354414D502044454641554C542043555252454E545F54494D455354414D502C0A0920646276657273696F6E6E756D62657220494E54454745520A293B</Hex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1368305663</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="1736230911">
 <ObjName>MSSQLServerAdapterMBS</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1703608319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>// Per Christian "You may not call BeginTransaction method in Xojo.</SourceLine>
   <SourceLine>//                This would execute the "BEGIN TRANSACTION" internally,</SourceLine>
   <SourceLine>//                which conflicts the auto commit as the plugin may start</SourceLine>
   <SourceLine>//                a transaction and that may cause an error for starting a</SourceLine>
   <SourceLine>//                transaction within a transaction."</SourceLine>
   <SourceLine>// https://mbs-plugins.de/archive/2020-01-19/Transactions_in_MBS_Xojo_SQL_P/monkeybreadsoftware_blog_xojo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// So, we do nothing</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>410775551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>dim ex as new TP_ActiveRecord.DatabaseException(db, "Commit")</SourceLine>
   <SourceLine>db.Rollback</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1215131647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine>// If you are not connecting to MS SQL Server</SourceLine>
   <SourceLine>// and do not have the MBS SQL Plugin</SourceLine>
   <SourceLine>// then you can safely delete this class</SourceLine>
   <SourceLine>#if TP_ActiveRecord.kConfigUseMSSQLServerMBS then</SourceLine>
   <SourceLine>dim db as SQLDatabaseMBS = SQLDatabaseMBS(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>#pragma unused oDB</SourceLine>
   <SourceLine>raise new UnsupportedOperationException</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1625552895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As Database</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Database</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1118576639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>dim rs as RecordSet</SourceLine>
   <SourceLine>rs = SQLSelect("SELECT @@IDENTITY;")</SourceLine>
   <SourceLine>return rs.IdxField(1).Int64Value</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1400831999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as string</SourceLine>
   <SourceLine>dim arsPlaceholder() as string</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as string</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsSQL() as string</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arssql.Append "OUTPUT inserted." + sPK</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sSQL as string = Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim stmt as PreparedSQLStatement</SourceLine>
   <SourceLine>stmt = db.Prepare( sSQL )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValue = BindValues(stmt, oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as recordset = stmt.SQLSelect</SourceLine>
   <SourceLine>if db.Error then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.DatabaseException(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim sRecordID as string = rs.Field(sPK).StringValue</SourceLine>
   <SourceLine>sRecordID = sRecordID.ReplaceAll("{", "")</SourceLine>
   <SourceLine>sRecordID = sRecordID.ReplaceAll("}", "")</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim iRecordID as Int64 = rs.Field(sPK).Int64Value</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine>oRecord.id = iRecordID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1477943295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1020829695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As Database</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As Database</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1020280831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kFieldSchema</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>123623423</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef><Hex bytesex></ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
</RBProject>
