<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2019r1.1" FormatVersion="2" MinIDEVersion="20140300">
<block type="Project" ID="0">
 <ProjectSavedInVers>2019.011</ProjectSavedInVers>
 <MajorVersion>1</MajorVersion>
 <MinorVersion>0</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>0</NonRelease>
 <Region></Region>
 <ShortVersion></ShortVersion>
 <LongVersion></LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>0</AutoIncVersion>
 <DefaultViewID>1607032831</DefaultViewID>
 <ProjectType>4</ProjectType>
 <DefaultLanguage>0</DefaultLanguage>
 <CurrentLanguage>0</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>16640</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <DefaultTabletViewID>1428301823</DefaultTabletViewID>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonMachOName>ActiveRecord</BuildCarbonMachOName>
 <BundleIdentifier>com.strawberrysw.activerecord</BundleIdentifier>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>ActiveRecord.exe</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName>bkeeney</BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <BuildWinFileDescription></BuildWinFileDescription>
 <UseGDIPlus>0</UseGDIPlus>
 <BuildLinuxX86Name>ActiveRecord</BuildLinuxX86Name>
 <DebuggerCommandLine></DebuggerCommandLine>
 <BuildiOSName>ActiveRecord iOS</BuildiOSName>
 <ProvisioningProfileName>0</ProvisioningProfileName>
 <GlobalUsingClauses>1</GlobalUsingClauses>
 <EnvVars></EnvVars>
 <IOSCapabilities>{"AppGroups":{"Enabled":false,"Groups":{}},"ApplePay":{"Enabled":false,"Merchants":{}},"AssociatedDomains":{"Enabled":false,"Domains":{}},"BackgroundModes":{"Enabled":false,"Modes":{}},"iCloud":{"Enabled":false,"Containers":{}},"KeyChainSharing":{"Enabled":false,"Groups":{}},"Maps":{"Enabled":false,"MapDirections":{}},"Passbook":{"Enabled":false,"Passes":{}}}</IOSCapabilities>
 <BuildForAppStore>0</BuildForAppStore>
 <OptimizationLevel>0</OptimizationLevel>
 <WindowsVersions>{35138b9a-5d96-4fbd-8e2d-a2440225f93a}|{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}|{1f676c76-80e1-4239-95bb-83d0f6d0da78}|{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}</WindowsVersions>
 <WindowsRunAs>0</WindowsRunAs>
</block>
<block type="Module" ID="109858815">
 <ObjName>App</ObjName>
 <ObjContainerID>241080319</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>IOSApplication</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility>TargetIOS</Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>580823039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open(launchOptionsHandle as Ptr) As Boolean</SourceLine>
   <SourceLine>#pragma unused launchOptionsHandle</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if XojoVersion &lt; 2015.023 then</SourceLine>
   <SourceLine>// Bug in introspection</SourceLine>
   <SourceLine>// feedback://showreport?report_id=40034</SourceLine>
   <SourceLine>#pragma Error "ActiveRecord requires Xojo 2015r2.3 or later"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if DataFile.OpenDB = false then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
 </HookInstance>
 <PropertyVal Name="MenuBar">0</PropertyVal>
 <ViewBehavior>
 </ViewBehavior>
</block>
<block type="IOSScreen" ID="1607032831">
 <ObjName>iPhoneScreen</ObjName>
 <ObjContainerID>241080319</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>iosScreen</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <PropertyVal Name="OrientationPortraitUpsideDown">True</PropertyVal>
 <PropertyVal Name="OrientationLandscapeRight">True</PropertyVal>
 <PropertyVal Name="OrientationLandscapeLeft">True</PropertyVal>
 <PropertyVal Name="OrientationPortrait">True</PropertyVal>
 <PropertyVal Name="Content">1689186303</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <ScreenContentItem>
  <ItemName></ItemName>
  <Target>1689186303</Target>
  <Icon>0</Icon>
  <ScreenContentItem>
   <ItemName>Tab 0</ItemName>
   <Target>2026569727</Target>
   <Icon>0</Icon>
  </ScreenContentItem>
  <ScreenContentItem>
   <ItemName>Tab 1</ItemName>
   <Target>0</Target>
   <Icon>0</Icon>
  </ScreenContentItem>
 </ScreenContentItem>
</block>
<block type="IOSScreen" ID="1428301823">
 <ObjName>iPadScreen</ObjName>
 <ObjContainerID>241080319</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>iosScreen</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <PropertyVal Name="OrientationPortraitUpsideDown">True</PropertyVal>
 <PropertyVal Name="OrientationLandscapeRight">True</PropertyVal>
 <PropertyVal Name="OrientationLandscapeLeft">True</PropertyVal>
 <PropertyVal Name="OrientationPortrait">True</PropertyVal>
 <PropertyVal Name="Content">1689186303</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <ScreenContentItem>
  <ItemName></ItemName>
  <Target>1689186303</Target>
  <Icon>0</Icon>
 </ScreenContentItem>
</block>
<block type="ApplicationIcon" ID="740607999">
 <ObjName>App Icon</ObjName>
 <ObjContainerID>241080319</ObjContainerID>
 <ItemName>App Icon</ItemName>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>16</Height>
   <Orientation>0</Orientation>
   <Platform>6</Platform>
   <Resolution>72</Resolution>
   <Width>16</Width>
   <HeightDouble>16</HeightDouble>
   <WidthDouble>16</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>16</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>144</Resolution>
   <Width>16</Width>
   <HeightDouble>16</HeightDouble>
   <WidthDouble>16</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>32</Height>
   <Orientation>0</Orientation>
   <Platform>6</Platform>
   <Resolution>72</Resolution>
   <Width>32</Width>
   <HeightDouble>32</HeightDouble>
   <WidthDouble>32</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>32</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>144</Resolution>
   <Width>32</Width>
   <HeightDouble>32</HeightDouble>
   <WidthDouble>32</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment>Tiles / Thumbnails</Comment>
   <Device>16</Device>
   <Height>48</Height>
   <Orientation>0</Orientation>
   <Platform>4</Platform>
   <Resolution>96</Resolution>
   <Width>48</Width>
   <HeightDouble>48</HeightDouble>
   <WidthDouble>48</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>128</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>72</Resolution>
   <Width>128</Width>
   <HeightDouble>128</HeightDouble>
   <WidthDouble>128</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>128</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>144</Resolution>
   <Width>128</Width>
   <HeightDouble>128</HeightDouble>
   <WidthDouble>128</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>256</Height>
   <Orientation>0</Orientation>
   <Platform>6</Platform>
   <Resolution>72</Resolution>
   <Width>256</Width>
   <HeightDouble>256</HeightDouble>
   <WidthDouble>256</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>256</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>144</Resolution>
   <Width>256</Width>
   <HeightDouble>256</HeightDouble>
   <WidthDouble>256</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>512</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>72</Resolution>
   <Width>512</Width>
   <HeightDouble>512</HeightDouble>
   <WidthDouble>512</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment></Comment>
   <Device>16</Device>
   <Height>512</Height>
   <Orientation>0</Orientation>
   <Platform>2</Platform>
   <Resolution>144</Resolution>
   <Width>512</Width>
   <HeightDouble>512</HeightDouble>
   <WidthDouble>512</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="21">4E6F74696669636174696F6E0A694F5320372D3130</Hex></Comment>
   <Device>3</Device>
   <Height>20</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>72</Resolution>
   <Width>20</Width>
   <HeightDouble>20</HeightDouble>
   <WidthDouble>20</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="21">4E6F74696669636174696F6E0A694F5320372D3130</Hex></Comment>
   <Device>3</Device>
   <Height>20</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>20</Width>
   <HeightDouble>20</HeightDouble>
   <WidthDouble>20</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="21">4E6F74696669636174696F6E0A694F5320372D3130</Hex></Comment>
   <Device>3</Device>
   <Height>20</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>216</Resolution>
   <Width>20</Width>
   <HeightDouble>20</HeightDouble>
   <WidthDouble>20</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="16">53657474696E67730A694F5320352D38</Hex></Comment>
   <Device>2</Device>
   <Height>29</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>72</Resolution>
   <Width>29</Width>
   <HeightDouble>29</HeightDouble>
   <WidthDouble>29</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="16">53657474696E67730A694F5320352D38</Hex></Comment>
   <Device>7</Device>
   <Height>29</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>29</Width>
   <HeightDouble>29</HeightDouble>
   <WidthDouble>29</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="16">53657474696E67730A694F5320352D38</Hex></Comment>
   <Device>1</Device>
   <Height>29</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>216</Resolution>
   <Width>29</Width>
   <HeightDouble>29</HeightDouble>
   <WidthDouble>29</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="17">53706F746C696768740A694F5320372C38</Hex></Comment>
   <Device>2</Device>
   <Height>40</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>72</Resolution>
   <Width>40</Width>
   <HeightDouble>40</HeightDouble>
   <WidthDouble>40</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="18">53706F746C696768740A694F5320372C2038</Hex></Comment>
   <Device>7</Device>
   <Height>40</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>40</Width>
   <HeightDouble>40</HeightDouble>
   <WidthDouble>40</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="18">53706F746C696768740A694F5320372C2038</Hex></Comment>
   <Device>1</Device>
   <Height>40</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>216</Resolution>
   <Width>40</Width>
   <HeightDouble>40</HeightDouble>
   <WidthDouble>40</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="12">4170700A694F5320372C2038</Hex></Comment>
   <Device>1</Device>
   <Height>60</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>60</Width>
   <HeightDouble>60</HeightDouble>
   <WidthDouble>60</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="12">4170700A694F5320372C2038</Hex></Comment>
   <Device>1</Device>
   <Height>60</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>216</Resolution>
   <Width>60</Width>
   <HeightDouble>60</HeightDouble>
   <WidthDouble>60</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="11">4170700A694F5320372C38</Hex></Comment>
   <Device>2</Device>
   <Height>76</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>72</Resolution>
   <Width>76</Width>
   <HeightDouble>76</HeightDouble>
   <WidthDouble>76</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="11">4170700A694F5320372C38</Hex></Comment>
   <Device>2</Device>
   <Height>76</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>76</Width>
   <HeightDouble>76</HeightDouble>
   <WidthDouble>76</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="12">4170700A694F5320392D3130</Hex></Comment>
   <Device>2</Device>
   <Height>83</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>144</Resolution>
   <Width>83</Width>
   <HeightDouble>84</HeightDouble>
   <WidthDouble>84</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
 <ImageRepresentation>
  <ImageSpecification>
   <Comment><Hex bytes="13">4170700A694F532031302D3131</Hex></Comment>
   <Device>8192</Device>
   <Height>1024</Height>
   <Orientation>0</Orientation>
   <Platform>1</Platform>
   <Resolution>72</Resolution>
   <Width>1024</Width>
   <HeightDouble>1024</HeightDouble>
   <WidthDouble>1024</WidthDouble>
  </ImageSpecification>
 </ImageRepresentation>
</block>
<block type="Module" ID="1972432888">
 <ObjName>TP_ActiveRecord</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Assert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1630132223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Assert(bCondition as boolean, sMessage as Text = "")</SourceLine>
   <SourceLine>#if DebugBuild then</SourceLine>
   <SourceLine>if not bCondition then</SourceLine>
   <SourceLine>raise new TP_ActiveRecord.AssertFailedException(sMessage)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>bCondition as boolean, sMessage as Text = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1685114879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>//Use BeginTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(info)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>439199743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>//Use CommitTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(info)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Connect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1124145151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Connect(db as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>Connect(info, db)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Connect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>403431423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Connect(ty as xojo.Introspection.TypeInfo, db as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>if ty=nil or db=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = CreateDatabaseAdapter(db)</SourceLine>
   <SourceLine>GetContext.ConnectionAdapter_Set(ty, adp)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, db as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CreateDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>58464255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CreateDatabaseAdapter(db as iOSSQLiteDatabase) As TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>if db isa iOSSQLiteDatabase then</SourceLine>
   <SourceLine>return new SQLiteDatabaseAdapter(db)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ex as new UnsupportedOperationException</SourceLine>
   <SourceLine>ex.Reason = "Unsupported database type: " + Introspection.GetType(db).FullName</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as iOSSQLiteDatabase</ItemParams>
  <ItemResult>TP_ActiveRecord.DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>Disconnect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>93007871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Disconnect()</SourceLine>
   <SourceLine>'Disconnect the base active record class from the database</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>Disconnect( info )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Disconnect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>624758783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Disconnect(ty as xojo.Introspection.TypeInfo)</SourceLine>
   <SourceLine>'Disconnect a specific active record class from the database</SourceLine>
   <SourceLine>if ty=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>ctx.ConnectionAdapter_Remove(ty)</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2011.04</SourceLine>
   <SourceLine>#if TargetWeb</SourceLine>
   <SourceLine>if ctx.ConnectionAdapter_Count=0 then</SourceLine>
   <SourceLine>'kill the context</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(csCtx)</SourceLine>
   <SourceLine>m_dictContext.Remove(Session.Identifier)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Field</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>786253823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Field(sFieldName as Text) As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>return new FieldOpt(sFieldName)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as Text</ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>FindFieldProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1535422463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FindFieldProperty(tyClass as xojo.Introspection.TypeInfo, sField as Text) As xojo.Introspection.PropertyInfo</SourceLine>
   <SourceLine>dim iPrefixType as integer = 0 //Override to do prefixes and suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static arsAllowPrefix() as Text //= Array(^2)  //Override for your own prefixes</SourceLine>
   <SourceLine>static arsAllowSuffix() as Text //= Array(^3) //Override for your own suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Match the field to a property of the class.</SourceLine>
   <SourceLine>select case iPrefixType</SourceLine>
   <SourceLine>case 0 //No prefix/Suffix</SourceLine>
   <SourceLine>for each pi as xojo.Introspection.PropertyInfo in tyClass.Properties</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pi.Name = sField then</SourceLine>
   <SourceLine>return pi 'accept exact match</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 1 //Prefix</SourceLine>
   <SourceLine>for each pi as xojo.Introspection.PropertyInfo in tyClass.Properties</SourceLine>
   <SourceLine>dim sXojoProperty as Text = pi.Name.Lowercase</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sXojoProperty.EndsWith(sField.Lowercase) then</SourceLine>
   <SourceLine>'check for a prefix match</SourceLine>
   <SourceLine>for each sPrefix as Text in arsAllowPrefix</SourceLine>
   <SourceLine>if sXojoProperty.BeginsWith(sPrefix.Lowercase) then</SourceLine>
   <SourceLine>return pi</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 2 //Suffix</SourceLine>
   <SourceLine>for each pi as xojo.Introspection.PropertyInfo in tyClass.Properties</SourceLine>
   <SourceLine>dim sXojoProperty as Text = pi.Name.Lowercase</SourceLine>
   <SourceLine>if sXojoProperty.BeginsWith(sField.Lowercase) then</SourceLine>
   <SourceLine>for each sSuffix as Text in arsAllowSuffix</SourceLine>
   <SourceLine>if sXojoProperty.EndsWith(sSuffix.Lowercase) then</SourceLine>
   <SourceLine>return pi</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as xojo.Introspection.TypeInfo, sField as Text</ItemParams>
  <ItemResult>xojo.Introspection.PropertyInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>FindMatchingTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1534787583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FindMatchingTable(adp as TP_ActiveRecord.DatabaseAdapter, sClassName as Text) As Text</SourceLine>
   <SourceLine>dim sTable as Text = sClassName</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sTable = "tbl" + sClassName</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'if the class is clsSomething, look for Something and tblSomething</SourceLine>
   <SourceLine>'but not if the letter after cls is lowercase</SourceLine>
   <SourceLine>dim sFourth as Text = sClassName.Mid(4, 1)</SourceLine>
   <SourceLine>if sClassName.left(3) = "cls" And _</SourceLine>
   <SourceLine>sFourth.Compare("A", 0) &gt;= 0 AND _</SourceLine>
   <SourceLine>sFourth.Compare("Z", 0) &gt;= 0 then</SourceLine>
   <SourceLine>sTable = sClassName.mid(4)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' if Left( sClassName, 3 ) = "cls" and _</SourceLine>
   <SourceLine>' StrComp( sFourth, "A", 0 ) &gt;= 0 and _</SourceLine>
   <SourceLine>' StrComp( sFourth, "Z", 0 ) &lt;=0 then</SourceLine>
   <SourceLine>' sTable = sClassName.Mid(4)</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sTable = "tbl" + sTable</SourceLine>
   <SourceLine>if adp.HasTable( sTable ) then</SourceLine>
   <SourceLine>return sTable</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>adp as TP_ActiveRecord.DatabaseAdapter, sClassName as Text</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>GetContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>192845823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetContext() As TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine>if m_ctxDefault is nil then</SourceLine>
   <SourceLine>m_ctxDefault = new TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_ctxDefault</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.P.Context</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2072102911</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>//GetDatabaseAdapter</SourceLine>
   <SourceLine>//Useful if you want to get do transactions outside of the Base Class.</SourceLine>
   <SourceLine>//Example:  You know you have some lengthy operations to do.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(info)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return adp</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableDefs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1510113279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableDefs() As TP_ActiveRecord.TableDef()</SourceLine>
   <SourceLine>dim aroTableDef() as TP_ActiveRecord.TableDef</SourceLine>
   <SourceLine>for each oTableInfo as TP_ActiveRecord.P.TableInfo in GetContext.TableInfo_List</SourceLine>
   <SourceLine>dim aro() as TP_ActiveRecord.FieldDef</SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim o as new TP_ActiveRecord.FieldDef( _</SourceLine>
   <SourceLine>oFieldInfo.sFieldName, oFieldInfo.enFieldType, _</SourceLine>
   <SourceLine>oFieldInfo.bPrimaryKey, oFieldInfo.bForeignKey)</SourceLine>
   <SourceLine>aro.Append(o)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>dim oTableDef as new TP_ActiveRecord.TableDef(oTableInfo.sTableName, oTableInfo.sPrimaryKey, aro)</SourceLine>
   <SourceLine>aroTableDef.Append(oTableDef)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return aroTableDef</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.TableDef()</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2124771327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableInfo(ty as xojo.Introspection.TypeInfo) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetContext.TableInfo_Get(ty)</SourceLine>
   <SourceLine>if oTableInfo&lt;&gt;nil then</SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'try to map the class to a table by name</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp&lt;&gt;nil then</SourceLine>
   <SourceLine>dim sTable as Text</SourceLine>
   <SourceLine>sTable = FindMatchingTable( adp, ty.Name )</SourceLine>
   <SourceLine>if sTable&lt;&gt;"" then</SourceLine>
   <SourceLine>Table adp.Db, sTable, ty</SourceLine>
   <SourceLine>return GetContext.TableInfo_Get(ty)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'table not registered and not found by name</SourceLine>
   <SourceLine>dim ex as RuntimeException</SourceLine>
   <SourceLine>ex.Reason = "Class does not have a table registered for it: " + ty.FullName</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTypeConstructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>616876031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTypeConstructor(oTableInfo as TP_ActiveRecord.P.TableInfo) As Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each o as xojo.Introspection.ConstructorInfo in oTableInfo.tyClass.Constructors</SourceLine>
   <SourceLine>dim aroParam() as xojo.Introspection.ParameterInfo = o.Parameters</SourceLine>
   <SourceLine>if aroParam.Ubound = 0 then</SourceLine>
   <SourceLine>if aroParam(0).ParameterType.FullName = "RecordSet" then</SourceLine>
   <SourceLine>oConstructor = o</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oConstructor</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult>Introspection.ConstructorInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapFieldInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>769556479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapFieldInfo(tyClass as xojo.Introspection.TypeInfo, rs as iOSSQLiteRecordSet, aroFieldOpt() as FieldOpt) As TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>' static arsAllowPrefix() as Text = Array("m_", "m_id","i","s","dtm","dt","b","d","v","pict")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sField as Text = rs.Field("Name").TextValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'extract the field option if one was passed in for this field</SourceLine>
   <SourceLine>dim oFieldOpt as FieldOpt</SourceLine>
   <SourceLine>for each o as FieldOpt in aroFieldOpt</SourceLine>
   <SourceLine>if o.FieldName=sField then</SourceLine>
   <SourceLine>oFieldOpt = o</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oFieldOpt&lt;&gt;nil and oFieldOpt.IsIgnored then</SourceLine>
   <SourceLine>return nil 'ignore this field</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Find the database field type</SourceLine>
   <SourceLine>dim enFieldType as DbType</SourceLine>
   <SourceLine>dim sFieldType as Text = rs.Field("type").TextValue</SourceLine>
   <SourceLine>select case sFieldType</SourceLine>
   <SourceLine>case "Integer"</SourceLine>
   <SourceLine>enFieldType = DbType.DInteger</SourceLine>
   <SourceLine>case "Text"</SourceLine>
   <SourceLine>enFieldType = DbType.DText</SourceLine>
   <SourceLine>case "Double"</SourceLine>
   <SourceLine>enFieldType = DbType.DDouble</SourceLine>
   <SourceLine>case "Date"</SourceLine>
   <SourceLine>enFieldType = DbType.DDate</SourceLine>
   <SourceLine>case "DateTime"</SourceLine>
   <SourceLine>enFieldType = DbType.DDate</SourceLine>
   <SourceLine>Case "TimeStamp"</SourceLine>
   <SourceLine>enFieldType = DbType.DDate</SourceLine>
   <SourceLine>case "blob"</SourceLine>
   <SourceLine>enFieldType = DbType.DBlob</SourceLine>
   <SourceLine>case "Boolean"</SourceLine>
   <SourceLine>enFieldType = DbType.DBoolean</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>// Field types from the Chinook Database</SourceLine>
   <SourceLine>sFieldType = sFieldType.Uppercase</SourceLine>
   <SourceLine>select case true</SourceLine>
   <SourceLine>case sFieldType.BeginsWith("CHAR"), _</SourceLine>
   <SourceLine>sFieldType.BeginsWith("VARCHAR"), _</SourceLine>
   <SourceLine>sFieldType.BeginsWith("NVARCHAR")</SourceLine>
   <SourceLine>enFieldType = DbType.DText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case sFieldType.BeginsWith("NUMERIC")</SourceLine>
   <SourceLine>enFieldType = DbType.DDouble</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Not handled</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Match the field to a property of the class.</SourceLine>
   <SourceLine>' Properties are named with a prefix:  &lt;prefix&gt;FieldName = FieldName</SourceLine>
   <SourceLine>dim piFound as xojo.Introspection.PropertyInfo</SourceLine>
   <SourceLine>piFound = FindFieldProperty(tyClass, sField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if piFound=nil then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "No property for field: " + sField )</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oFieldInfo as new TP_ActiveRecord.P.FieldInfo(sField, piFound)</SourceLine>
   <SourceLine>oFieldInfo.enFieldType = enFieldType</SourceLine>
   <SourceLine>if rs.Field("pk").BooleanValue then</SourceLine>
   <SourceLine>oFieldInfo.bPrimaryKey = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oFieldInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as xojo.Introspection.TypeInfo, rs as iOSSQLiteRecordSet, aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult>TP_ActiveRecord.P.FieldInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1052946431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapTableInfo(db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, aroFieldOpt() as FieldOpt, IsView as boolean = false) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'Map fields in the database to properties on the class and</SourceLine>
   <SourceLine>'return a list of &lt;field&gt; : &lt;propertyInfo&gt; pairs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = new TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo.tyClass = tyClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet = Db.FieldSchema(sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(rs.EOF=false, "Table not found: " + sTable)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>dim oFieldInfo as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>oFieldInfo = MapFieldInfo(tyClass, rs, aroFieldOpt)</SourceLine>
   <SourceLine>if oFieldInfo&lt;&gt;nil then</SourceLine>
   <SourceLine>if oFieldInfo.bPrimaryKey then</SourceLine>
   <SourceLine>oTableInfo.sPrimaryKey = oFieldInfo.sFieldName</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.aroField.Append(oFieldInfo)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsView = false then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(oTableInfo.sPrimaryKey&lt;&gt;"", "The table needs to have a primary key")</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo.sTableName = sTable</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, aroFieldOpt() as FieldOpt, IsView as boolean = false</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>MapTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>25358335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MapTableInfo(tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>'Map fields in the database to properties on the class and</SourceLine>
   <SourceLine>'return a list of &lt;field&gt; : &lt;propertyInfo&gt; pairs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>' dim pi as Introspection.Propertyinfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = new TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo.sTableName = oTableDef.sTableName</SourceLine>
   <SourceLine>oTableInfo.sPrimaryKey = oTableDef.sPrimaryKey</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey = FindFieldProperty(tyClass, oTableInfo.sPrimaryKey)</SourceLine>
   <SourceLine>if oTableInfo.piPrimaryKey=nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.tyClass = tyClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldDef as TP_ActiveRecord.FieldDef in oTableDef.aroField</SourceLine>
   <SourceLine>dim oFieldInfo as new TP_ActiveRecord.P.FieldInfo( _</SourceLine>
   <SourceLine>oFieldDef.sFieldName, _</SourceLine>
   <SourceLine>FindFieldProperty(tyClass, oFieldDef.sFieldName))</SourceLine>
   <SourceLine>oFieldInfo.bPrimaryKey = oFieldDef.IsPrimaryKey</SourceLine>
   <SourceLine>oFieldInfo.bForeignKey = oFieldDef.IsForeignKey</SourceLine>
   <SourceLine>oFieldInfo.enFieldType = oFieldDef.enFieldType</SourceLine>
   <SourceLine>if oFieldInfo.piFieldProperty=nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>oTableInfo.aroField.Append(oFieldInfo)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTableInfo</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>Query</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1539592191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Query(ty as xojo.Introspection.TypeInfo, sCriteria as Text = "", sOrder as Text = "") As Auto()</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = xojo.Introspection.GetType(new base)</SourceLine>
   <SourceLine>if not ty.IsSubclassOf( info ) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Reason = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aro() as Auto</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo( ty )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>oConstructor = GetTypeConstructor(oTableInfo)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>rs = adp.SelectList(oTableInfo.sTableName, sCriteria, sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>dim arv() as Auto</SourceLine>
   <SourceLine>arv.Append(rs)</SourceLine>
   <SourceLine>dim oBase as Base = oConstructor.Invoke(arv)</SourceLine>
   <SourceLine>aro.Append( oBase )</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, sCriteria as Text = "", sOrder as Text = ""</ItemParams>
  <ItemResult>Auto()</ItemResult>
 </Method>
 <Method>
  <ItemName>QueryRecordset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>793047039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function QueryRecordset(ty as xojo.Introspection.TypeInfo, sql as Text) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = xojo.Introspection.GetType(new base)</SourceLine>
   <SourceLine>if not ty.IsSubclassOf( info ) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Reason = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return adp.SQLSelect(sql)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, sql as Text</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1053272063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>//Use RollbackTransaction when outside of ActiveRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ctx as TP_ActiveRecord.P.Context = GetContext</SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = ctx.ConnectionAdapter_Get(info)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLizeText</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1986441215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLizeText(Extends sText as Text) As Text</SourceLine>
   <SourceLine>dim sReturn as Text</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Change all single apostrophes to double apostrophes.</SourceLine>
   <SourceLine>sReturn = sText.ReplaceAll("'", "''")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Return the new string with apostrophe's around it already</SourceLine>
   <SourceLine>Return "'" + sReturn + "'"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends sText as Text</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>stringFromDbType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1690474495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function stringFromDbType(enDbType as TP_ActiveRecord.DbType) As Text</SourceLine>
   <SourceLine>select case enDbType</SourceLine>
   <SourceLine>case DbType.DInteger</SourceLine>
   <SourceLine>return "DInteger"</SourceLine>
   <SourceLine>case DbType.DSmallInt</SourceLine>
   <SourceLine>return "DSmallInt"</SourceLine>
   <SourceLine>case DbType.DDouble</SourceLine>
   <SourceLine>return "DDouble"</SourceLine>
   <SourceLine>case DbType.DDate</SourceLine>
   <SourceLine>return "DDate"</SourceLine>
   <SourceLine>case DbType.DTime</SourceLine>
   <SourceLine>return "DTime"</SourceLine>
   <SourceLine>case DbType.DTimestamp</SourceLine>
   <SourceLine>return "DTimestamp"</SourceLine>
   <SourceLine>case DbType.DBoolean</SourceLine>
   <SourceLine>return "DBoolean"</SourceLine>
   <SourceLine>case DbType.DBlob</SourceLine>
   <SourceLine>return "DBlob"</SourceLine>
   <SourceLine>case DbType.DText</SourceLine>
   <SourceLine>return "DText"</SourceLine>
   <SourceLine>case DbType.DInt64</SourceLine>
   <SourceLine>return "DInt64"</SourceLine>
   <SourceLine>case DbType.DFloat</SourceLine>
   <SourceLine>return "DFloat"</SourceLine>
   <SourceLine>case DBtype.DCurrency</SourceLine>
   <SourceLine>return "DCurrency"</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>enDbType as TP_ActiveRecord.DbType</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>Table</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>323952639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Table(db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo( db, sTable, tyClass, aroFieldOpt )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Table</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>734461951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Table(tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo(tyClass, oTableDef)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>VerifyClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1572210687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub VerifyClass(tyClass as Introspection.TypeInfo)</SourceLine>
   <SourceLine>// Verify that all the fields marked as DatabaseField</SourceLine>
   <SourceLine>// are on the table, assert an exception if not.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Collect all of the known table fields into an array</SourceLine>
   <SourceLine>dim arsDBFields() as Text</SourceLine>
   <SourceLine>dim oInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo(tyClass)</SourceLine>
   <SourceLine>for i as Integer = 0 to oInfo.aroField.Ubound</SourceLine>
   <SourceLine>arsDBFields.Append(oInfo.aroField(i).sFieldName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next i</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Iterate the properties</SourceLine>
   <SourceLine>dim aroProperties() as Introspection.PropertyInfo = tyClass.Properties</SourceLine>
   <SourceLine>for each oProp as Introspection.PropertyInfo in aroProperties</SourceLine>
   <SourceLine>// Get the property attribtues</SourceLine>
   <SourceLine>dim aroAttributes() as Introspection.AttributeInfo = oProp.GetAttributes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Look for the DatabaseField flag</SourceLine>
   <SourceLine>dim bFlaggedAsDBField as Boolean</SourceLine>
   <SourceLine>for each oAttrib as Introspection.AttributeInfo in aroAttributes</SourceLine>
   <SourceLine>if oAttrib.Name = "DatabaseField" then</SourceLine>
   <SourceLine>bFlaggedAsDBField = (oAttrib.Value = "True")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next oAttrib</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If flag was not found, do not process this property</SourceLine>
   <SourceLine>if bFlaggedAsDBField = false then continue for oProp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Iterate the tables to see if they're within this property name</SourceLine>
   <SourceLine>// i.e. the lazy way to check ignoring prefix or suffix settings</SourceLine>
   <SourceLine>dim bPropIsField as Boolean</SourceLine>
   <SourceLine>for each sField as Text in arsDBFields</SourceLine>
   <SourceLine>if VerifyClassProperty(oProp.Name, sField) = true then</SourceLine>
   <SourceLine>// Field was found</SourceLine>
   <SourceLine>bPropIsField = true</SourceLine>
   <SourceLine>exit for sField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>TP_ActiveRecord.Assert(bPropIsField, "Database column for property " + _</SourceLine>
   <SourceLine>tyClass.FullName + "." + oProp.Name + " could not be Found.")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next oProp</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>VerifyClassProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1431263231</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function VerifyClassProperty(sProp as Text, sField as Text) As Boolean</SourceLine>
   <SourceLine>dim iPrefixType as integer = 0 //Override to do prefixes and suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static arsAllowPrefix() as Text //= Array(^2)  //Override for your own prefixes</SourceLine>
   <SourceLine>static arsAllowSuffix() as Text //= Array(^3) //Override for your own suffixes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Match the field to a property of the class.</SourceLine>
   <SourceLine>select case iPrefixType</SourceLine>
   <SourceLine>case 0</SourceLine>
   <SourceLine>// No prefix / suffix</SourceLine>
   <SourceLine>return (sProp = sField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 1</SourceLine>
   <SourceLine>// Prefix</SourceLine>
   <SourceLine>for each sPrefix as Text in arsAllowPrefix</SourceLine>
   <SourceLine>if sProp = sPrefix + sField then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sPrefix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case 2</SourceLine>
   <SourceLine>// Suffix</SourceLine>
   <SourceLine>for each sSuffix as Text in arsAllowSuffix</SourceLine>
   <SourceLine>if sProp = sField + sSuffix then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next sSuffix</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sProp as Text, sField as Text</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>View</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2002292735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub View(db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo( db, sTable, tyClass, aroFieldOpt, true )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>db as iOSSQLiteDatabase, sTable as Text, tyClass as xojo.Introspection.TypeInfo, ParamArray aroFieldOpt() as FieldOpt</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>View</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1197133823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub View(tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Record the mapping between the type and the table.</SourceLine>
   <SourceLine>oTableInfo = TP_ActiveRecord.MapTableInfo(tyClass, oTableDef)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>GetContext.TableInfo_Set(tyClass, oTableInfo)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tyClass as xojo.Introspection.TypeInfo, oTableDef as TP_ActiveRecord.TableDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>To-Do (from BKS)</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>207052799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>To-Do (from BKS)</NoteLine>
   <NoteLine>Convert BKS_ActiveRecord.DatabaseAdapter.InsertRecord to use Kem's Solution for PreparedStatements</NoteLine>
   <NoteLine>Convert BKS_ActiveRecord.DatabaseAdapter.UpdateRecord to use Kem's Solution for PreparedStatements</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Add Date Picker so we can work with dates</NoteLine>
   <NoteLine>     - If nil date we need to check for that.  Converting from Auto</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Add validation for adding/changing People</NoteLine>
   <NoteLine>Add validation for adding/changing Contacts for a person</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Need more iOS way of adding/editing contacts</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Version History</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>136822783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Version History</NoteLine>
   <NoteLine>2019.01</NoteLine>
   <NoteLine>Added:</NoteLine>
   <NoteLine>- VerifyClass function checks class properties exist as columns</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Changed:</NoteLine>
   <NoteLine>- App.Open event accepts parameters and returns boolean</NoteLine>
   <NoteLine>- MapFieldInfo updated for new Chinook datatypes</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>2017-12-19</NoteLine>
   <NoteLine>- Fixed bug with reading records with date values</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>2017-12-14</NoteLine>
   <NoteLine>- Fixed bug with GUID</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>csCtx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1950998527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>csCtx As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>csCtx As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>if m_csCtx=nil then</SourceLine>
   <SourceLine>m_csCtx = new xojo.Threading.CriticalSection</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m_csCtx</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>m_csCtx</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1557028863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_csCtx As xojo.Threading.CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_csCtx As xojo.Threading.CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_ctxDefault</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1274544127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_ctxDefault As TP_ActiveRecord.P.Context</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_ctxDefault As TP_ActiveRecord.P.Context</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictContext</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1737824255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictContext As Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictContext As Xojo.Core.Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kDoubleNullSentinal</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1160232959</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1.7E+308</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1412917247</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>2019.01</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>DbType</ItemName>
  <ItemFlags>1</ItemFlags>
  <ItemType>Integer</ItemType>
  <ItemName>DbType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1672466431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DInteger</SourceLine>
   <SourceLine>DSmallInt</SourceLine>
   <SourceLine>DDouble</SourceLine>
   <SourceLine>DDate</SourceLine>
   <SourceLine>DTime</SourceLine>
   <SourceLine>DTimestamp</SourceLine>
   <SourceLine>DBoolean</SourceLine>
   <SourceLine>DBlob</SourceLine>
   <SourceLine>DText</SourceLine>
   <SourceLine>DInt64</SourceLine>
   <SourceLine>DFloat</SourceLine>
   <SourceLine>DCurrency</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
<block type="BuildStepsList" ID="62859263">
 <ObjName>Linux</ObjName>
 <ObjContainerID>79085567</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="108810239">
 <ObjName>Build</ObjName>
 <ObjContainerID>62859263</ObjContainerID>
</block>
<block type="BuildStepsList" ID="567635967">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>79085567</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2059747327">
 <ObjName>Build</ObjName>
 <ObjContainerID>567635967</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1559877631">
 <ObjName>Windows</ObjName>
 <ObjContainerID>79085567</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1485930495">
 <ObjName>Build</ObjName>
 <ObjContainerID>1559877631</ObjContainerID>
</block>
<block type="BuildStepsList" ID="472868863">
 <ObjName>iOS</ObjName>
 <ObjContainerID>79085567</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1270755327">
 <ObjName>Build</ObjName>
 <ObjContainerID>472868863</ObjContainerID>
</block>
<block type="SignProjectScriptStep" ID="240832511">
 <ObjName>Sign</ObjName>
 <ObjContainerID>472868863</ObjContainerID>
</block>
<block type="BuildAutomation" ID="79085567">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="1868161023">
 <ObjName>AssertFailedException</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>RuntimeException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>630228991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sMessage as Text)</SourceLine>
   <SourceLine>if sMessage &lt;&gt; "" then</SourceLine>
   <SourceLine>Me.Reason = sMessage</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sMessage as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>ErrorNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Message</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Reason</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="2121990330">
 <ObjName>P</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>2</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1382836112">
 <ObjName>Context</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ConnectionAdapter_Count</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1015357439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConnectionAdapter_Count() As Integer</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m_dictTypeDb.Count</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Get</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>352219135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ConnectionAdapter_Get(ty as xojo.Introspection.TypeInfo) As TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Start with this class and search the hash table in TP_ActiveRecord for</SourceLine>
   <SourceLine>'a database to use.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'start with the given type and walk up the inheritance chain</SourceLine>
   <SourceLine>'looking for a databsae connection</SourceLine>
   <SourceLine>while ty&lt;&gt;nil</SourceLine>
   <SourceLine>adp = m_dictTypeDb.Lookup(ty.FullName, nil )</SourceLine>
   <SourceLine>if adp&lt;&gt;nil then</SourceLine>
   <SourceLine>exit while</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ty = ty.BaseType</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return adp</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo</ItemParams>
  <ItemResult>TP_ActiveRecord.DatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Remove</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2105632767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ConnectionAdapter_Remove(ty as xojo.Introspection.TypeInfo)</SourceLine>
   <SourceLine>'Disconnect a specific active record class from the database</SourceLine>
   <SourceLine>if ty=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>if not ty.IsSubclassOf( info ) then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Invalid type. Expected a subclass of TP_ActiveRecord.Base")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>if m_dictTypeDb&lt;&gt;nil then</SourceLine>
   <SourceLine>m_dictTypeDb.Remove(ty.FullName)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ConnectionAdapter_Set</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1264949247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ConnectionAdapter_Set(ty as xojo.Introspection.TypeInfo, adp as TP_ActiveRecord.DatabaseAdapter)</SourceLine>
   <SourceLine>'Connect a specific active record class and all of its subclasses to a database</SourceLine>
   <SourceLine>if ty=nil or adp=nil then</SourceLine>
   <SourceLine>raise new NilObjectException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = xojo.Introspection.GetType(new TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>if not ty.IsSubclassOf( info ) then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Invalid type. Expected a subclass of TP_ActiveRecord.Base")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'add the database using the full type name of the type as a key</SourceLine>
   <SourceLine>'Base will use this to find the appropriate adapter.</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine>if m_dictTypeDb=nil then</SourceLine>
   <SourceLine>m_dictTypeDb = new Dictionary</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_dictTypeDb.Value(ty.FullName) = adp</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, adp as TP_ActiveRecord.DatabaseAdapter</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1089693695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>m_cs = new xojo.Threading.CriticalSection</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_Get</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>11681791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TableInfo_Get(ty as xojo.Introspection.TypeInfo) As TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_dictTypeTableInfo.Lookup(ty.FullName, nil)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo</ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>524007423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TableInfo_List() As TP_ActiveRecord.P.TableInfo()</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'check the info cache and return the mapping if it exists</SourceLine>
   <SourceLine>dim aro() as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each oEntry As Xojo.Core.DictionaryEntry In m_dictTypeTableInfo</SourceLine>
   <SourceLine>dim o as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>o = m_dictTypeTableInfo.Value(oEntry.Key)</SourceLine>
   <SourceLine>aro.Append(o)</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.P.TableInfo()</ItemResult>
 </Method>
 <Method>
  <ItemName>TableInfo_Set</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>940115967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub TableInfo_Set(ty as xojo.Introspection.TypeInfo, oTableInfo as TP_ActiveRecord.P.TableInfo)</SourceLine>
   <SourceLine>dim lck as new TP_ActiveRecord.P.ScopedLock(m_cs)</SourceLine>
   <SourceLine>#pragma unused lck</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictTypeTableInfo=nil then</SourceLine>
   <SourceLine>m_dictTypeTableInfo = new Dictionary</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_dictTypeTableInfo.Value(ty.FullName) = oTableInfo</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_cs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>410630143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_cs As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_cs As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictTypeDb</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2019676159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictTypeDb As Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictTypeDb As Xojo.Core.Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_dictTypeTableInfo</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>704270335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictTypeTableInfo As Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictTypeTableInfo As Xojo.Core.Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1258523356">
 <ObjName>ScopedLock</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>548214783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(cs as CriticalSection)</SourceLine>
   <SourceLine>if cs is nil then</SourceLine>
   <SourceLine>raise new ActiveRecordException("Lock is set to Nil")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_cs = cs</SourceLine>
   <SourceLine>m_cs.Enter</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>cs as CriticalSection</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>67977215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>m_cs.Leave</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>Overview</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1463183359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Overview</NoteLine>
   <NoteLine>The Constructor for this class accepts a CriticalSection and immediately calls the Enter method.</NoteLine>
   <NoteLine>The Destructor calls Leave.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>You can use this class to hold a lock for the duration of the object's life. For example, if you</NoteLine>
   <NoteLine>create it at the beginning of a method than the lock will be held until the method is complete.</NoteLine>
   <NoteLine>The advantage of this is that the object will be destroyed regardless of how the method ends,</NoteLine>
   <NoteLine>via a return statement or an exception or whatever.</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>m_cs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1491300351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_cs As CriticalSection</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_cs As CriticalSection</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1435621795">
 <ObjName>FieldInfo</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>204609535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sField as Text, pi as Introspection.PropertyInfo)</SourceLine>
   <SourceLine>self.sFieldName = sField</SourceLine>
   <SourceLine>self.piFieldProperty = pi</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sField as Text, pi as Introspection.PropertyInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2059823103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsKey() As Boolean</SourceLine>
   <SourceLine>return (bForeignKey or bPrimaryKey)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>bForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>608985087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bForeignKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>bPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1243400191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bPrimaryKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bPrimaryKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>enFieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>568326143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>enFieldType As TP_ActiveRecord.DbType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>enFieldType As TP_ActiveRecord.DbType</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>piFieldProperty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1912831999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>piFieldProperty As Introspection.PropertyInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>piFieldProperty As Introspection.PropertyInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>493998079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sFieldName As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sFieldName As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>bForeignKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>bPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>enFieldType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>TP_ActiveRecord.DbType</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - DInteger</ItemDef>
    <ItemDef>1 - DSmallInt</ItemDef>
    <ItemDef>2 - DDouble</ItemDef>
    <ItemDef>3 - DDate</ItemDef>
    <ItemDef>4 - DTime</ItemDef>
    <ItemDef>5 - DTimestamp</ItemDef>
    <ItemDef>6 - DBoolean</ItemDef>
    <ItemDef>7 - DBlob</ItemDef>
    <ItemDef>8 - DText</ItemDef>
    <ItemDef>9 - DInt64</ItemDef>
    <ItemDef>10 - DFloat</ItemDef>
    <ItemDef>11 - DCurrency</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sFieldName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1516751326">
 <ObjName>TableInfo</ObjName>
 <ObjContainerID>2121990330</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Property>
  <ItemName>aroField()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>121991167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>aroField() As TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>aroField() As TP_ActiveRecord.P.FieldInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>piPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1854681087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>piPrimaryKey As Introspection.PropertyInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>piPrimaryKey As Introspection.PropertyInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>264110079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sPrimaryKey As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sPrimaryKey As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1186922495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sTableName As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sTableName As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>tyClass</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1496231935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>tyClass As xojo.Introspection.TypeInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>tyClass As xojo.Introspection.TypeInfo</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sTableName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1290477060">
 <ObjName>Base</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Clone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1887455231</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Clone() As Auto</SourceLine>
   <SourceLine>dim ty as xojo.Introspection.TypeInfo = Introspection.GetType( self )</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo( ty )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oSuperConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oCopyConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine>dim oDefaultConstructor as Introspection.ConstructorInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Look for three types of constructors (lowest priority first):</SourceLine>
   <SourceLine>' (1) Default constructors (i.e. no parameters)</SourceLine>
   <SourceLine>' (2) Constructors that take a parameter of which self's class is a subtype</SourceLine>
   <SourceLine>' (3) Constructors that take a parameter which matches this class type</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'For example if there's a class call User derived like this:</SourceLine>
   <SourceLine>' TP_ActiveRecord.Base -&gt; clsActiveRecord -&gt; User</SourceLine>
   <SourceLine>'Then the program will look for constructors like the following:</SourceLine>
   <SourceLine>' (1) Constructor()</SourceLine>
   <SourceLine>' (2) Constructor(TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>' (3) Constructor(clsActiveRecord)</SourceLine>
   <SourceLine>' (4) Constructor(User)</SourceLine>
   <SourceLine>'If it finds more than one it will use the one that's farthest down the list.</SourceLine>
   <SourceLine>'The point of this is to give users a way of customizing how their objects</SourceLine>
   <SourceLine>'get cloned, all they need to do is add the appropriate constructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each o as xojo.Introspection.ConstructorInfo in ty.Constructors</SourceLine>
   <SourceLine>dim aroParam() as xojo.Introspection.ParameterInfo</SourceLine>
   <SourceLine>aroParam = o.Parameters</SourceLine>
   <SourceLine>if aroParam.Ubound &lt; 0 then</SourceLine>
   <SourceLine>'default constructor</SourceLine>
   <SourceLine>oDefaultConstructor = o</SourceLine>
   <SourceLine>elseif aroParam.Ubound=0 and _</SourceLine>
   <SourceLine>ty.IsSubclassOf( aroParam(0).ParameterType ) then</SourceLine>
   <SourceLine>'copy constructor that takes a super class</SourceLine>
   <SourceLine>if oSuperConstructor=nil then</SourceLine>
   <SourceLine>oSuperConstructor = o</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim aroCurrentParam() as xojo.Introspection.ParameterInfo</SourceLine>
   <SourceLine>aroCurrentParam = oSuperConstructor.Parameters</SourceLine>
   <SourceLine>if aroParam(0).ParameterType.IsSubclassOf( aroCurrentParam(0).ParameterType ) then</SourceLine>
   <SourceLine>'if the parameter type of this constructor is derived from the parameter type</SourceLine>
   <SourceLine>'of the last one, then this one should have priority</SourceLine>
   <SourceLine>oSuperConstructor = o</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>elseif aroParam.Ubound=0 and _</SourceLine>
   <SourceLine>aroParam(0).ParameterType is ty then</SourceLine>
   <SourceLine>'copy constructor that takes this class</SourceLine>
   <SourceLine>oCopyConstructor = o</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Create an instance using the constructor we found</SourceLine>
   <SourceLine>dim oClone as Base</SourceLine>
   <SourceLine>dim vSelf as Auto = self</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oCopyConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oCopyConstructor.Invoke( Array(vSelf) )</SourceLine>
   <SourceLine>elseif oSuperConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oSuperConstructor.Invoke( Array(vSelf) )</SourceLine>
   <SourceLine>elseif oDefaultConstructor&lt;&gt;nil then</SourceLine>
   <SourceLine>oClone = oDefaultConstructor.Invoke</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>'we should always be able to find a default constructor</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, _</SourceLine>
   <SourceLine>"Class does not have a default constructor" )</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Copy the properties into the new instance</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine>if not (pi is oTableInfo.piPrimaryKey) then</SourceLine>
   <SourceLine>'copy every saved property except the primary key</SourceLine>
   <SourceLine>pi.Value(oClone) = pi.Value(self)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oClone</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Auto</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>901437439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1213108223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(rs as iOSSQLiteRecordSet)</SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1440145407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As iOSSQLiteDatabase</SourceLine>
   <SourceLine>return GetDatabaseAdapter.Db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>iOSSQLiteDatabase</ItemResult>
 </Method>
 <Method>
  <ItemName>Delete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1996376063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Delete()</SourceLine>
   <SourceLine>if self.IsNew then</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent BeforeDelete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.DeleteRecord( self )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterDelete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>catch ex as RuntimeException</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>960647167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As SQLiteDatabaseAdapter</SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = xojo.Introspection.GetType(self)</SourceLine>
   <SourceLine>return SQLiteDatabaseAdapter(GetContext.ConnectionAdapter_Get(info))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>SQLiteDatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1004761087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableName() As Text</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine>Return oTableInfo.sTableName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>GUID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1098768383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GUID() As Text</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Xojo.Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim a as auto = oTableInfo.piPrimaryKey.Value(self)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Because we need to deal with null values, we need to check for a null value.</SourceLine>
   <SourceLine>if a = nil or a.IsText = false then</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return a</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>GUID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>318013439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GUID(assigns id as Text)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey.Value(self) = id</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>assigns id as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1668536319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ID() As Int64</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Xojo.Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim a as auto = oTableInfo.piPrimaryKey.Value(self)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Because we need to deal with null values, we need to check for a null value.</SourceLine>
   <SourceLine>if a = nil or a.IsInteger = false then</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return a</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2077149183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ID(assigns id as Int64)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine>oTableInfo.piPrimaryKey.Value(self) = id</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>assigns id as Int64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsModified</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>103235583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsModified() As boolean</SourceLine>
   <SourceLine>return IsRecordModified</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsNew</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>996401151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsNew() As boolean</SourceLine>
   <SourceLine>dim iID as Integer = ID</SourceLine>
   <SourceLine>dim sGUID as Text = GUID</SourceLine>
   <SourceLine>dim bIsNew as Boolean = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if iID &gt; 0 then</SourceLine>
   <SourceLine>bIsNew = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sGUID  &lt;&gt; "" and sGUID &lt;&gt; "0"  then</SourceLine>
   <SourceLine>bIsNew = false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return bIsNew</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsRecordModified</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>997734399</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsRecordModified() As boolean</SourceLine>
   <SourceLine>dim bModified as boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine>dim vProperty as Auto = pi.Value( self )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim vSavedValue as Auto</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_dictSavedPropertyValue&lt;&gt;nil then</SourceLine>
   <SourceLine>vSavedValue = m_dictSavedPropertyValue.Lookup(pi.Name, nil)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim info As Xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(vProperty)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if info.Name = "Text" then</SourceLine>
   <SourceLine>'do a case sensitive compare for strings</SourceLine>
   <SourceLine>dim sText1 as Text = vProperty</SourceLine>
   <SourceLine>dim sText2 as Text = vSavedValue</SourceLine>
   <SourceLine>dim iResult as integer</SourceLine>
   <SourceLine>iResult = sText1.Compare(sText2, Text.CompareCaseSensitive)</SourceLine>
   <SourceLine>if iResult &lt;&gt; 0 then</SourceLine>
   <SourceLine>bModified = true</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>'use the default comparison operator for everything else</SourceLine>
   <SourceLine>if vProperty &lt;&gt; vSavedValue then</SourceLine>
   <SourceLine>bModified = true</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return bModified</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Load</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>799934463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Load(iRecordID as Int64) As boolean</SourceLine>
   <SourceLine>'Load record with the given ID. Return true if the record is found.</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ada as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = ada.SelectRecord( self, iRecordID )</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord( rs )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>iRecordID as Int64</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Load</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1026058239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Load(sID as Text) As boolean</SourceLine>
   <SourceLine>'Load record with the given ID. Return true if the record is found.</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ada as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = ada.SelectRecord( self, sID )</SourceLine>
   <SourceLine>if rs.EOF then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord( rs )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sID as Text</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Compare</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>426373119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Compare(rhs as TP_ActiveRecord.Base) As integer</SourceLine>
   <SourceLine>if rhs is nil then</SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'the two records are equal if they are actually the same object or</SourceLine>
   <SourceLine>'if they're the same type and have the same ID (except if they're new).</SourceLine>
   <SourceLine>if rhs is self or _</SourceLine>
   <SourceLine>( Introspection.GetType(self)=Introspection.GetType(rhs) and _</SourceLine>
   <SourceLine>rhs.ID=ID and not IsNew ) then</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'this ordering is arbitrary. Equality is really the case we're after.</SourceLine>
   <SourceLine>if ID&lt;rhs.ID then</SourceLine>
   <SourceLine>return -1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rhs as TP_ActiveRecord.Base</ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>858914815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as iOSSQLiteRecordSet)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord( rs, oTableInfo, m_dictSavedPropertyValue )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1872084991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as iOSSQLiteRecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo, byref dictSavedPropertyValue as Xojo.Core.Dictionary)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim dictFieldValue as new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each oFieldInfo as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>Dim oField As iOSSQLiteDatabaseField = rs.Field( oFieldInfo.sFieldName )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim pi as Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField is nil then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, _</SourceLine>
   <SourceLine>"A field needed to populate this record wasn't provided: " + _</SourceLine>
   <SourceLine>oFieldInfo.sFieldName )</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim vProperty as Auto</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if pi.PropertyType.Name = "Double" then</SourceLine>
   <SourceLine>if oField.Value=nil then</SourceLine>
   <SourceLine>vProperty = TP_ActiveRecord.kDoubleNullSentinal</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType.Name = "String" then</SourceLine>
   <SourceLine>dim s as Text = oField.TextValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vProperty = s</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType.IsPrimitive then</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif pi.PropertyType = Xojo.Introspection.GetType( xojo.Core.Date.Now) then // GetTypeInfo(Date) then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>vProperty = oField.DateValue</SourceLine>
   <SourceLine>Catch ex as runtimeexception</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>vProperty= oField.Value</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pi.Value(self) = vProperty</SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = vProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo, byref dictSavedPropertyValue as Xojo.Core.Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Save</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1384128511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Save()</SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter = GetDatabaseAdapter</SourceLine>
   <SourceLine>adp.BeginTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent BeforeSave</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsNew then</SourceLine>
   <SourceLine>RaiseEvent BeforeCreate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.InsertRecord  self, m_dictSavedPropertyValue </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterSave</SourceLine>
   <SourceLine>RaiseEvent AfterCreate</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>RaiseEvent BeforeUpdate</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsRecordModified then</SourceLine>
   <SourceLine>adp.UpdateRecord(self, m_dictSavedPropertyValue)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>RaiseEvent AfterSave</SourceLine>
   <SourceLine>RaiseEvent AfterUpdate</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.CommitTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exception ex as RuntimeException</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>adp.RollbackTransaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Validate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>212043775</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Validate(oError as TP_ActiveRecord.ValidationErrors) As boolean</SourceLine>
   <SourceLine>RaiseEvent Validate( oError )</SourceLine>
   <SourceLine>return ( oError.ErrorCount = 0 )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oError as TP_ActiveRecord.ValidationErrors</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Hook>
  <ItemName>AfterCreate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterDelete</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterSave</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>AfterUpdate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeCreate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeDelete</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeSave</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>BeforeUpdate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>Validate</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>oErrors as TP_ActiveRecord.ValidationErrors</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Property>
  <ItemName>m_dictSavedPropertyValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>112109567</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_dictSavedPropertyValue As Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_dictSavedPropertyValue As Xojo.Core.Dictionary</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1610613173">
 <ObjName>BaseList</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>278077439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(ty as xojo.Introspection.TypeInfo, sCriteria as Text = "", sOrder as Text = "")</SourceLine>
   <SourceLine>m_tyElement = ty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim info as xojo.Introspection.TypeInfo = Xojo.Introspection.GetType( new TP_ActiveRecord.Base )</SourceLine>
   <SourceLine>if not ty.IsSubclassOf( info ) then</SourceLine>
   <SourceLine>dim ex as new RuntimeException</SourceLine>
   <SourceLine>ex.Reason = "Invalid type"</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim adp as TP_ActiveRecord.DatabaseAdapter</SourceLine>
   <SourceLine>adp = GetContext.ConnectionAdapter_Get( ty )</SourceLine>
   <SourceLine>if adp=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>' dim aro() as Auto</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo = GetTableInfo( ty )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as Text = "SELECT " + oTableInfo.sPrimaryKey + _</SourceLine>
   <SourceLine>" FROM " + oTableInfo.sTableName</SourceLine>
   <SourceLine>if sCriteria&lt;&gt;"" then</SourceLine>
   <SourceLine>sql = sql + " WHERE " + sCriteria</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sOrder&lt;&gt;"" then</SourceLine>
   <SourceLine>sql = sql + " ORDER BY " + sOrder</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arid() as Int64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = adp.SQLSelect(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim oField As iOSSQLiteDatabaseField = rs.IdxField(1)</SourceLine>
   <SourceLine>do until rs.EOF</SourceLine>
   <SourceLine>arid.Append(oField.Int64Value)</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>m_arid = arid</SourceLine>
   <SourceLine>redim m_aro(m_arid.Ubound)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ty as xojo.Introspection.TypeInfo, sCriteria as Text = "", sOrder as Text = ""</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ElementType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1720367103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ElementType() As xojo.Introspection.TypeInfo</SourceLine>
   <SourceLine>return m_tyElement</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>xojo.Introspection.TypeInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>Item</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1881272319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Item(index as integer) As TP_ActiveRecord.Base</SourceLine>
   <SourceLine>if m_aro(index)&lt;&gt;nil then</SourceLine>
   <SourceLine>return m_aro(index)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>const kBatchSize = 50</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>LoadRange(index, Min(index+kBatchSize-1, m_arid.Ubound))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return m_aro(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as integer</ItemParams>
  <ItemResult>TP_ActiveRecord.Base</ItemResult>
 </Method>
 <Method>
  <ItemName>LoadRange</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1994700799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub LoadRange(startIndex as integer, endIndex as integer)</SourceLine>
   <SourceLine>dim sPrimaryKey as Text = GetTableInfo(m_tyElement).sPrimaryKey</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aridix() as integer</SourceLine>
   <SourceLine>dim arid() as Int64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as integer = startIndex to endIndex</SourceLine>
   <SourceLine>aridix.Append(i)</SourceLine>
   <SourceLine>arid.Append(m_arid(i))</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arid.SortWith(aridix)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsId() as Text</SourceLine>
   <SourceLine>for i as integer = 0 to arid.Ubound</SourceLine>
   <SourceLine>arsID.Append arid(i).ToText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sCriteria as Text</SourceLine>
   <SourceLine>sCriteria = sPrimaryKey + " IN (" + Text.Join(arsId, ",") + ")"</SourceLine>
   <SourceLine>dim arv() as Auto = TP_ActiveRecord.Query(m_tyElement, sCriteria, sPrimaryKey)</SourceLine>
   <SourceLine>for i as integer = 0 to arv.Ubound</SourceLine>
   <SourceLine>dim oRecord as TP_ActiveRecord.Base = arv(i)</SourceLine>
   <SourceLine>if oRecord.ID = arid(i) then</SourceLine>
   <SourceLine>m_aro(aridix(i)) = oRecord</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>startIndex as integer, endIndex as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Subscript</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>6791167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Subscript(index as Integer) As TP_ActiveRecord.Base</SourceLine>
   <SourceLine>return Item(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as Integer</ItemParams>
  <ItemResult>TP_ActiveRecord.Base</ItemResult>
 </Method>
 <Method>
  <ItemName>Ubound</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1899184127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Ubound() As integer</SourceLine>
   <SourceLine>return m_arid.Ubound</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Property>
  <ItemName>m_arid()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2126372863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_arid() As Int64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_arid() As Int64</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_aro()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>857794559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_aro() As TP_ActiveRecord.Base</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_aro() As TP_ActiveRecord.Base</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_tyElement</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>578856959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_tyElement As xojo.Introspection.TypeInfo</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_tyElement As xojo.Introspection.TypeInfo</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="544244982">
 <ObjName>FieldDef</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1160861695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sFieldName as Text, enFieldType as TP_ActiveRecord.DbType, bPrimaryKey as boolean, bForeignKey as boolean)</SourceLine>
   <SourceLine>self.sFieldName = sFieldName</SourceLine>
   <SourceLine>self.enFieldType = enFieldType</SourceLine>
   <SourceLine>self.IsPrimaryKey = bPrimaryKey</SourceLine>
   <SourceLine>self.IsForeignKey = bForeignKey</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as Text, enFieldType as TP_ActiveRecord.DbType, bPrimaryKey as boolean, bForeignKey as boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>enFieldType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1324531711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>enFieldType As TP_ActiveRecord.DbType</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>enFieldType As TP_ActiveRecord.DbType</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1334138879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsForeignKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IsPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2058317823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IsPrimaryKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IsPrimaryKey As boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>338550783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sFieldName As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sFieldName As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>enFieldType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>TP_ActiveRecord.DbType</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - DInteger</ItemDef>
    <ItemDef>1 - DSmallInt</ItemDef>
    <ItemDef>2 - DDouble</ItemDef>
    <ItemDef>3 - DDate</ItemDef>
    <ItemDef>4 - DTime</ItemDef>
    <ItemDef>5 - DTimestamp</ItemDef>
    <ItemDef>6 - DBoolean</ItemDef>
    <ItemDef>7 - DBlob</ItemDef>
    <ItemDef>8 - DText</ItemDef>
    <ItemDef>9 - DInt64</ItemDef>
    <ItemDef>10 - DFloat</ItemDef>
    <ItemDef>11 - DCurrency</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsForeignKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sFieldName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="992576707">
 <ObjName>TableDef</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2090305535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sTableName as Text, sPrimaryKey as Text, aroField() as TP_ActiveRecord.FieldDef)</SourceLine>
   <SourceLine>self.sTableName = sTableName</SourceLine>
   <SourceLine>self.sPrimaryKey = sPrimaryKey</SourceLine>
   <SourceLine>self.aroField = aroField</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTableName as Text, sPrimaryKey as Text, aroField() as TP_ActiveRecord.FieldDef</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>aroField()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2112985087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>aroField() As TP_ActiveRecord.FieldDef</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>aroField() As TP_ActiveRecord.FieldDef</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sPrimaryKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1115547647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sPrimaryKey As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sPrimaryKey As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1854648319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sTableName As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sTableName As Text</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sPrimaryKey</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sTableName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="583761459">
 <ObjName>FieldOpt</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>671608831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(sFieldName as Text)</SourceLine>
   <SourceLine>m_sFieldName = sFieldName</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sFieldName as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1444091903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FieldName() As Text</SourceLine>
   <SourceLine>return m_sFieldName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>ForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>140670975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ForeignKey() As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>m_bForeignKey = true</SourceLine>
   <SourceLine>return self</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>Ignored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>841099263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Ignored() As TP_ActiveRecord.FieldOpt</SourceLine>
   <SourceLine>m_bIgnored = true</SourceLine>
   <SourceLine>return self</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TP_ActiveRecord.FieldOpt</ItemResult>
 </Method>
 <Method>
  <ItemName>IsForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>988485631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsForeignKey() As Boolean</SourceLine>
   <SourceLine>return m_bForeignKey</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsIgnored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>292493311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsIgnored() As Boolean</SourceLine>
   <SourceLine>return m_bIgnored</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>m_bForeignKey</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>129452031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_bForeignKey As boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_bForeignKey As boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_bIgnored</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>484605951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_bIgnored As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_bIgnored As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_sFieldName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1864892415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_sFieldName As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_sFieldName As Text</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1573558723">
 <ObjName>ValidationErrors</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Append</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>622221311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Append(sMessage as Text)</SourceLine>
   <SourceLine>m_arsError.Append( sMessage )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sMessage as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Clear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>548730879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Clear()</SourceLine>
   <SourceLine>redim m_arsError( -1 )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>105021439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Error(index as Integer) As Text</SourceLine>
   <SourceLine>return m_arsError(index)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as Integer</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>437420031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorCount() As integer</SourceLine>
   <SourceLine>return m_arsError.Ubound + 1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Property>
  <ItemName>m_arsError()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>819259391</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_arsError() As Text</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_arsError() As Text</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1732490146">
 <ObjName>SQLiteDatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.DatabaseAdapter</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1033664511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>'try</SourceLine>
   <SourceLine>'m_db.Commit_Transaction 'commit the auto transaction</SourceLine>
   <SourceLine>'catch</SourceLine>
   <SourceLine>''ignore this one</SourceLine>
   <SourceLine>'end try</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>SQLExecute( "BEGIN" )</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt + 1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>390432767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Commit_Transaction</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>864407551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(oDb as Object)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim db as iOSSQLiteDatabase = iOSSQLiteDatabase(oDb)</SourceLine>
   <SourceLine>if db=nil then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>m_db = db</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oDb as Object</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>538222591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As iOSSQLiteDatabase</SourceLine>
   <SourceLine>return m_db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>iOSSQLiteDatabase</ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>292061183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>return iOSSQLiteDatabase(m_db).LastRowID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>140890111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>m_iTransactionCt = m_iTransactionCt - 1</SourceLine>
   <SourceLine>if m_iTransactionCt=0 then</SourceLine>
   <SourceLine>Db.Rollback_Transaction</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>m_db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1876441087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_db As iOSSQLiteDatabase</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_db As iOSSQLiteDatabase</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>m_iTransactionCt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>467867647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>m_iTransactionCt As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>m_iTransactionCt As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="540361462">
 <ObjName>DatabaseAdapter</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BeginTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>198699007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub BeginTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>BindValues</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>391198719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BindValues(oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo, dictFieldValues as xojo.Core.Dictionary) As Auto()</SourceLine>
   <SourceLine>dim aroData() as Auto</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Iterate through the fields list.</SourceLine>
   <SourceLine>for i as integer = 0 to aroField.Ubound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//Get the field.</SourceLine>
   <SourceLine>dim oField as TP_ActiveRecord.P.FieldInfo = aroField(i)</SourceLine>
   <SourceLine>dim pi as Xojo.Introspection.PropertyInfo = oField.piFieldProperty</SourceLine>
   <SourceLine>dim a as Auto = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dictFieldValues.value(oField.sFieldName) = a</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oField.IsKey then</SourceLine>
   <SourceLine>if a.IsNull then</SourceLine>
   <SourceLine>aroData.Append "null"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if a.IsInteger then</SourceLine>
   <SourceLine>dim i32 as integer = a</SourceLine>
   <SourceLine>#pragma unused i32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case aroField(i).enFieldType</SourceLine>
   <SourceLine>case DbType.DInteger</SourceLine>
   <SourceLine>dim i32 as integer = a</SourceLine>
   <SourceLine>#pragma unused i32</SourceLine>
   <SourceLine>aroData.Append a</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DSmallInt</SourceLine>
   <SourceLine>dim i32 as integer = a</SourceLine>
   <SourceLine>#pragma unused i32</SourceLine>
   <SourceLine>aroData.Append a</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DDouble</SourceLine>
   <SourceLine>dim d as double = a</SourceLine>
   <SourceLine>#pragma unused d</SourceLine>
   <SourceLine>aroData.Append a</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DDate</SourceLine>
   <SourceLine>dim d as xojo.Core.Date = a</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if d &lt;&gt; nil then</SourceLine>
   <SourceLine>dim s as text = d.ToText</SourceLine>
   <SourceLine>#pragma unused s</SourceLine>
   <SourceLine>aroData.Append a' s.sqlizeText</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>aroData.Append "NULL"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DTime</SourceLine>
   <SourceLine>dim s as Text = a</SourceLine>
   <SourceLine>#pragma unused s</SourceLine>
   <SourceLine>aroData.Append a's.sqlizeText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DTimestamp</SourceLine>
   <SourceLine>dim d as xojo.Core.Date = a</SourceLine>
   <SourceLine>dim s as text = d.ToText</SourceLine>
   <SourceLine>#pragma unused s</SourceLine>
   <SourceLine>aroData.Append a 's.sqlizeText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DBoolean</SourceLine>
   <SourceLine>dim b as boolean = a</SourceLine>
   <SourceLine>if b then</SourceLine>
   <SourceLine>aroData.Append "1"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>aroData.Append "0"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DBlob</SourceLine>
   <SourceLine>dim s as Text = a</SourceLine>
   <SourceLine>#pragma unused s</SourceLine>
   <SourceLine>aroData.Append a's.sqlizeText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DText</SourceLine>
   <SourceLine>dim s as Text = a</SourceLine>
   <SourceLine>#pragma unused s</SourceLine>
   <SourceLine>aroData.Append a's.sqlizeText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DInt64</SourceLine>
   <SourceLine>dim i64 as INT64 = a</SourceLine>
   <SourceLine>#pragma unused i64</SourceLine>
   <SourceLine>aroData.Append a' i64.ToText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case DbType.DFloat</SourceLine>
   <SourceLine>dim d as double = a</SourceLine>
   <SourceLine>#pragma unused d</SourceLine>
   <SourceLine>aroData.Append a' d.ToText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case dbType.dCurrency</SourceLine>
   <SourceLine>dim c as Currency = a</SourceLine>
   <SourceLine>#pragma unused c</SourceLine>
   <SourceLine>aroData.Append a' c.ToText</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break 'unsupported type</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroData</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, aroField() as TP_ActiveRecord.P.FieldInfo, dictFieldValues as xojo.Core.Dictionary</ItemParams>
  <ItemResult>Auto()</ItemResult>
 </Method>
 <Method>
  <ItemName>CommitTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>320292863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CommitTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>749385727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>214671359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As iOSSQLiteDatabase</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "needs to be implemented in subclass" )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>iOSSQLiteDatabase</ItemResult>
 </Method>
 <Method>
  <ItemName>DeleteRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>980232191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DeleteRecord(oRecord as TP_ActiveRecord.Base)</SourceLine>
   <SourceLine>dim sql as Text</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "DELETE FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey</SourceLine>
   <SourceLine>sql = sql  + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oRecord.GUID &lt;&gt; "" then</SourceLine>
   <SourceLine>db.SQLExecute(sql, oRecord.GUID)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>db.SQLExecute(sql, oRecord.id)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetLastInsertID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1637636095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetLastInsertID() As Int64</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( false, "needs to be implemented in subclass" )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>HasTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1355655167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasTable(sTableName as Text) As boolean</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>rs = Db.TableSchema</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>if rs.IdxField(1).TextValue = sTableName then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTableName as Text</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>InsertRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>276226047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub InsertRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Xojo.Core.Dictionary)</SourceLine>
   <SourceLine>#pragma unused dictSavedPropertyValue</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as New Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as Text</SourceLine>
   <SourceLine>dim arsPlaceholder() as Text</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim sPK as Text</SourceLine>
   <SourceLine>dim oPKField as  TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim iCnt as integer = 1</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>sPK = oField.sFieldName</SourceLine>
   <SourceLine>oPKField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName)</SourceLine>
   <SourceLine>arsPlaceholder.Append("?")</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>iCnt = iCnt + 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//NOTE:  Until iOS SQLExecute can handle an array, rather than a Parameter Array we'll have to build the SQL by hand.</SourceLine>
   <SourceLine>dim aroValueArray() as Auto = BindValues(oRecord, aroField, dictFieldValue) // = BindValues(oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as Text</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>arsSQL.append "INSERT INTO " + oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.append "(" + Text.Join(arsField, ",") + ")"</SourceLine>
   <SourceLine>arsSQL.append " VALUES "</SourceLine>
   <SourceLine>arsSQL.append "(" + Text.Join(arsPlaceholder, ",") + ")"</SourceLine>
   <SourceLine>sql = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db.SQLExecuteWithArray(sql,aroValueArray)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iRecordID as Int64 = GetLastInsertID</SourceLine>
   <SourceLine>if oPKField.piFieldProperty.PropertyType.Name = "Text" then</SourceLine>
   <SourceLine>redim arsSQL(-1)</SourceLine>
   <SourceLine>arsSQL.Append "select "</SourceLine>
   <SourceLine>arsSQL.Append sPK</SourceLine>
   <SourceLine>arsSQL.Append "From "</SourceLine>
   <SourceLine>arsSQL.Append oTableInfo.sTableName</SourceLine>
   <SourceLine>arsSQL.Append "Where RowID = "</SourceLine>
   <SourceLine>arsSQL.Append iRecordID.ToText</SourceLine>
   <SourceLine>sql = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = db.SQLSelect(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sRecordID as text = rs.Field(sPK).TextValue</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = sRecordID</SourceLine>
   <SourceLine>oRecord.GUID = sRecordID</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dictFieldValue.Value( oTableInfo.piPrimaryKey.Name ) = iRecordID</SourceLine>
   <SourceLine>oRecord.ID = iRecordID</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Xojo.Core.Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RollbackTransaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1211142143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub RollbackTransaction()</SourceLine>
   <SourceLine>break //Should be called by the Database Adapter Subclass</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SelectList</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>529072127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectList(sTable as Text, sCondition as Text = "", sOrder as Text = "") As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim sSQL as Text = "SELECT * FROM " + sTable + " "</SourceLine>
   <SourceLine>if sCondition&lt;&gt;"" then</SourceLine>
   <SourceLine>sSQL = sSQL + "WHERE " + sCondition</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if sOrder&lt;&gt;"" then</SourceLine>
   <SourceLine>sSQL = sSQL + " ORDER BY " + sOrder</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>sSQL = sSQL + ";"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return SQLSelect(sSQL)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sTable as Text, sCondition as Text = "", sOrder as Text = ""</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1214691327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, iRecordID as int64) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim sql as Text</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = db.SQLSelect(sql, iRecordID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, iRecordID as int64</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SelectRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>209508351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SelectRecord(oRecord as TP_ActiveRecord.Base, sID as Text) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim sql as Text</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "SELECT * FROM " + oTableInfo.sTableName + _</SourceLine>
   <SourceLine>" WHERE " + oTableInfo.sPrimaryKey + "=?1"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs = db.SQLSelect(sql, sID)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, sID as Text</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>SQLExecute</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1979207679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SQLExecute(sql as Text)</SourceLine>
   <SourceLine>db.SQLExecute( sql )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sql as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLSelect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>95004671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLSelect(sql as Text) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet = db.SQLSelect( sql )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>sql as Text</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1302341631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateRecord(oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Xojo.Core.Dictionary)</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dictFieldValue as new Xojo.Core.Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(oRecord) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim arsField() as Text</SourceLine>
   <SourceLine>dim aroField() as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine>dim oPrimaryKeyField as TP_ActiveRecord.P.FieldInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iCnt as integer = 1</SourceLine>
   <SourceLine>for each oField as TP_ActiveRecord.P.FieldInfo in oTableInfo.aroField</SourceLine>
   <SourceLine>if oField.bPrimaryKey then</SourceLine>
   <SourceLine>oPrimaryKeyField = oField</SourceLine>
   <SourceLine>continue</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>arsField.Append(oField.sFieldName + "=?" + iCnt.ToText)</SourceLine>
   <SourceLine>aroField.Append(oField)</SourceLine>
   <SourceLine>icnt = icnt + 1</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>'icnt = icnt + 1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'arsField.Append(oField.sFieldName + "=?" + iCnt.ToText)</SourceLine>
   <SourceLine>aroField.Append(oPrimaryKeyField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//NOTE:  Until iOS SQLExecute can handle an array, rather than a Parameter Array we'll have to build the SQL by hand.</SourceLine>
   <SourceLine>dim aroValueArray() as Auto = BindValues(oRecord, aroField, dictFieldValue) // = BindValues(oRecord, aroField)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sql as Text</SourceLine>
   <SourceLine>sql = "UPDATE " + oTableInfo.sTableName + " SET "</SourceLine>
   <SourceLine>sql = sql + Text.Join(arsField, ",")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim pi as Xojo.Introspection.PropertyInfo = oPrimaryKeyField.piFieldProperty</SourceLine>
   <SourceLine>dim a as Auto = pi.Value(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oPrimaryKeyField.piFieldProperty.PropertyType.Name = "Text" then</SourceLine>
   <SourceLine>sql = sql + " WHERE " + oTableInfo.sPrimaryKey + "=" + a.ToText.SQLizeText</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>sql = sql + " WHERE " + oTableInfo.sPrimaryKey + "=" + a.ToText</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db.SQLExecuteWithArray(sql,aroValueArray)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'store the newly saved property values</SourceLine>
   <SourceLine>dictSavedPropertyValue = dictFieldValue</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>oRecord as TP_ActiveRecord.Base, byref dictSavedPropertyValue as Xojo.Core.Dictionary</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1817862288">
 <ObjName>ActiveRecordException</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>RuntimeException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>612765695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(s as Text)</SourceLine>
   <SourceLine>self.Reason = s</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>s as Text</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>ErrorNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Message</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Reason</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1057624380">
 <ObjName>View</ObjName>
 <ObjContainerID>1972432888</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>345780223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>'Empty</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1088389119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(rs as iOSSQLiteRecordSet)</SourceLine>
   <SourceLine>ReadRecord(rs)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Db</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>137678847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Db() As iOSSQLiteDatabase</SourceLine>
   <SourceLine>return GetDatabaseAdapter.Db</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>iOSSQLiteDatabase</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDatabaseAdapter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1458896895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDatabaseAdapter() As SQLiteDatabaseAdapter</SourceLine>
   <SourceLine>return SQLIteDatabaseAdapter(GetContext.ConnectionAdapter_Get(Introspection.GetType(self)))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>SQLiteDatabaseAdapter</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTableName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>906618879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTableName() As Text</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine>Return oTableInfo.sTableName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>ID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1844531199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ID() As integer</SourceLine>
   <SourceLine>//PROGRAMMER NOTE!</SourceLine>
   <SourceLine>//You are here because you've tried to use the ID of a VIEW</SourceLine>
   <SourceLine>//There is no ID in a view in ActiveRecord (or at least one that you can do anything with).</SourceLine>
   <SourceLine>//Check your stack and see where you came from.</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>555114495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as iOSSQLiteRecordSet)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>dim oTableInfo as TP_ActiveRecord.P.TableInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>oTableInfo = GetTableInfo( Introspection.GetType(self) )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ReadRecord( rs, oTableInfo )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ReadRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>805871615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReadRecord(rs as iOSSQLiteRecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo)</SourceLine>
   <SourceLine>'Read current record out of rs into properties</SourceLine>
   <SourceLine>Dim dictFieldValue As New Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>For Each oFieldInfo As TP_ActiveRecord.P.FieldInfo In oTableInfo.aroField</SourceLine>
   <SourceLine>Dim oField As iOSSQLiteDatabaseField = rs.Field( oFieldInfo.sFieldName )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim pi As Introspection.PropertyInfo = oFieldInfo.piFieldProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If oField Is Nil Then</SourceLine>
   <SourceLine>TP_ActiveRecord.Assert( False, _</SourceLine>
   <SourceLine>"A field needed to populate this record wasn't provided: " + _</SourceLine>
   <SourceLine>oFieldInfo.sFieldName )</SourceLine>
   <SourceLine>Continue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim vProperty As Auto</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If pi.PropertyType.Name = "Double" Then</SourceLine>
   <SourceLine>If oField.Value=Nil Then</SourceLine>
   <SourceLine>vProperty = TP_ActiveRecord.kDoubleNullSentinal</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif pi.PropertyType.Name = "String" Then</SourceLine>
   <SourceLine>Dim s As Text = oField.TextValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vProperty = s</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif pi.PropertyType.IsPrimitive Then</SourceLine>
   <SourceLine>vProperty = oField.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif pi.PropertyType = Xojo.Introspection.GetType( xojo.Core.Date.Now) Then // GetTypeInfo(Date) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>vProperty= oField.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>vProperty= oField.DateValue</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pi.Value(Self) = vProperty</SourceLine>
   <SourceLine>dictFieldValue.Value(pi.Name) = vProperty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rs as iOSSQLiteRecordSet, oTableInfo as TP_ActiveRecord.P.TableInfo</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="716126207">
 <ObjName>DataFile</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>OpenDB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1985368063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OpenDB() As Boolean</SourceLine>
   <SourceLine>#pragma Error "Replace with your database connection"</SourceLine>
   <SourceLine>dim fDB as xojo.IO.FolderItem = Xojo.IO.SpecialFolder.Documents.Child("ActiveRecordiOS.db")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fDB.Exists = false then</SourceLine>
   <SourceLine>dim ex as new NilObjectException</SourceLine>
   <SourceLine>ex.Reason = "The FolderItem passed to the database connection does not exist."</SourceLine>
   <SourceLine>raise ex</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DB = new iOSSQLiteDatabase</SourceLine>
   <SourceLine>DB.DatabaseFile = fDB</SourceLine>
   <SourceLine>// DB.EncryptionKey = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if DB.Connect = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Make any db updates here before registering</SourceLine>
   <SourceLine>TP_DBUpdates.UpdateDB(DB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// iOS does not support multile databases/namespaces</SourceLine>
   <SourceLine>TP_ActiveRecord.Connect(DB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Register</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Register</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>876034047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Register()</SourceLine>
   <SourceLine>// Tables</SourceLine>
   <SourceLine>TP_ActiveRecord.Table(DB, "t_Table", GetTypeInfo(DataFile.t_Table))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Views</SourceLine>
   <SourceLine>TP_ActiveRecord.View(DB, "vw_View", GetTypeInfo(DataFile.vw_View))</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>DB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1112242175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DB As iOSSQLiteDatabase</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DB As iOSSQLiteDatabase</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kMaxReturn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1368119295</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>50</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
</block>
<block type="Folder" ID="241080319">
 <ObjName>App Parts</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Folder" ID="1208537087">
 <ObjName>Extras</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Module" ID="708583581">
 <ObjName>Auto_Extends</ObjName>
 <ObjContainerID>1208537087</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>FindType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2003714047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FindType(extends au as Auto) As Text</SourceLine>
   <SourceLine>dim oTypeInfo as xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(au)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTypeInfo.FullName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>IsBoolean</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>734033919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsBoolean(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "Boolean"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsColor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>953649151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsColor(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "Color"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsCurrency</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1002958847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsCurrency(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "Currency"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsDouble</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1611843583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsDouble(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "Double"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsInteger</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2015078399</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsInteger(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine>dim sType as Text = au.FindType </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case sType</SourceLine>
   <SourceLine>case "Integer", "Int32", "Int64"</SourceLine>
   <SourceLine>Return true</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end select</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsNull</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1655203839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsNull(extends au as Auto) As boolean</SourceLine>
   <SourceLine>dim oTypeInfo as xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(au)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTypeInfo.FullName = "NULL"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsPrimitive</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1712627711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsPrimitive(extends au as Auto) As boolean</SourceLine>
   <SourceLine>dim oTypeInfo as xojo.Introspection.TypeInfo = Xojo.Introspection.GetType(au)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return oTypeInfo.IsPrimitive</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1019156479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsString(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "String"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsText</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>135665663</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsText(extends au as Auto) As boolean</SourceLine>
   <SourceLine>if au.IsPrimitive = false then return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return au.FindType = "Text"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ToText</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1482858495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ToText(extends au as Auto) As Text</SourceLine>
   <SourceLine>dim sType As Text = au.FindType</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select case sType</SourceLine>
   <SourceLine>case "Boolean"</SourceLine>
   <SourceLine>dim b as boolean = au</SourceLine>
   <SourceLine>if b then</SourceLine>
   <SourceLine>return "True"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return "False"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>case "Double"</SourceLine>
   <SourceLine>dim d as double = au</SourceLine>
   <SourceLine>return d.ToText</SourceLine>
   <SourceLine>case "Int32"</SourceLine>
   <SourceLine>dim i as Int32 = au</SourceLine>
   <SourceLine>return i.ToText</SourceLine>
   <SourceLine>case "Int64"</SourceLine>
   <SourceLine>dim i as Int64 = au</SourceLine>
   <SourceLine>return i.ToText</SourceLine>
   <SourceLine>' case "Color"</SourceLine>
   <SourceLine>' dim c as color = au</SourceLine>
   <SourceLine>' return c.ToText</SourceLine>
   <SourceLine>case "Currency"</SourceLine>
   <SourceLine>dim cu as currency = au</SourceLine>
   <SourceLine>return cu.ToText</SourceLine>
   <SourceLine>case "String"</SourceLine>
   <SourceLine>dim s as text = au</SourceLine>
   <SourceLine>return s</SourceLine>
   <SourceLine>case "Text"</SourceLine>
   <SourceLine>dim t as Text = au</SourceLine>
   <SourceLine>return t</SourceLine>
   <SourceLine>case "Xojo.Core.Date"</SourceLine>
   <SourceLine>dim d as xojo.core.date = au</SourceLine>
   <SourceLine>dim t as Text = d.toText(Xojo.Core.Locale.Current, Xojo.Core.Date.formatstyles.Short,   Xojo.Core.Date.formatstyles.Short)</SourceLine>
   <SourceLine>return t</SourceLine>
   <SourceLine>case else</SourceLine>
   <SourceLine>break //This Datatype not found.  Create it!</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends au as Auto</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="121602047">
 <ObjName>SQLiteDatabaseExtends</ObjName>
 <ObjContainerID>1208537087</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Begin_Transaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1290110975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Begin_Transaction(extends db as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>db.SQLExecute("BEGIN TRANSACTION")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Commit_Transaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1998604287</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Commit_Transaction(extends db as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>#Pragma BreakOnExceptions False</SourceLine>
   <SourceLine>//Turning breaks on exceptions off because we may not have an actual transaciton happening.</SourceLine>
   <SourceLine>db.SQLExecute("COMMIT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>FieldSchema</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>391262207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FieldSchema(extends db as iOSSQLiteDatabase, sTable as Text) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim sql as Text = "pragma table_info(" + sTable + ")"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet = db.SQLSelect(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as iOSSQLiteDatabase, sTable as Text</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>GetMethod</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1749716991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMethod(o As Object, name As Text) As Introspection.MethodInfo</SourceLine>
   <SourceLine>dim r as Introspection.MethodInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ti as Introspection.TypeInfo = Introspection.GetType( o )</SourceLine>
   <SourceLine>for each method as Introspection.MethodInfo in ti.Methods</SourceLine>
   <SourceLine>if method.Name = name then</SourceLine>
   <SourceLine>r = method</SourceLine>
   <SourceLine>exit for</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return r</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>o As Object, name As Text</ItemParams>
  <ItemResult>Introspection.MethodInfo</ItemResult>
 </Method>
 <Method>
  <ItemName>Rollback_Transaction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1217585151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Rollback_Transaction(extends db as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>db.SQLExecute("ROLLBACK")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLExecuteWithArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>687738879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SQLExecuteWithArray(Extends db As iOSSQLiteDatabase, sql As Text, values() As Auto)</SourceLine>
   <SourceLine>static method as Introspection.MethodInfo = GetMethod( db, "SQLExecute" )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim params() as Auto</SourceLine>
   <SourceLine>params.Append sql</SourceLine>
   <SourceLine>params.Append values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>method.Invoke( db, params )</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends db As iOSSQLiteDatabase, sql As Text, values() As Auto</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SQLSelectWithArray</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>570968063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SQLSelectWithArray(Extends db As iOSSQLiteDatabase, sql As Text, values() As Auto) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>static method as Introspection.MethodInfo = GetMethod( db, "SQLSelect" )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim params() as Auto</SourceLine>
   <SourceLine>params.Append sql</SourceLine>
   <SourceLine>params.Append values</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim result as auto = method.Invoke( db, params )</SourceLine>
   <SourceLine>return iOSSQLiteRecordSet( result )</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Extends db As iOSSQLiteDatabase, sql As Text, values() As Auto</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>TableSchema</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>543154175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TableSchema(extends db as iOSSQLiteDatabase) As iOSSQLiteRecordSet</SourceLine>
   <SourceLine>dim sql as Text = "SELECT name, type FROM my_db.sqlite_master WHERE type IN ('table', 'view');"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim rs As iOSSQLiteRecordSet = db.SQLSelect(sql)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extends db as iOSSQLiteDatabase</ItemParams>
  <ItemResult>iOSSQLiteRecordSet</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="100075519">
 <ObjName>ActiveRecordClass</ObjName>
 <ObjContainerID>716126207</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Validate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>156547071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Validate(oErrors as TP_ActiveRecord.ValidationErrors)</SourceLine>
   <SourceLine>// Check for errors here. Use this to prevent deletion.</SourceLine>
   <SourceLine>// Append to the oErrors object to cause validation to return false</SourceLine>
   <SourceLine>#pragma unused oErrors</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1732827135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As Text</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM t_Table")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>FindByID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1918550015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FindByID(iID as Integer) As DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>// Use ActiveRecord Load function to get the record</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oRecord.Load(iID) then</SourceLine>
   <SourceLine>return oRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>iID as Integer</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>773011455</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1) As DataFile.ActiveRecordClass()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>dim sBase as Text = DataFile.ActiveRecordClass.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + DataFile.kMaxReturn.ToText + " OFFSET " + iOffset.ToText)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DataFile.DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>584976383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sSQL as Text, aroValues() as Auto) As DataFile.ActiveRecordClass()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine>dim aro() as ActiveRecordClass</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelectWithArray(sSQL,aroValues)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while rs.eof = false</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1164273663</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as Text = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.ActiveRecordClass.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>965488639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sSQL as Text, aroValues() as Auto) As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelectWithArray(sSQL, aroValues)</SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="131753769">
 <ObjName>ActiveRecordBase</ObjName>
 <ObjContainerID>716126207</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>TP_ActiveRecord.Base</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="605638655">
 <ObjName>t_Table</ObjName>
 <ObjContainerID>716126207</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1443827711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As Text</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM t_Table")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>FindByID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>238612479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FindByID(iID as Integer) As DataFile.ActiveRecordClass</SourceLine>
   <SourceLine>// Use ActiveRecord Load function to get the record</SourceLine>
   <SourceLine>dim oRecord as new DataFile.ActiveRecordClass</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if oRecord.Load(iID) then</SourceLine>
   <SourceLine>return oRecord</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>iID as Integer</ItemParams>
  <ItemResult>DataFile.ActiveRecordClass</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1035751423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1) As DataFile.t_Table()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>dim sBase as Text = DataFile.t_Table.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + DataFile.kMaxReturn.ToText + " OFFSET " + iOffset.ToText)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DataFile.DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.t_Table</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.t_Table</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.t_Table()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1598281727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sSQL as Text, aroValues() as Auto) As DataFile.t_Table()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine>dim aro() as t_Table</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = db.SQLSelectWithArray(sSQL,aroValues)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while rs.eof = false</SourceLine>
   <SourceLine>dim oRecord as new DataFile.t_Table</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>DataFile.t_Table()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>665235455</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as Text = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.t_Table.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1983903743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sSQL as Text, aroValues() as Auto) As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelectWithArray(sSQL, aroValues)</SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1291900927">
 <ObjName>vw_View</ObjName>
 <ObjContainerID>716126207</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>DataFile.ActiveRecordBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BaseSQL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>560353279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function BaseSQL(bAsCount as Boolean = false) As Text</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("SELECT")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if bAsCount = false then</SourceLine>
   <SourceLine>arsSQL.Append("*")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>arsSQL.Append("COUNT(*) as iCount")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>arsSQL.Append("FROM vw_View")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>bAsCount as Boolean = false</ItemParams>
  <ItemResult>Text</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1379563519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1) As DataFile.vw_View()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>dim sBase as Text = DataFile.vw_View.BaseSQL</SourceLine>
   <SourceLine>arsSQL.Append(sBase)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// ORDER BY</SourceLine>
   <SourceLine>if sOrder.Trim = "" then</SourceLine>
   <SourceLine>// Set up a default order by</SourceLine>
   <SourceLine>// arsSQL.Append("ORDER BY {default_orderby_field}")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// Order by parameter passed</SourceLine>
   <SourceLine>arsSQL.Append("ORDER BY " + sOrder)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Offset</SourceLine>
   <SourceLine>if iOffset &gt; -1 then</SourceLine>
   <SourceLine>arsSQL.Append("LIMIT " + DataFile.kMaxReturn.ToText + " OFFSET " + iOffset.ToText)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DataFile.DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aroRecords() as DataFile.vw_View</SourceLine>
   <SourceLine>while not rs.EOF</SourceLine>
   <SourceLine>dim oRecord as new DataFile.vw_View</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aroRecords.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aroRecords</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = "", sOrder as Text = "", iOffset as Integer = -1</ItemParams>
  <ItemResult>DataFile.vw_View()</ItemResult>
 </Method>
 <Method>
  <ItemName>List</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2110910463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function List(sSQL as Text, aroValues() as Auto) As DataFile.vw_View()</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine>dim aro() as vw_View</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelectWithArray(sSQL, aroValues)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while rs.eof = false</SourceLine>
   <SourceLine>dim oRecord as new DataFile.vw_View</SourceLine>
   <SourceLine>oRecord.ReadRecord(rs)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>aro.Append(oRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>rs.MoveNext</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return aro</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>DataFile.vw_View()</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1420163071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sCriteria as Text = "") As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   You should not use this method if your query contains user entered data.</SourceLine>
   <SourceLine>//   Using this method with user entered data could expose you to SQL injection attacks.</SourceLine>
   <SourceLine>dim arsSQL() as Text</SourceLine>
   <SourceLine>arsSQL.Append(DataFile.vw_View.BaseSQL(true))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Criteria</SourceLine>
   <SourceLine>if sCriteria.Trim &lt;&gt; "" then</SourceLine>
   <SourceLine>arsSQL.Append("WHERE " + sCriteria)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Fetch</SourceLine>
   <SourceLine>dim sSQL as Text = Text.Join(arsSQL, " ")</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sCriteria as Text = ""</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ListCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>310355967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function ListCount(sSQL as Text, aroValues() as Auto) As Integer</SourceLine>
   <SourceLine>// SQL Injection Note:</SourceLine>
   <SourceLine>//   Use this method if your query contains user entered data</SourceLine>
   <SourceLine>//   Using this method will help prevent SQL injection attacks.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = DB.SQLSelectWithArray(sSQL, aroValues)</SourceLine>
   <SourceLine>return rs.Field("iCount").IntegerValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>sSQL as Text, aroValues() as Auto</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="IOSView" ID="1689186303">
 <ObjName>LaunchScreen</ObjName>
 <ObjContainerID>241080319</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>iosView</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <PropertyVal Name="LargeTitleMode">2</PropertyVal>
 <PropertyVal Name="Title"></PropertyVal>
 <PropertyVal Name="TabTitle"></PropertyVal>
 <PropertyVal Name="TabIcon"></PropertyVal>
 <PropertyVal Name="NavigationBarVisible">False</PropertyVal>
 <PropertyVal Name="BackButtonTitle"></PropertyVal>
 <PropertyVal Name="Top">0</PropertyVal>
 <PropertyVal Name="Left">0</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackButtonTitle</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>NavigationBarVisible</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabIcon</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>iOSImage</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>TabTitle</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LargeTitleMode</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>2</PropertyValue>
   <ItemType>LargeTitleDisplayModes</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Automatic</ItemDef>
    <ItemDef>1 - Always</ItemDef>
    <ItemDef>2 - Never</ItemDef>
   </Enumeration>
  </ViewProperty>
 </ViewBehavior>
 <DeviceType>0</DeviceType>
 <Orientation>0</Orientation>
</block>
<block type="Module" ID="2019680067">
 <ObjName>TP_DBUpdates</ObjName>
 <ObjContainerID>1208537087</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CreateVersionTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1725845503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CreateVersionTable(toLocalDB as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>toLocalDB.Begin_Transaction</SourceLine>
   <SourceLine>toLocalDB.SQLExecute(kCreateVersionTableSQLite)</SourceLine>
   <SourceLine>toLocalDB.Commit_Transaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1061251071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDBVersion(toLocalDB as iOSSQLiteDatabase) As Integer</SourceLine>
   <SourceLine>dim sSQL as Text = "SELECT Max(dbversionnumber) AS CurrentVersionCode FROM t_tp_dbversion"</SourceLine>
   <SourceLine>dim rs as iOSSQLiteRecordSet = toLocalDB.SQLSelect(sSQL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return rs.Field("CurrentVersionCode").IntegerValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as iOSSQLiteDatabase</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>SetDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1884420095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetDBVersion(toLocalDB as iOSSQLiteDatabase, iVersion as Integer)</SourceLine>
   <SourceLine>dim sSQL as Text = "INSERT INTO t_tp_dbversion(dbversionnumber) VALUES (" + iVersion.ToText + ");"</SourceLine>
   <SourceLine>toLocalDB.SQLExecute(sSQL)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as iOSSQLiteDatabase, iVersion as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateDB</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>476174335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateDB(toLocalDB as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>// Create the version table if necessary</SourceLine>
   <SourceLine>CreateVersionTable(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim iDBVersion as Integer = GetDBVersion(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If the version is current we're done</SourceLine>
   <SourceLine>if iDBVersion &gt;= kDBVersion then return</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>toLocalDB.Begin_Transaction</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This example is the base for how this update function works</SourceLine>
   <SourceLine>// Repeat this if block for each version. We recommend using</SourceLine>
   <SourceLine>// a different method for each version update, this will help</SourceLine>
   <SourceLine>// keep your code clean and organized.</SourceLine>
   <SourceLine>if iDBVersion &lt; 1 then UpdateVersion_001(toLocalDB)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// After checking for updates, set the current version</SourceLine>
   <SourceLine>SetDBVersion(toLocalDB, kDBVersion)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>toLocalDB.Commit_Transaction</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateVersion_001</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2042689535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateVersion_001(toLocalDB as iOSSQLiteDatabase)</SourceLine>
   <SourceLine>// This is an example function for updating the database</SourceLine>
   <SourceLine>// Use it as a template for updates to the database</SourceLine>
   <SourceLine>#pragma unused toLocalDB</SourceLine>
   <SourceLine>// toLocalDB.SQLExecuteRaiseOnError("{SQL Statement}")</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>toLocalDB as iOSSQLiteDatabase</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kCreateVersionTableSQLite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>288784383</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>6</ItemType>
  <ItemDef><Hex bytes="182">435245415445205441424C45204946204E4F54204558495354532020745F74705F646276657273696F6E20280A0920646276657273696F6E5F696420494E5445474552204E4F54204E554C4C205052494D415259204B4559204155544F494E4352454D454E542C0A092064626461746574696D652054494D455354414D502044454641554C542043555252454E545F54494D455354414D502C0A0920646276657273696F6E6E756D62657220494E54454745520A293B</Hex></ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>kDBVersion</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1815916543</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
</block>
<block type="UIState" ID="0">
 <WarningPreferences>
  <ItemName>5</ItemName>
  <ItemData>0</ItemData>
  <ItemName>6</ItemName>
  <ItemData>0</ItemData>
  <ItemName>7</ItemName>
  <ItemData>0</ItemData>
  <ItemName>14</ItemName>
  <ItemData>0</ItemData>
 </WarningPreferences>
 <IOSDebugDevice></IOSDebugDevice>
 <IOSArchitecture>13</IOSArchitecture>
 <StudioWindowState>
  <EditBounds><Rect left="232" top="104" width="1477" height="1070"/></EditBounds>
  <WindowMaximized>0</WindowMaximized>
  <Editors>
   <EditorCount>1</EditorCount>
   <Editor>
    <EditorIndex>0</EditorIndex>
    <EditorLocation>DataFile.OpenDB</EditorLocation>
    <EditorPath></EditorPath>
    <EditingPartID>716126207</EditingPartID>
    <EditorPath></EditorPath>
   </Editor>
   <SelectedTab>0</SelectedTab>
  </Editors>
 </StudioWindowState>
</block>
</RBProject>
